{{/*# Copyright 2023 Open Text.*/}}
apiVersion: v1
kind: Service
metadata:
  name: itom-odl-pt-data-access
  labels:
    name: itom-odl-pt-data-access
spec:
  ports:
    - port: 8443
      protocol: TCP
      name: itom-odl-pt-data-access-https
      targetPort: 8443
  selector:
    name: itom-odl-pt-data-access
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: itom-odl-pt-data-access
  labels:
    name: itom-odl-pt-data-access
  annotations:
    {{- if .Values.global.tlsTruststore }}
    configmap.reloader.stakater.com/reload: {{.Values.global.tlsTruststore | quote }}
    {{- end}}
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
spec:
  selector:
    matchLabels:
      name: itom-odl-pt-data-access
  serviceName: itom-odl-pt-data-access
  replicas: {{ .Values.deployment.replicas }}
  template:
    metadata:
      labels:
        name: itom-odl-pt-data-access
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      serviceAccountName: itom-odl-pt
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      terminationGracePeriodSeconds: 30
      initContainers:
        {{- include "helm-lib.waitForVault" . | nindent 8 }}
        {{- include "helm-lib.containers.vaultInit" (dict "certNames" (printf "Common_Name:itom-odl-pt-data-access,Additional_SAN:%s/itom-odl-pt-data-access/itom-odl-pt-data-access.%s" .Values.global.externalAccessHost  .Release.Namespace) "Values" .Values) | nindent 8 }}
      containers:
        {{ $apHost := include "helm-lib.getAplsHost" . | default "itom-autopass-lms" }}
        {{ $apPort := include "helm-lib.getAplsPort" . | default 5814 }}
        - name: itom-odl-pt-data-access
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.dataAccess.image }}:{{ .Values.dataAccess.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
            - containerPort: 8443
            - containerPort: 8080
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/
              port: 8443
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/
              port: 8443
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 5
            failureThreshold: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["CHOWN", "DAC_OVERRIDE", "FSETID", "FOWNER", "MKNOD", "SETGID", "SETUID", "SETFCAP", "SETPCAP", "NET_BIND_SERVICE", "SYS_CHROOT", "KILL", "AUDIT_WRITE","NET_RAW"]
          env:
            - name: DEFAULT_TENANT
              value: {{ (((.Values.global.idm).additionalSeededOrg).name) | default "Provider" | quote }}
            - name: SERVICE_ID
              value: "itom-odl-pt-data-access"
            - name: SERVICE_NAME
              value: "ITOM ODL PT Data Access"
            - name: ZK_HOSTNAME
              value: "itom-zookeeper-client-svc.{{.Release.Namespace}}"
            - name: ZK_PORT
              value: "2281"
            - name: ZK_NAMESPACE
              value: "nom"
            - name: ZK_USE_SSL
              value: "true"
            - name: NOM_ZK_ADMIN_PASSWORD_KEY
              value: NOM_ZK_ADMIN_PASSWORD_VAULT_KEY
            - name: APLS_HOST
              value: {{ $apHost | quote }}
            - name: APLS_PORT
              value: {{ $apPort | quote }}
{{/*            # This product id changes only when there is change in license pd file*/}}
            - name: NOM_PRODUCT_ID
              value: {{ .Values.global.nom.nomProductId }}
            - name: LICENSE_CHECK_INTERVAL
              value: "15"
            - name: MAX_METRIC_FIELDS_FOR_GROUPBY_API
              value: {{ .Values.api.maxMetricFields | quote }}
            - name: MAX_GROUPBY_ATTRIBUTES_FOR_GROUPBY_API
              value: {{ .Values.api.maxGroupByAttr | quote }}
            - name: ENABLE_MULTI_DEPLOYMENT
              value: {{ .Values.enableMultiDeployment | quote }}
            - name: MAX_NO_OF_INSTANCES
              value: {{ .Values.api.maxInstances | quote }}
            - name: MAX_NO_OF_NODE_GROUPS
              value: {{ .Values.api.maxNodeGroups | quote }}
            {{- if (((.Values.global.services).opticReporting).deploy) }}
            {{- if .Values.global.vertica.embedded }}
            - name: METRIC_SCHEMA
              value: {{ printf "mf_shared_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
            - name: COSO_DATABASE_SCHEMA
              value: {{ printf "mf_shared_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
{{/*            # Vertica Database Specific Environment Variables*/}}
            - name: COSO_DATABASE_HOST
              value: "itom-di-vertica-svc"
            - name: COSO_DATABASE_PORT
              value: "5444"
            {{- if not (and .Values.global.services.nnmi.deploy .Values.global.services.na.deploy) }}
            - name: COSO_DATABASE_EXTERNALHOST
              value: {{ .Values.global.externalAccessHost | quote }}
            - name: COSO_DATABASE_NODEPORT
              value: {{ .Values.global.vertica.nodePort | quote }}
            {{- end }}
            - name: COSO_DATABASE_SSL
              value: "true"
            - name: COSO_DATABASE_DB
              value: "itomdb"
            - name: COSO_DATABASE_USER
              value: "dbadmin"
            - name: COSO_DATABASE_PASSWORD_KEY
              value: "ITOMDI_DBA_PASSWORD_KEY"
            - name: COSO_DATABASE_RW_USER
              value: "dbadmin"
            - name: COSO_DATABASE_RW_PASSWORD_KEY
              value: "ITOMDI_DBA_PASSWORD_KEY"
            {{- else }}
            - name: METRIC_SCHEMA
              value: {{ printf "mf_shared_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
            - name: COSO_DATABASE_SCHEMA
              value: {{ printf "mf_shared_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
{{/*            # Vertica Database Specific Environment Variables*/}}
            - name: COSO_DATABASE_HOST
              value: {{ required "Must provide Vertica host" .Values.global.vertica.host | quote }}
            - name: COSO_DATABASE_PORT
              value: {{ required "Must provide Vertica port" .Values.global.vertica.port | quote }}
            - name: COSO_DATABASE_SSL
              value: {{ .Values.global.vertica.tlsEnabled | quote }}
            - name: COSO_DATABASE_DB
              value: {{ required "Must provide Vertica DB name" .Values.global.vertica.db | quote }}
            - name: COSO_DATABASE_USER
              value: {{ required "Must provide Vertica user name with read-only access" .Values.global.vertica.rouser | quote }}
            - name: COSO_DATABASE_PASSWORD_KEY
              value: {{ required "Must provide Vertica password key for vertica read-only access" .Values.global.vertica.rouserkey | quote }}
            - name: COSO_DATABASE_RW_USER
              value: {{ required "Must provide Vertica user name with read-write access" .Values.global.vertica.rwuser | quote }}
            - name: COSO_DATABASE_RW_PASSWORD_KEY
              value: {{ required "Must provide Vertica password key for read-write access" .Values.global.vertica.rwuserkey | quote }}
            {{- end }}
            - name: COSO_DB_METADATA_SCHEMA
              value: {{ printf "itom_di_metadata_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
            - name: COSO_DB_CONFIG_SCHEMA
              value: {{ printf "itom_di_configuration_%s_%s" .Values.global.di.tenant .Values.global.di.deployment | quote }}
            - name: COSO_DATABASE_CONNECTION_MIN_IDLE
              value: "10"
            - name: COSO_DATABASE_CONNECTION_MAX_IDLE
              value: "10"
            - name: COSO_DATABASE_CONNECTION_TOTAL
              value: "20"
            - name: COSO_DATABASE_RW_CONNECTION_MIN_IDLE
              value: "6"
            - name: COSO_DATABASE_RW_CONNECTION_MAX_IDLE
              value: "6"
            - name: COSO_DATABASE_RW_CONNECTION_TOTAL
              value: "12"
            - name: COSO_DATABASE_CONNECTION_TIMEOUT_SEC
              value: "20"
            - name: ITOM_CDF_EXTERNAL_SSL_CERTS_DIR
              value: /var/opt/OV/certs
            - name: LOG_PROPERTIES_LISTENER_ENABLED
              value: "true"
            {{- end }}
            - name: JVM_HEAP_MIN
              value: 512m
            - name: JVM_HEAP_MAX
              value: 2048m
            - name: RAW_DATA_CHECK_TIME_BOUND
              value: {{ .Values.api.rawDataExistCheckTimeBound | quote }}
            - name: RAW_DATA_CHECK_TIME_RANGE_HOURS
              value: {{ .Values.api.rawDataExistCheckTimeRangeHours | quote }}

            {{- if and (.Values.global.services.perfTroubleshooting.enable) ( .Values.sybase.host) }}
            - name: SYBASEIQ_DATABASE_HOST
              value: {{ .Values.sybase.host | quote }}
            - name: SYBASEIQ_DATABASE_PORT
              value: {{ .Values.sybase.port | quote }}
            - name: SYBASEIQ_DATABASE_DB
              value: {{ .Values.sybase.db | quote }}
            - name: SYBASEIQ_DATABASE_USER
              value: {{ .Values.sybase.user | quote }}
            - name: SYBASEIQ_DATABASE_PASSWORD_KEY
              value: "SYBASE_DB_PASSWORD_KEY"
            - name: SYBASEIQ_DATABASE_CONNECTION_MIN_IDLE
              value: "10"
            - name: SYBASEIQ_DATABASE_CONNECTION_MAX_IDLE
              value: "10"
            - name: SYBASEIQ_DATABASE_CONNECTION_TOTAL
              value: "20"
            - name: SYBASEIQ_DATABASE_CONNECTION_TIMEOUT_SEC
              value: "20"
            {{- end }}
            - name: IDM_SVC_SERVICE_HOST
              value: {{ include "helm-lib.getInternalIdmHost" . | default  (printf "%s%s.%s" .Values.deployment.idm.namePrefix .Values.deployment.idm.service .Release.Namespace) }}
            - name: IDM_SVC_SERVICE_PORT
              value: {{ include "helm-lib.getInternalIdmPort" . | default .Values.deployment.idm.port | quote }}
            - name: NOM_IDM_ADMIN_USER
              value: {{ .Values.deployment.idm.user | quote }}
            - name: NOM_ADMIN_PASSWORD_KEY
              value: {{ .Values.deployment.idm.passwordKey | quote }}
            {{- if (and (.Values.global.services.na.enable) (or .Values.global.services.na.deploy .Values.global.services.na.externalNa.host)) }}
            - name: NA_INSTALLED
              value: "true"
            {{- end }}
            {{- if (and (((.Values.global.services).opticReporting).deploy) (not (((.Values.global.services).opticDataLake).deploy))) }}
            - name: REMOTE_EXTERNAL_HOST
              value: {{ include "helm-lib.getExternalBvdHost" . | default .Values.global.externalAccessHost | quote }}
            - name: REMOTE_EXTERNAL_PORT
              value: {{ include "helm-lib.getExternalBvdPort" . | default .Values.global.externalAccessPort | quote }}
            {{- end }}
            - name: API_GATEWAY_SERVICE_NAME
              value: "itom-pt-api-server"
            - name: API_GATEWAY_PORT
              value: "8443"
            {{- include "helm-lib.getTlsEnvVars" . | nindent 12 }}
          volumeMounts:
          - name: itom-odl-pt-data-access-log-vol
            mountPath: /var/opt/OV/log
            subPath: itom-odl-pt-data-access
          - name: itom-odl-pt-data-access-data-vol
            mountPath: /var/opt/OV
            subPath: itom-odl-pt-data-access
          {{- if .Values.global.tlsTruststore }}
          - name: certs-volume
            mountPath: /var/opt/OV/certs
          {{- else }}
          - name: itom-odl-pt-data-access-data-vol
            mountPath: /var/opt/OV/certs
            subPath: nom/certificates
          {{- end }}
          - name: vault-token
            mountPath: /var/run/secrets/boostport.com
          - name: temp
            mountPath: /tmp
        {{- include "helm-lib.containers.vaultRenew" (dict "Values" .Values) | nindent 8 }}
      restartPolicy: Always
      volumes:
      - name: itom-odl-pt-data-access-data-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "dataVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: itom-odl-pt-data-access-log-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      {{- if .Values.global.tlsTruststore }}
      - name: certs-volume
        configMap:
          name: {{ .Values.global.tlsTruststore }}
      {{- end }}
      - name: vault-token
        emptyDir: {}
      - name: temp
        emptyDir: {}
