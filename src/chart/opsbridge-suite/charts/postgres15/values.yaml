# Copyright 2018-2023 Open Text.
#
# The only warranties for products and services of Open Text and its affiliates and licensors (“Open Text”) are as may be
# set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed
# as constituting an additional warranty. Open Text shall not be liable for technical or editorial errors or omissions
# contained herein. The information contained herein is subject to change without notice.
#
# Except as specifically indicated otherwise, this document contains confidential information and a valid license is
# required for possession, use or copying. If this work is provided to the U.S. Government, consistent with
# FAR 12.211 and 12.212, Commercial Computer Software, Computer Software Documentation, and Technical Data for
# Commercial Items are licensed to the U.S. Government under vendor’s standard commercial license.
# If dbPassword is set, it will be used, otherwise a random DB password (10 character
# alphanumeric) will be generated.
dbPassword:

# Consuming charts can declare a namePrefix which will cause all names (service names, deployment names, etc.)
# to be prefixed with the specified value, instead of default "itom" prefix.  This enables multiple
# instances of the chart in a single namespace.
#namePrefix:

# Consuming charts can declare they want backwards-compatible service name, i.e. prefixed with
# Helm "Release.Name".
#
#backwardsCompatServiceName: false

deployment:
  # if "true" then each created user will have a unique (same as user name) DB instance
  multipleDbs: false

postgres:
  ## @param enableIPv6 Enable IPv6 configuration
  enableIPv6: "true"
  # postgres.dbaUsers is a USER:KEY,USER2:KEY2,USER3,KEY3,... string.  For each
  # user/key specified, these users are created in the Postgres database at
  # startup.  The default value is "postgres:ITOM_DB_PASSWD_KEY".
  dbaUsers:

  # postgres.dbName is the name of the database to create/use
  dbName: postgres
  mountPath: /var/pgdata
  pgdata: /var/pgdata/data
  volumePermissions:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 1Gi
    containerSecurityContext:
      runAsUser: 0
      runAsNonRoot: false
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

  # Image definitions
  image: itom-postgresql
  imageTag: 15-00178
  tlsEnabled: true
  configuration:
    default.autovacuum: "on"
    default.autovacuum_naptime: "300"
    default.autovacuum_vacuum_cost_delay: "50"
    default.checkpoint_segments: "8"
    default.effective_cache_size: "4GB"
    default.maintenance_work_mem: "256MB"
    default.max_connections: "1000"
    default.max_prepared_transactions: "100"
    default.random_page_cost: "0.1"
    default.seq_page_cost: "0.1"
    default.shared_buffers: "4GB"
    default.vacuum_cost_delay: "10"
    default.wal_buffers: "1MB"
    default.work_mem: "256MB"
    default.log_directory: "pg_log"
    default.log_filename: "postgresql-%Y-%m-%d_%H%M%S.log"
    default.log_line_prefix: "%m:%d:%p:%x"
    default.log_rotation_age: "1d"
    default.log_rotation_size: "10MB"
    default.password_encryption: "scram-sha-256"

persistence:
  dbVolumeClaim:
  subPath:

# Used to inject a global Postgres instance into multiple Helm charts.
global:

  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dbVolumeClaim is a persistent volume claim for storing database files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  persistence:
    enabled: false
    dbVolumeClaim:

  # if isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false

  # REQUIRED: The externalAccessHost is the end-point for the service
  externalAccessHost: 
  # REQUIRED: The externalAccessPort
  externalAccessPort:

  # User ID and group ID to run as
  securityContext:
    user: "1999"
    fsGroup: "1999"

  docker:
    registry: localhost:5000
    orgName: hpeswitom
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  # Global image definitions
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.19.0-0026
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.19.0-0026
  toolsBase:
    image: itom-tools-base
    imageTag: 1.4.0-0018

  rbac:
    # Specifies whether a ServiceAccount should be created
    serviceAccountCreate: true
    # Specifies whether RBAC resources should be created
    roleCreate: true

  cluster:
    k8sProvider: cdf
    tolerations: []

resources:
  limits:
    cpu: 1500m
    memory: 6Gi
  requests:
    cpu: 500m
    memory: 4Gi

# Uncomment only if you want a different node selector for the subchart
# nodeSelector: {}
  # label_name_one: value
  # label_name_two: value

tolerations: []
affinity: {}

labels: {}
