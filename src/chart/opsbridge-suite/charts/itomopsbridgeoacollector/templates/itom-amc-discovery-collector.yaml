{{/*# Copyright 2023 Open Text.*/}}
{{/*#*/}}
{{/*#  The only warranties for products and services of Open Text and its affiliates and licensors (“Open Text”) are as may be set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed as constituting an additional warranty. Open Text shall not be liable for technical or editorial errors or omissions contained herein. The information contained herein is subject to change without notice.*/}}
{{ if .Values.global.isAgentMetricCollectorEnabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
  name: itom-monitoring-oa-discovery-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: itom-monitoring-oa-discovery-collector-app
spec:
  replicas: {{ .Values.oacollector.config.discreplicaCount }}
  selector:
    matchLabels:
      app: itom-monitoring-oa-discovery-collector-app
  template:
    metadata:
      labels:
        app: itom-monitoring-oa-discovery-collector-app
        service: itom-monitoring-oa-discovery-collector-svc
        app.kubernetes.io/name: itom-monitoring-oa-discovery-collector
        app.kubernetes.io/managed-by: {{.Release.Name}}
        app.kubernetes.io/version: {{ .Values.oacollector.imageTagDisc }}
        itom.microfocus.com/capability: OA_Discovery_Collector
        tier.itom.microfocus.com/backend: backend
        itom.microfocus.com/description: OA_Discovery_Collector
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}-discovery
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      initContainers:
        {{- include "helm-lib.waitFor" ( dict "service" "cs-redis" "port" "6380" "Values" .Values) | nindent 8 }}
        {{- $certNames := printf "Common_Name:itom-monitoring-oa-discovery-collector,Additional_SAN:itom-monitoring-oa-discovery-collector/itom-monitoring-oa-discovery-collector.%s/itom-monitoring-oa-discovery-collector.%s.svc.cluster.local/itom-monitoring-oa-discovery-collector/itom-monitoring-oa-discovery-collector.%s/itom-monitoring-oa-discovery-collector.%s.svc.cluster.local/itom-monitoring-oa-discovery-collector-svc/itom-monitoring-oa-discovery-collector-svc.%s/itom-monitoring-oa-discovery-collector-svc.%s.svc.cluster.local/itom-monitoring-oa-discovery-collector-svc/itom-monitoring-oa-discovery-collector-svc.%s/itom-monitoring-oa-discovery-collector-svc.%s.svc.cluster.local,Secret:itom-monitoring-oa-discovery-collector-metrics-client,UpdateSecret:true,File_Name:server" .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace -}}

       {{- include "helm-lib.containers.vaultInit" (dict "containerName" "install" "certNames" $certNames "Values" .Values) | nindent 8 }}
      containers:
        {{- include "helm-lib.containers.vaultRenew" (dict "containerName" "kubernetes-vault-renew" "Values" .Values) | nindent 8 }}    
        - name: itom-monitoring-oa-discovery-collector
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.oacollector.imageDisc }}:{{ .Values.oacollector.imageTagDisc }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
          - containerPort: 40006
            name: mcoll-amcc
            protocol: TCP
          - containerPort: 8080
            name: prometheus-amcc
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            - name: oa-discovery-collector-log-volume
              mountPath: /logs
              subPath: cloud-monitoring/oa/discovery/collector
            - name: oa-discovery-collector-conf-volume
              mountPath: /content
              subPath: oa-collector/content
            - name: conf
              mountPath: /config
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_CONTAINER_NAME
            value: itom-monitoring-oa-discovery-collector
          - name: LOG_LEVEL
            value: INFO
        - name: itom-monitoring-job-fetcher
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.monitoringService.jobFetcher.image | default .Values.jobfetcher.image }}:{{ .Values.global.monitoringService.jobFetcher.imageTag | default .Values.jobfetcher.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
          - containerPort: 40005
            name: mcoll-amcj
            protocol: TCP
          - containerPort: 41001
            name: prometheus-amcj
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: conf
              mountPath: /config
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            - name: oa-discovery-collector-log-volume
              mountPath: /logs
              subPath: cloud-monitoring/oa/discovery/job-fetcher 
            - name:  oa-discovery-collector-conf-volume
              mountPath: /service/collector-config
              subPath: itom-opsb-monitoring-admin/collector-config
          env:
          - name: "PROMETHEUS_METRICS_PORT"
            value: "41001"
          - name: "MAX_COLLECTION_TASK"
            value: "1"
          - name: "REDIS_URL"
            value: {{ .Values.redis.svcname }}:{{ .Values.redis.port }}
          - name: "REDIS_SRV_BASE_NAME"
            value: {{ .Values.redis.srvbasename }}
          - name: "REDIS_PWD_KEY"
            value: {{ .Values.redis.passwdkey }}
          - name: "SUBSCRIPTION_NAME"
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: "COLLECTION_SCHEDULER_URL"
            value: {{ .Values.collectionscheduler.svcname }}:{{ .Values.collectionscheduler.port }}
          - name: "CDF_NAMESPACE"
            value: {{ .Release.Namespace | quote }}
          - name: "VAULT_SECRET_DIR"
            value: /var/run/secrets/boostport.com
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_CONTAINER_NAME
            value: itom-monitoring-job-fetcher
        - name: itom-monitoring-result-processor
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.monitoringService.resultProcessor.image | default .Values.resultprocessor.image }}:{{ .Values.global.monitoringService.resultProcessor.imageTag | default .Values.resultprocessor.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
          - containerPort: 40007
            name: mcoll-amcr
            protocol: TCP
          - containerPort: 41002
            name: prometheus-amcr
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            - name: oa-discovery-collector-log-volume
              mountPath: /logs
              subPath: cloud-monitoring/oa/discovery/result-processor
          env:
          - name: "ENABLE_BATCHING"
            value: "false"
          - name: "DI_SERVER_URL"
            value: {{ .Values.global.desProtocol | default "https" }}://{{ .Values.global.opsBridge.externalAccessHost | default .Values.oacollector.config.desreceiversvc }}:{{ .Values.global.opsBridge.desExternalPort | default .Values.oacollector.config.desreceiverport }}/itomdi/receiver
          - name: IDM_USER
            value: {{ .Values.global.idm.integrationUser | default "integration_admin" | quote }}
          - name: IDM_KEY
            value: {{ .Values.global.idm.integrationUserKey | default "idm_integration_admin_password" | quote }}
          - name: IDM_ADDR
            value: https://{{ .Values.global.idm.serviceName | default "itom-idm-svc" }}:{{ .Values.global.idm.internalPort | default "18443" }}/idm-service/v3.0/tokens
          {{- if (((.Values.global).opsBridge).externalAccessHost) }}
          - name: "SAAS_EXTERNAL_HOST"
            value: {{ required "Required value is not defined: .Values.global.opsBridge.externalAccessHost" .Values.global.opsBridge.externalAccessHost | quote }}
          - name: "SAAS_EXTERNAL_PORT"
            value: {{ required "Required value is not defined: .Values.global.opsBridge.externalAccessPort" .Values.global.opsBridge.externalAccessPort | quote }}
          {{- if (((.Values.global).opsBridge).proxy.host) }}
          - name: HTTP_PROXY
            value: {{ .Values.global.opsBridge.proxy.host }}:{{ .Values.global.opsBridge.proxy.port }}
          - name: HTTPS_PROXY
            value: {{ .Values.global.opsBridge.proxy.host }}:{{ .Values.global.opsBridge.proxy.port }}
          - name: NO_PROXY
            value: {{ .Values.global.opsBridge.noproxy | default "localhost,127.0.0.1,itom-monitoring-admin-svc,itom-idm-svc" }}
          - name: PROXY_USER
            value: {{ .Values.global.opsBridge.proxy.user }}
          - name: PROXY_PASSWORD
            value: {{ .Values.global.opsBridge.proxy.password }}
          {{- end }}
          {{- end }}
          - name: "DEFAULT_HTTP_TIMEOUT"
            value: {{ .Values.resultprocessor.config.defaultHTTPTimeout | quote }}
          - name: "PROMETHEUS_METRICS_PORT"
            value: "41002"
          - name: "SUBSCRIPTION_NAME"
            value: {{ .Values.resultprocessor.config.subscriptionname | quote  }}
          - name: "COSO_SUBSCRIPTION"
            value: {{ .Values.oacollector.config.cososubscription  }}
          - name: "VAULT_SECRET_DIR"
            value: /var/run/secrets/boostport.com
          - name: "REDIS_URL"
            value: {{ .Values.redis.svcname }}:{{ .Values.redis.port }}
          - name: "REDIS_SRV_BASE_NAME"
            value: {{ .Values.redis.srvbasename }}
          - name: "REDIS_PWD_KEY"
            value: {{ .Values.redis.passwdkey }}
          - name: "REDIS_SET_PREFIX"
            value: "monitor:"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_CONTAINER_NAME
            value: itom-monitoring-result-processor
      {{- with (coalesce .Values.nodeSelector .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:   
      - name: vault-token
        emptyDir: {}
      - name: oa-discovery-collector-log-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: oa-discovery-collector-conf-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: conf
        configMap:
          name: itom-oa-discovery-cm
          defaultMode: 0755
{{- end }}
