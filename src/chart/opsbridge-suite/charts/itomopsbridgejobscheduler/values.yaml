# Copyright 2023 Open Text.

# The only warranties for products and services of Open Text and its affiliates
# and licensors ("Open Text") are as may be set forth in the express warranty
# statements accompanying such products and services. Nothing herein should be
# construed as constituting an additional warranty. Open Text shall not be
# liable for technical or editorial errors or omissions contained herein. The
# information contained herein is subject to change without notice.

jobscheduler:
  image: "itom-monitoring-job-scheduler"
  imageTag: 24.2-106
  config:
    replicaCount: 1
    serviceJvmArgs: "-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError"
    permissibleRequestLimit: "6000"
  resources:
    limits:
      cpu: "2"
      memory: "500Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"
redis:
  svcname: "cs-redis"
  port: "6380"
  srvbasename: cs-redis
  passwdkey: redis_pwd
deployment:
  rbac:
    serviceAccount: itom-opsb-cloud-job-scheduler-sa
global:
  busybox:
    image: itom-busybox
    imageTag: 1.32.0-006
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0011
  securityContext:
    user: "1999"
    fsGroup: "1999"
  rbac:
    serviceAccountCreate: true
    roleCreate: true    
  nodeSelector: {}
  persistence:
    enabled: false
    configVolumeClaim: 
    logVolumeClaim:
  suiteLabel: Worker
  suiteLabelValue: label

  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: hpeswitom
    imagePullPolicy: IfNotPresent
  vault:
    realmList: "RE:365"

  # Global image references for vault
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.8.0-004
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.8.0-004

  prometheus:
    deployPrometheusConfig: true      #true = deploy scraping rules (ServiceMonitor, PodMonitor) and alerts (PrometheusRule)
    deployGrafanaConfig: true         #true = deploy configmaps defining the Grafana dashboards
    prometheusSelector:               #define the label(s) that Prometheus looks for when discovering rules.
      prometheus_config: "1"
    grafanaSelector:                  #define the label(s) that Grafana looks for when discovering dashboards.
      grafana_dashboard: "1"
