{{/*# Copyright 2023 Open Text.*/}}

{{/*# The only warranties for products and services of Open Text and its affiliates*/}}
{{/*# and licensors ("Open Text") are as may be set forth in the express warranty*/}}
{{/*# statements accompanying such products and services. Nothing herein should be*/}}
{{/*# construed as constituting an additional warranty. Open Text shall not be*/}}
{{/*# liable for technical or editorial errors or omissions contained herein. The*/}}
{{/*# information contained herein is subject to change without notice.*/}}

{{- if or (ne .Values.global.monitoringService.isStaticThresholdingEnabled false) (ne .Values.global.monitoringService.isDynamicThresholdingEnabled false) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: opsb-ca-certificate
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
  name: itom-monitoring-threshold-processor
  namespace: {{ .Release.Namespace }}
  labels:
    app: itom-monitoring-threshold-processor-app
spec:
  replicas: {{ .Values.thpevtsvc.config.replicaCount }}
  selector:
    matchLabels:
      app: itom-monitoring-threshold-processor-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1  
  template:
    metadata:
      labels:
        app: itom-monitoring-threshold-processor-app
        service: itom-monitoring-threshold-processor-svc
        app.kubernetes.io/name: itom-monitoring-threshold-processor
        app.kubernetes.io/managed-by: {{ .Release.Namespace }}
        app.kubernetes.io/version: {{ .Values.thpevtsvc.imageTag }}
        itom.microfocus.com/capability: HyperscaleObservability
        tier.itom.microfocus.com/backend: backend
        itom.microfocus.com/description: Threshold_Processor_Event_Forwarder
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}   
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      initContainers:
        {{- include "helm-lib.waitFor" ( dict "service" "cs-redis" "port" "6380" "Values" .Values) | nindent 8 }}
        {{- include "helm-lib.waitForVault" . | nindent 8 }}        
        {{- $certNames := printf "Realm:RE,Common_Name:itom-monitoring-threshold-processor-svc,Additional_SAN:itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc.%s/itom-monitoring-threshold-processor-svc.%s.svc.cluster.local/itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc.%s/itom-monitoring-threshold-processor-svc.%s.svc.cluster.local,Secret:itom-monitoring-thp-metrics-client,UpdateSecret:true,File_Name:server;Realm:RID,Common_Name:itom-monitoring-threshold-processor-svc,Additional_SAN:itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc.%s/itom-monitoring-threshold-processor-svc.%s.svc.cluster.local/itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc/itom-monitoring-threshold-processor-svc.%s/itom-monitoring-threshold-processor-svc.%s.svc.cluster.local,File_Name:server" .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace .Release.Namespace -}}

        {{- include "helm-lib.containers.vaultInit" (dict "containerName" "install" "certNames" $certNames "Values" .Values) | nindent 8 }}
        - name: itom-monitoring-threshold-proc-init
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.thpinitcont.image }}:{{ .Values.thpinitcont.imageTag }}
          env:
            - name: ENABLE_STATIC_THRESHOLDING
              value: {{ .Values.global.monitoringService.isStaticThresholdingEnabled | quote}}
            - name: ENABLE_DYNAMIC_THRESHOLDING
              value: {{ .Values.global.monitoringService.isDynamicThresholdingEnabled | quote}}
            - name: PULSAR_EP
              value: {{ include "helm-lib.getDiPulsarProxyHost" . | default "itomdipulsar-proxy" | quote }}
            - name: PULSAR_WEB_PORT
              value: {{ include "helm-lib.getDiPulsarProxyWebPort" . | default "8443" | quote }}
            - name: PULSAR_CLIENT_PORT
              value: {{ include "helm-lib.getDiPulsarProxyClientPort" . | default "6651" | quote }}
            - name: PULSAR_PROTOCOL
              value: "pulsar+ssl"
            - name: "VAULT_SECRET_DIR"
              value: /var/run/secrets/boostport.com
            - name: PULSAR_TOPIC_TENANT
              value: {{ .Values.global.di.pulsar.tenant | default "public" | quote }}
            - name: PULSAR_TOPIC_NAMESPACE
              value: {{ .Values.global.di.pulsar.namespace | default "default" | quote }}
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_CONTAINER_NAME
              value: itom-monitoring-threshold-proc-init
            {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
            - name: PULSAR_CLIENT_CRT
              value: /thp/ssl/external-ca-signed-cert/pulsar-client/pulsarCert.crt
            - name: PULSAR_CLIENT_KEY
              value: /thp/ssl/external-ca-signed-cert/pulsar-client/pulsarCert.key
            - name: PULSAR_CLIENT_CA_CERT
              value: /certs/ssl/ca/pulsar-ca.crt              
            {{- end }}
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi    
          volumeMounts:
            - mountPath: /configs
              name: thp-evt-config-volume
              subPath: itom-monitoring-threshold-processor
            - mountPath: /var/run/secrets/boostport.com
              name: vault-token
            - name: certs-volume 
              mountPath: /certs/ssl/ca
            - name: thp-evt-log-volume
              mountPath: /logs
              subPath: cloud-monitoring/event-forwarder              
            {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
            - name: pulsar-client-cert-secret-volume
              mountPath: /thp/ssl/external-ca-signed-cert/pulsar-client
            {{- end }}
              
      containers:
        {{- include "helm-lib.containers.vaultRenew" (dict "containerName" "kubernetes-vault-renew" "Values" .Values) | nindent 8 }}
        - name: itom-monitoring-threshold-processor
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.thpevtsvc.image }}:{{ .Values.thpevtsvc.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
          - containerPort: 8080
            name: prometheus-cm
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/threshold/health
              port: 40001
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v1/threshold/health
              port: 40001
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          resources:
            limits:
              cpu: {{ .Values.thpevtsvc.resources.limits.cpu }}
              memory: {{ .Values.thpevtsvc.resources.limits.memory }}
            requests:
              cpu: {{ .Values.thpevtsvc.resources.requests.cpu }}
              memory: {{ .Values.thpevtsvc.resources.requests.memory }}
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            - name: thp-evt-log-volume
              mountPath: /logs
              subPath: cloud-monitoring/event-forwarder
            - mountPath: /configs
              name: thp-evt-config-volume
              subPath: itom-monitoring-threshold-processor
            - name: certs-volume 
              mountPath: /certs/ssl/ca
            {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
            - name: pulsar-client-cert-secret-volume
              mountPath: /thp/ssl/external-ca-signed-cert/pulsar-client
            {{- end }}
          env:
            - name: ENABLE_STATIC_THRESHOLDING
              value: {{ .Values.global.monitoringService.isStaticThresholdingEnabled | quote}}
            - name: ENABLE_DYNAMIC_THRESHOLDING
              value: {{ .Values.global.monitoringService.isDynamicThresholdingEnabled | quote}}
            - name: "PROMETHEUS_METRICS_PORT"
              value: "8080"
            - name: "CLIENT_TLS"
              value: "TRUE"
            - name: "CDF_NAMESPACE"
              value: {{ .Release.Namespace | quote }}
            {{- if .Values.global.vaultAppRole }}
            - name: "VAULT_ROLE_ID"
              value: {{ .Values.global.vaultRoleId | quote }}
            - name: "VAULT_APP_ROLE"
              value: {{ .Values.global.vaultAppRole | quote }}
            {{- end }}
            - name: "VAULT_SECRET_DIR"
              value: /var/run/secrets/boostport.com
            - name: "REDIS_URL"
              value: {{ .Values.redis.svcname }}:{{ .Values.redis.port }}
            - name: "REDIS_SRV_BASE_NAME"
              value: {{ .Values.redis.srvbasename }}
            - name: "REDIS_PWD_KEY"
              value: {{ .Values.redis.passwdkey }} 
            - name: PULSAR_EP
              value: {{ include "helm-lib.getDiPulsarProxyHost" . | default "itomdipulsar-proxy" | quote }}
            - name: PULSAR_WEB_PORT
              value: {{ include "helm-lib.getDiPulsarProxyWebPort" . | default "8443" | quote }}
            - name: PULSAR_CLIENT_PORT
              value: {{ include "helm-lib.getDiPulsarProxyClientPort" . | default "6651" | quote }}
            - name: PULSAR_PROTOCOL
              value: "pulsar+ssl"
            - name: PULSAR_TOPIC_TENANT
              value: {{ .Values.global.di.pulsar.tenant | default "public" | quote }}
            - name: PULSAR_TOPIC_NAMESPACE
              value: {{ .Values.global.di.pulsar.namespace | default "default" | quote }}
            {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
            - name: PULSAR_CLIENT_CRT
              value: /thp/ssl/external-ca-signed-cert/pulsar-client/pulsarCert.crt
            - name: PULSAR_CLIENT_KEY
              value: /thp/ssl/external-ca-signed-cert/pulsar-client/pulsarCert.key
            - name: PULSAR_CLIENT_CA_CERT
              value: /certs/ssl/ca/pulsar-ca.crt              
            {{- end }}
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_CONTAINER_NAME
              value: itom-monitoring-threshold-processor

      {{- with (coalesce .Values.nodeSelector .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:   
      - name: vault-token
        emptyDir:
          medium: "Memory"
      - name: thp-evt-log-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: thp-evt-config-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: certs-volume
        projected:
          defaultMode: 420
          sources:
          - configMap:
              name: opsb-ca-certificate
      {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
      - name: pulsar-client-cert-secret-volume
        projected:
          sources:
          - secret:
              name: {{ .Values.global.di.pulsar.client.tenantAdminSecret | quote }}
      {{- end }}
      {{- end }}
