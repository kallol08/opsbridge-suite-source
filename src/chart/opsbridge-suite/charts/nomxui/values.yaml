# Copyright 2023 Open Text

global:
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: hpeswitom
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  # persistence.dataVolumeClaim is a persistent volume claim for storing NNMi data files.
  # persistence.logVolume is a persistent volume claim for storing NNMi log files.
  # persistence.configVolume is a persistent volume claim for storing NNMi configuration files.
  # If any of these is undefined, then temporary ephemeral storage will be created.
  persistence:
    enabled:
    dataVolumeClaim:
    logVolumeClaim:

  securityContext:
    user: "1999"
    fsGroup: "1999"

  rbac:
    # Specifies whether a ServiceAccount should be created
    serviceAccountCreate:

  tlsTruststore:

  idm:
    additionalSeededOrg: {}

  #Properties for Shared Optic Reporting
  services:
    perfTroubleshooting: {}
    opticReporting: {}
    opticDataLake:
      externalOpticDataLake:
        connectUsingNamespace: {}
        connectUsingExternalAccessHost: {}
        connectUsingInternalAccessHost: {}
        connectUsingServiceFQDN: {}


  # global image references
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.9.0-006
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.9.0-006
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0013

  nginx:
    annotationPrefix:

  # Set the time to live for Jobs after finishing
  jobs:
    ttlSecondsAfterFinished: 1209600
    # Set the tls min version and cipher list
  tls:
    tlsMinVersion: "TLSv1.2"
    tlsCiphers: [ "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","TLS_AES_128_GCM_SHA256","TLS_AES_256_GCM_SHA384","TLS_CHACHA20_POLY1305_SHA256" ]
  # These values take precedence over the ones under the deployment section 

# Assigning pods to cluster nodes

tolerations: []

affinity: {}

deployment:
  idm:
    # IDM now has a name prefix, which can be changed by composition chart.
    namePrefix: "itom-"
    service: idm-svc
    port: 18443
  bvdExplore:
    service: "bvd-explore"
    port: 4000
  replicas: 3
  server:
    tls: TLSv1.3
    cipherSuites: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256

adminUser: "nomadmin"
adminUserPasswordKey: idm_nom_admin_password

perfTroubleshooting:
  datasource: coso,nps

skipNomConfig: false
#####################
# Image definitions
#####################
nomUi:
  image: itom-pt-ui
  imageTag: 3.10.90

#######################
# Setting image resource limits
#######################
resources:
  limits:
    cpu: "2"
    memory: "2048Mi"
  requests:
    cpu: "100m"
    memory: "512Mi"

#######################
# Setting job resource limits
#######################
jobResources:
  limits:
    cpu: "0.2"
    memory: "96Mi"
  requests:
    cpu: "0.1"
    memory: "64Mi"