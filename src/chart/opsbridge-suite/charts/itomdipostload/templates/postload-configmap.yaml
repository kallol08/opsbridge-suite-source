{{/* # */}}
{{/* # Copyright 2023 Open Text. */}}
{{/* # */}}
{{/* # The only warranties for products and services of Open Text and its affiliates and  */}}
{{/* # licensors (“Open Text”) are as may be set forth in the express warranty statements  */}}
{{/* # accompanying such products and services. Nothing herein should be construed as */}}
{{/* # constituting an additional warranty. Open Text shall not be liable for technical or */}}
{{/* # editorial errors or omissions contained herein. The information contained herein is  */}}
{{/* # subject to change without notice. */}}
{{/* # */}}
{{/* # Except as specifically indicated otherwise, this document contains confidential  */}}
{{/* # information and a valid license is required for possession, use or copying. If this work  */}}
{{/* # is provided to the U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer  */}}
{{/* # Software, Computer Software Documentation, and Technical Data for Commercial Items are licensed to */}}
{{/* # the U.S. Government under vendor’s standard commercial license. */}}
{{/* # */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: itom-di-postload-cm
data:
  {{/* ###Postload Properties### */}}
  postload.task.topic: {{ .Values.dipostload.config.postload.taskTopic | quote }}
  postload.status.topic: {{ .Values.dipostload.config.postload.statusTopic | quote }}
  postload.state.topic: {{ .Values.dipostload.config.postload.stateTopic | quote }}
  postload.task.execution.interval.millis: {{ .Values.dipostload.config.postload.taskExecutionIntervalMillis | quote }}
  postload.consumers.per.task.executor: {{ .Values.dipostload.config.postload.consumersPerTaskExecutor | quote }}
  postload.use.receive.to.consume: {{ .Values.dipostload.config.postload.useReceiveToConsume | quote }}
  postload.enable.te.process.monitoring: {{ .Values.dipostload.config.postload.enableTeProcessMonitoring | quote }}
  postload.enable.topic.monitoring: {{ .Values.dipostload.config.postload.enableTopicMonitoring | quote }}
  postload.timezone: {{ .Values.dipostload.config.postload.timeZone | quote }}
  postload.enrichment.recovery.aggregate.period: {{ .Values.dipostload.config.postload.aggregatePeriodDuringRecoveryInHrs | quote }}
  postload.task.controller.jvm.args: {{ .Values.dipostload.config.taskGenerator.jvmArgs  | quote }}
  postload.task.executor.jvm.args: {{ .Values.dipostload.config.taskExecutor.jvmArgs | quote }}
  postload.enrichmentbatchsize: {{ .Values.dipostload.config.postload.enrichmentBatchSize | quote }}
  postload.postresourcepool: {{ .Values.dipostload.config.postload.postResourcePool | quote }}
  postload.scrape.interval.millis: {{ .Values.dipostload.config.postload.scrapeIntervalMillis | quote }}
  {{- if .Values.dipostload.config.postload.pulsarNamespace }}
  postload.pulsar.default.namespace: {{ .Values.dipostload.config.postload.pulsarNamespace | quote }}
  {{- end }}
  postload.acceptable.missed.trigger.delay.seconds: {{ .Values.dipostload.config.postload.acceptableMissedTriggerDelaySeconds | quote }}
  postload.task.execution.threshold.minutes: {{ .Values.dipostload.config.postload.taskExecutionThresholdInMinutes | quote }}

  {{/* ###Config Server Properties### */}}
  config.store.db.enable: "true"
  config.server.hostname: {{ .Values.dipostload.config.configServer.hostname | quote }}
  config.server.port: {{ .Values.dipostload.config.configServer.port | quote }}
  config.server.connect.retry.delay.ms: {{ .Values.dipostload.config.configServer.connectRetryDelayMs | quote }}
  config.server.client.heart.beat: {{ .Values.dipostload.config.configServer.clientHeartBeat | quote }}
  config.server.server.heart.beat: {{ .Values.dipostload.config.configServer.serverHeartBeat | quote }}
  config.server.message.buffer.size.limit.in.mb: {{ .Values.dipostload.config.configServer.messageBufferSizeLimitInMb | quote }}

  {{/* #csv directload configuration */}}
  csvdirectload.compress.archive.files: {{ .Values.dipostload.config.csvdirectload.compressArchiveFiles | quote }}
  csvdirectload.compress.failed.files: {{ .Values.dipostload.config.csvdirectload.compressFailedFiles | quote }}
  {{/* #set the below flag to false if you want to compress the archived files periodically instead of compressing each file */}}
  csvdirectload.compress.each.file: {{ .Values.dipostload.config.csvdirectload.compressEachFile | quote }}
  csvdirectload.cleanup.retention.period.days: {{ .Values.dipostload.config.csvdirectload.cleanupRetentionPeriodDays | quote }}
  csvdirectload.cleanup.retention.size.mb: {{ .Values.dipostload.config.csvdirectload.cleanupRetentionSizeMb | quote }}
  csvdirectload.cleanup.purge.controltable.after.delete: {{ default "false" .Values.global.vertica.purgeAfterDelete | quote }}


  {{/* ###Pulsar-Properties### */}}
  {{- if  .Values.global.pulsar.isKopEnabled  }}
  {{- if .Values.global.pulsar.kopServiceName }}
  postload.pulsar.service.name: {{ .Values.global.pulsar.kopServiceName | quote }}
  {{- else }}
  postload.pulsar.service.name: {{ .Values.dipostload.config.pulsar.kopServiceName | quote }}
  {{- end }}
  {{- else }}
  postload.pulsar.service.name: {{ include "helm-lib.getDiPulsarBrokerHost" . | quote }}
  {{- end }}


  {{- if .Values.global.pulsar.brokerServicePort }}
  postload.pulsar.broker.service.port: {{ .Values.global.pulsar.brokerServicePort | quote }}
  {{- else }}
  postload.pulsar.broker.service.port: {{ .Values.dipostload.config.pulsar.brokerServicePort | quote }}
  {{- end }}

  postload.pulsar.broker.service.port.tls: {{ include "helm-lib.getDiPulsarBrokerClientPort" . | quote }}

  {{- if .Values.global.pulsar.webServicePort }}
  postload.pulsar.web.service.port: {{ .Values.global.pulsar.webServicePort | quote }}
  {{- else }}
  postload.pulsar.web.service.port: {{ .Values.dipostload.config.pulsar.webServicePort | quote }}
  {{- end }}

  postload.pulsar.web.service.port.tls: {{ include "helm-lib.getDiPulsarBrokerWebPort" . | quote }}


  {{- if .Values.global.pulsar.tlsEnable }}
  postload.pulsar.tls.enable: {{ .Values.global.pulsar.tlsEnable | quote }}
  {{- else }}
  postload.pulsar.tls.enable: {{ .Values.dipostload.config.pulsar.tlsEnable | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.authEnable }}
  postload.pulsar.auth.enable: {{ .Values.global.pulsar.authEnable | quote }}
  {{- else }}
  postload.pulsar.auth.enable: {{ .Values.dipostload.config.pulsar.authEnable | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.authClass }}
  postload.pulsar.auth.class: {{ .Values.global.pulsar.authClass | quote }}
  {{- else }}
  postload.pulsar.auth.class: {{ .Values.dipostload.config.pulsar.authClass | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.tlsHostnameVerification }}
  postload.pulsar.tls.hostname.verification: {{ .Values.global.pulsar.tlsHostnameVerification | quote }}
  {{- else }}
  postload.pulsar.tls.hostname.verification: {{ .Values.dipostload.config.pulsar.tlsHostnameVerification | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.connectionRetryIntervalSeconds }}
  postload.pulsar.connection.retry.interval.seconds: {{ .Values.global.pulsar.connectionRetryIntervalSeconds | quote }}
  {{- else }}
  postload.pulsar.connection.retry.interval.seconds: {{ .Values.dipostload.config.pulsar.connectionRetryIntervalSeconds | quote }}
  {{- end }}

  {{- if .Values.global.di.pulsar }}
  postload.pulsar.tenant: {{ coalesce .Values.global.di.pulsar.tenant .Values.global.pulsar.tenant "public" | quote }}
  postload.pulsar.namespace: {{ coalesce .Values.global.di.pulsar.namespace .Values.global.pulsar.namespace "default" | quote }}
  {{- else }}
  postload.pulsar.tenant: {{ coalesce .Values.global.pulsar.tenant "public" | quote }}
  postload.pulsar.namespace: {{ coalesce .Values.global.pulsar.namespace "default" | quote }}
  {{- end }}
  postload.server.tls.enabled.protocols: {{ .Values.dipostload.config.postload.serverTlsEnabledProtocols | quote }}

  postload.resiliency.enhance: {{ .Values.dipostload.config.postload.enhanceResiliency | quote }}
  postload.resiliency.status.check.interval: {{ .Values.dipostload.config.postload.taskStatusCheckInterval | quote }}
  postload.resiliency.long.task.period: {{ .Values.dipostload.config.postload.taskTimeoutCheck | quote }}

  {{/* ###Vertica Connection Properties### */}}
  vertica.hostname: {{ template "vertica.host" .}}
  vertica.username: {{ template "vertica.rwuser" .}}
  vertica.password.key: {{ .Values.global.vertica.rwuserkey | quote }}
  vertica.db: {{ template "vertica.db" .}}
  vertica.port: {{ template "vertica.port" .}}
  vertica.tlsEnabled: {{ .Values.global.vertica.tlsEnabled | quote }}
  {{- if .Values.global.vertica.tlsEnabled }}
  {{- if (eq (.Values.global.vertica.tlsEnabled | toString) "true") }}
  {{- if .Values.global.vertica.tlsMode }}
  vertica.tlsMode: {{ .Values.global.vertica.tlsMode | quote }}
  {{- else }}
  vertica.tlsMode: "verify_full"
  {{- end }}
  {{- else }}
  vertica.tlsMode: "disable"
  {{- end }}
  {{- else }}
  vertica.tlsMode: "disable"
  {{- end }}

  {{- if .Values.global.vertica.connectionRetryIntervalSeconds }}
  vertica.connection.retry.interval.seconds: {{ .Values.global.vertica.connectionRetryIntervalSeconds | quote }}
  {{- else }}
  vertica.connection.retry.interval.seconds: {{ .Values.dipostload.config.vertica.connectionRetryIntervalSeconds | quote }}
  {{- end }}
  di.tenant: {{ .Values.global.di.tenant | quote }}
  di.deployment: {{ .Values.global.di.deployment | quote }}
  taskExecutor.logconfig.from.configmap:  {{ .Values.dipostload.config.taskExecutor.logConfigFromConfigmap | quote}}
    {{- if .Values.dipostload.config.taskExecutor.logConfigFromConfigmap }}
  taskExecutor.logconfig.log.to.file: {{ .Values.global.di.logging.useFile | quote}}
    {{- end }}
  taskGenerator.logconfig.from.configmap:  {{ .Values.dipostload.config.taskGenerator.logConfigFromConfigmap | quote}}
    {{- if .Values.dipostload.config.taskGenerator.logConfigFromConfigmap }}
  taskGenerator.logconfig.log.to.file: {{ .Values.global.di.logging.useFile | quote}}
  {{- end }}


