<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2023 Open Text.
  ~
  ~ The only warranties for products and services of Open Text and its affiliates and licensors ("Open Text")
  ~ are as may be set forth in the express warranty statements accompanying such products and services.
  ~ Nothing herein should be construed as constituting an additional warranty. Open Text shall not be liable
  ~ for technical or editorial errors or omissions contained herein. The information contained herein is subject
  ~ to change without notice.
  ~
  ~ Except as specifically indicated otherwise, this document contains confidential information and a valid
  ~ license is required for possession, use or copying. If this work is provided to the U.S. Government,
  ~ consistent with FAR 12.211 and 12.212, Commercial Computer Software, Computer Software
  ~ Documentation, and Technical Data for Commercial Items are licensed to the U.S. Government under
  ~ vendor's standard commercial license.
  -->

<configuration scan="true" scanPeriod="30 seconds">

    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{60} [%X{TaskDetails}]- %msg%n"/>

    <property name="TASK_SPECIFIC_FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{TaskDetails}]- %msg%n"/>



    <appender name="LogFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
        <Append>true</Append>
        <File>${TE_NFS_LOG_DIR}/taskexecutor.log</File>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- each file should be at most 100MB, keep 60 days of history, but at most 2GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <FileNamePattern>${TE_NFS_LOG_DIR}/taskexecutor-%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="CsvDirectLoadAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
        <Append>true</Append>
        <File>${TE_NFS_LOG_DIR}/csv-direct-load.log</File>
        <encoder>
            <pattern>${TASK_SPECIFIC_FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- each file should be at most 100MB, keep 60 days of history, but at most 2GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <FileNamePattern>${TE_NFS_LOG_DIR}/csv-direct-load-%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="AggregateAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
        <Append>true</Append>
        <File>${TE_NFS_LOG_DIR}/aggregate.log</File>
        <encoder>
            <pattern>${TASK_SPECIFIC_FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- each file should be at most 100MB, keep 60 days of history, but at most 2GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <FileNamePattern>${TE_NFS_LOG_DIR}/aggregate-%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="ForecastAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
        <Append>true</Append>
        <File>${TE_NFS_LOG_DIR}/forecast.log</File>
        <encoder>
            <pattern>${TASK_SPECIFIC_FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- each file should be at most 100MB, keep 60 days of history, but at most 2GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <FileNamePattern>${TE_NFS_LOG_DIR}/forecast-%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="PerlTaskAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
        <Append>true</Append>
        <File>${TE_NFS_LOG_DIR}/perl-task.log</File>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- each file should be at most 100MB, keep 60 days of history, but at most 2GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <FileNamePattern>${TE_NFS_LOG_DIR}/perl-task-%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="ConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- Task specific loggers  -->

    <logger name="com.microfocus.itomdi.postload.taskexecutor.tasks.outofbox.CsvDirectLoadTask" level="INFO" additivity="false">
        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="CsvDirectLoadAppender"/>
        {{- end }}
    </logger>

    <logger name="com.microfocus.itomdi.postload.taskexecutor.tasks.outofbox.CsvDirectLoadArchiveCleanupTask" level="INFO" additivity="false">
        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="CsvDirectLoadAppender"/>
        {{- end }}
    </logger>

    <logger name="com.microfocus.itomdi.postload.taskexecutor.tasks.outofbox.CsvDirectLoadArchiveCompressTask" level="INFO" additivity="false">

        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="CsvDirectLoadAppender"/>
        {{- end }}
    </logger>

    <logger name="com.microfocus.itomdi.postload.taskexecutor.tasks.outofbox.PerlTask" level="INFO" additivity="false">

        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="PerlTaskAppender"/>
        {{- end }}
    </logger>

    <logger name="com.microfocus.itomdi.dataenrich.taskexecutor.AggregateTask" level="INFO" additivity="false">

        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="AggregateAppender"/>
        {{- end }}
    </logger>

    <logger name="com.microfocus.itomdi.dataenrich.taskexecutor.ForecastTask" level="INFO" additivity="false">

        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="ForecastAppender"/>
        {{- end }}
    </logger>

    <!-- Task specific loggers end    -->

    <logger name="com.swgrp.itomdi" level="INFO" additivity="false">
        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>
    <logger name="com.microfocus" level="INFO" additivity="false">
        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </logger>
    <root level="WARN">
        {{- if and (eq .Values.dipostload.config.taskExecutor.logConfigFromConfigmap true) (eq (.Values.global.di.logging.useFile | toString) "false") }}
        <appender-ref ref="ConsoleAppender"/>
        {{- else }}
        <appender-ref ref="LogFileAppender"/>
        {{- end }}
    </root>
</configuration>