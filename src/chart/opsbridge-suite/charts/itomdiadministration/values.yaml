#
# Copyright 2023 Open Text.
#
# The only warranties for products and services of Open Text and its affiliates and licensors (“Open Text”)
# are as may be set forth in the express warranty statements accompanying such products and services.
# Nothing herein should be construed as constituting an additional warranty. Open Text shall not be liable
# for technical or editorial errors or omissions contained herein. The information contained herein is subject
# to change without notice.
#
# Except as specifically indicated otherwise, this document contains confidential information and a valid
# license is required for possession, use or copying. If this work is provided to the U.S. Government,
# consistent with FAR 12.211 and 12.212, Commercial Computer Software, Computer Software
# Documentation, and Technical Data for Commercial Items are licensed to the U.S. Government under
# vendor’s standard commercial license.
#
# Default values for dp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
diadmin:
  probe:
    liveness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1

    readiness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1

    startup:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 168
      successThreshold: 1
  config:
    admin:
      jvmArgs: "-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -Djdk.tls.maxCertificateChainLength=20"
      clientAuthEnabled: "true"
      serviceBaseUrl: "itom-di-administration-svc:8443"
      systemLevelThrottle: "true"
      permissibleRequestLimit: "6000"
      requestThrottleTime: "1"
      configStoreType: "db"
      #Message bus configuration : { pulsar / kafka }
      messageBus: "pulsar"
      # Status Get All API polling timeout in seconds
      datasetStatusPollingTimeoutInSeconds: "130"
      #Express Load for Admin Bulk Upload Requests
      expressLoadEnabled: true
      apiClient:
        authorizedClientCAs: ""
      useExternalCASignedCerts: false
      caSignedServerCertSecretName:
      enableSecurityAudit: true
      securityAuditVolumeClaim:
      logConfigFromConfigmap: true
      adminUserOrg:
      adminConfigCategory: "factoryShipped"
      serverTlsEnabledProtocols: "TLSv1.2,TLSv1.3"
      flowControlMaxBacklogQuotaSizeInMB: 143360
      flowControlMaxIngestionRateInMB: 150
    vertica:
      resourcePoolName: "itom_di_stream_respool"
    hikaricp:
      connectionTimeout: "60000"
      connectionMaximumLifetime: "600000"
      minimumIdleConnections: "1"
      maximumPoolSize: "15"
      connectionPoolName: "store_once_config_pool"
    minio:
      host:
      port:
      tlsEnabled:
      service:
        nodePort:
    s3:
      region: "us-east-1"
      bucketPrefix:
    expressLoad:
      objectSizeLimitInMB: "1024"
      verticaResourcePool:
      workerCount: "25"
      verticaConnectionPoolSize: "25"
      verticaConnectionLoadbalancing: "true"
      pollingIntervalInSec : "30"
      csvObjectLimitForDirectInMB : "100"
      gzipObjectLimitForDirectInMB : "5"
      maxDatasetCount: "20"
      parameters:
        enforceLength: "true"
        abortOnError: "true"
        rejectOnEmptyKey: "true"
        rejectOnDataMismatch: "true"
        maxRejections: "0"
        header: "true"
    pulsar:
      kopServiceName: "itomdipulsar-proxy"
      webServicePort: "8080"
      brokerServicePort: "6650"
      tlsEnable: "true"
      authEnable: "true"
      authClass: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
      tlsHostnameVerification: "false"
      topicPartitionCount: "3"  #All pulsar message bus configuration parameters
    taskGenerator:
      serviceName: "itom-di-taskcontroller-svc"
      webServicePort: "8443"

    replicaCount: 1
    isNodePortEnabled: "true"
    adminNodePort: "30004"
    externalAccess: "ingress,nodeport"
  idm:
    tokenCacheExpiryTimeSeconds: "60"
    authorizedRoles: "di_admin"

diminio:
  adminAccessKey: ITOMDI_S3_ADMIN_ACCESS_KEY
  adminSecretKey: ITOMDI_S3_ADMIN_SECRET_KEY
  clientAccessKey: ITOMDI_MINIO_CLIENT_ACCESS_KEY
  clientSecretKey: ITOMDI_MINIO_CLIENT_SECRET_KEY

global:
  expose:
    ipConfig:
      ipFamilyPolicy: PreferDualStack
      ipFamilies:
  cluster:
    k8sProvider: cdf
  #Message bus configuration : { pulsar / kafka }
  #messageBus: "pulsar"

  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  persistence:
    enabled: false
    configVolumeClaim:
    logVolumeClaim:

  # For custom client CAs. authorizedClientCAs should be the name of a configMap which contains the certs.
  apiClient:
    authorizedClientCAs:

  #For nginx custom CA signed certificates. secretName should be the name of the secret containing the cert and key
  nginx:
    secretName:

  # For custom server CAs (incl. for Vertica). tlsTruststore should be the name of a configMap which contains the certs.
  tlsTruststore:

  # RBAC
  rbac:
    serviceAccountCreate: true
    roleCreate: true

  nodeSelector: {}
  setFqdnInIngress: true

  di:
  #Will be used as a suffix for schema names
    tenant: "provider"
    deployment: "default"
    cloud:
      externalDNS:
        enabled: false
      externalAccessHost:
        administration:
    logging:
      useFile: true
    pulsar:
      tenant:
      namespace:     
    supportExpressLoad: false
    java:
      tls:
        ciphers:
          useJDKDefault: false
          recommended: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256"
          optional: ""
    externalAccessHost:
      administration:
    avroSchemaEvolutionEnabled: false
    multiTenantEnabled: false
  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false

  # This Kafka chart depends on Zookeeper.  And by default it will deploy a new Zookeeper
  # instance each time this chart is deployed.
  # If instance.zookeeper is defined, then Kafka will reuse a Zookeeper instance which
  # is already running, instead of deploying a new instance.
  # The value of instance.zookeeper should match the Helm Release Name (i.e. "cold-fish")
  # associated with the ZooKeeper instance to be reused.
  instance:
    kafka:
    pulsar: pulsar

  #All pulsar message bus configuration parameters
  pulsar:
    isKopEnabled: false
    #serviceName: "itomdipulsar-proxy"
    tenant:
    namespace:
    #webServicePort:
    #webServicePortTls:
    #brokerServicePort:
    #brokerServicePortTls:
    #tlsEnable: "true"
    #authEnable: "true"
    #authClass: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
    #tlsHostnameVerification: "false"

  #All vertica related details are being moved into global so that it can be used across charts
  # rwuser: Read Write vertica User
  # rouser: Read Only user. Used only by Data Access
  # rwuserkey: Password for Read Write vertica user
  # rouserkey: password for Read only vertica user
  vertica:
    embedded: false
    host:
    rwuser:
    rwuserkey: ITOMDI_DBA_PASSWORD_KEY
    rouser:
    rouserkey: ITOMDI_DBA_PASSWORD_KEY
    db:
    port:
    tlsEnabled: "true"


  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: 
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  securityContext:
    user: "1999"    
    fsGroup: "1999"

  # Global image references for vault
  vaultRenew:
    #registry:
    #orgName:
    image: kubernetes-vault-renew
    imageTag: 0.10.0-0019
  vaultInit:
    #registry:
    #orgName:
    image: kubernetes-vault-init
    imageTag: 0.10.0-0019 
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0018
  # REQUIRED: The externalAccessHost is the end-point for the service
  externalAccessHost:
  secretStorage:

  idm:
    idmServiceUrl: "https://itom-idm-svc:18443/idm-service"
  fluentbit:
    fluentbitSelector:
      labelName: "deployment.microfocus.com/fluentbit-config"
      labelValue: "true"
  
resources:
  limits:
    cpu: "1"
    memory: "4096Mi"
  requests:
    cpu: "0.2"
    memory: "256Mi"

nodeSelector: {}

deployment:
  rbac:
    serviceAccount: ""

#####################
# Image definitions
#####################
admin:
  image: itom-data-ingestion-administration
  imageTag: 2.12.1-9

