{{/* # */}}
{{/* # Copyright 2023 Open Text. */}}
{{/* # */}}
{{/* # The only warranties for products and services of Open Text and its affiliates and  */}}
{{/* # licensors (“Open Text”) are as may be set forth in the express warranty statements  */}}
{{/* # accompanying such products and services. Nothing herein should be construed as */}}
{{/* # constituting an additional warranty. Open Text shall not be liable for technical or */}}
{{/* # editorial errors or omissions contained herein. The information contained herein is  */}}
{{/* # subject to change without notice. */}}
{{/* # */}}
{{/* # Except as specifically indicated otherwise, this document contains confidential  */}}
{{/* # information and a valid license is required for possession, use or copying. If this work  */}}
{{/* # is provided to the U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer  */}}
{{/* # Software, Computer Software Documentation, and Technical Data for Commercial Items are licensed to */}}
{{/* # the U.S. Government under vendor’s standard commercial license. */}}
{{/* # */}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: itom-di-administration
  labels:
    app.kubernetes.io/name: itom-di-administration
    app.kubernetes.io/managed-by: {{.Release.Name}}
    app.kubernetes.io/version: {{.Values.admin.imageTag}}
    itom.microfocus.com/capability: itom-data-ingestion
    tier.itom.microfocus.com/backend: backend
    app: itom-di-administration
  annotations:
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
    {{- if and .Values.global.apiClient.authorizedClientCAs .Values.global.tlsTruststore }}
    configmap.reloader.stakater.com/reload: "{{ .Values.global.apiClient.authorizedClientCAs }},{{ .Values.global.tlsTruststore }}"
    {{- else if .Values.global.apiClient.authorizedClientCAs }}
    configmap.reloader.stakater.com/reload: "{{ .Values.global.apiClient.authorizedClientCAs }}"
    {{- else if .Values.global.tlsTruststore }}
    configmap.reloader.stakater.com/reload: "{{ .Values.global.tlsTruststore }}"
    {{- end }}
    {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
    secret.reloader.stakater.com/reload: "{{ .Values.global.di.pulsar.client.tenantAdminSecret }}"
    {{- end }}
spec:
  replicas: {{ .Values.diadmin.config.replicaCount }}
  selector:
    matchLabels:
      app: itom-di-administration
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: itom-di-administration
        app.kubernetes.io/managed-by: {{.Release.Name}}
        app.kubernetes.io/version: {{.Values.admin.imageTag}}
        itom.microfocus.com/capability: itom-data-ingestion
        tier.itom.microfocus.com/backend: backend
        app: itom-di-administration
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/di-administration-configmap.yaml") . | sha256sum }}
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}            
        seccompProfile:
          type: RuntimeDefault               
      serviceAccount: {{ .Values.deployment.rbac.serviceAccount | default "itom-di-administration-sa" }}
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount | default "itom-di-administration-sa" }}           
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - itom-di-administration
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      initContainers:
      {{- include "helm-lib.waitForVault" . | nindent 6 }}
      - name: waitfor-vertica-service
        securityContext:
          runAsNonRoot: true
          runAsUser: {{ .Values.global.securityContext.user }}
          runAsGroup: {{ .Values.global.securityContext.fsGroup }}   
          allowPrivilegeEscalation: false          
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        {{- if (eq (.Values.global.vertica.embedded | toString) "true") }}
        {{- $vh := "itom-di-vertica-svc" }}
        {{- $vp := "5444" -}}
        {{- $fvnode := "itom-di-vertica-svc" }}
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        command: [ "sh", "-c", "until nc -z {{$fvnode}} {{$vp}} -w 5 ; do echo waiting for {{$fvnode}}:{{$vp}}...; sleep 5; done; exit 0"]
        resources:
          {{- include "admin.initContainers.resources" . | nindent 10 }}
        {{- else -}}
        {{- $vh := .Values.global.vertica.host }}
        {{- $vp := .Values.global.vertica.port }}
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        command: [ "sh", "-c", "cmd=''; vh_local={{$vh}}; vp_local={{$vp}}; for i in $(echo $vh_local | sed 's/,/ /g' | awk '{$1=$1};1'); do cmd=$(echo $cmd '|| nc -z '$i' '$vp_local' -w 5 '); done; cmd=${cmd:3}; echo 'command is : '$cmd''; until eval $(echo $cmd); do echo 'waiting for '$vh_local' with port '$vp_local' ... '; sleep 5; done; exit 0;"]
        resources:
          {{- include "admin.initContainers.resources" . | nindent 10 }}
        {{- end }}
      {{- $adminglhost := (include "admin.global.externalAccessHost" .) }}
      {{- $admincloudea := (include "admin.cloud.externalAccessHost" .) }}
      {{- $adminea := (include "admin.externalAccessHost" .) }}
      {{- $certNames := printf "Common_Name:%s,Additional_SAN:itom-di-administration-svc%s/itom-di-administration-svc.%s/itom-di-administration-svc.%s.svc%s" $adminglhost $admincloudea .Release.Namespace .Release.Namespace $adminea -}}
      {{- include "helm-lib.containers.vaultInit" (dict "certNames" $certNames "Values" .Values) | nindent 6 }}
             
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: itom-di-init-admin-cnt
        securityContext:
          runAsNonRoot: true
          runAsUser: {{ .Values.global.securityContext.user }}
          runAsGroup: {{ .Values.global.securityContext.fsGroup }}        
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL  
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.admin.image }}:{{ .Values.admin.imageTag }}
        command: ["/administration/bin/run.sh","dependency"]
        resources:
          {{- include "admin.initContainers.resources" . | nindent 10 }}
        env:
        - name: MESSAGE_BUS
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.message.bus
    {{- if .Values.global.messageBus }}
        - name: PULSAR_SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.service.name
        - name: PULSAR_TLS_ENABLE
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.tls.enable
        - name: PULSAR_WEB_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.web.service.port
        - name: PULSAR_WEB_SERVICE_PORT_TLS
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.web.service.port.tls
        - name: PULSAR_BROKER_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.broker.service.port
        - name: PULSAR_BROKER_SERVICE_PORT_TLS
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.broker.service.port.tls
        
    {{- else }}
        - name: PULSAR_SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.service.name
        - name: PULSAR_TLS_ENABLE
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.tls.enable
        - name: PULSAR_WEB_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.web.service.port
        - name: PULSAR_WEB_SERVICE_PORT_TLS
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: pulsar.web.service.port.tls
    {{- end }}
    {{- if .Values.global.di.supportExpressLoad }}
        - name: EXPRESSLOAD_SUPPORTED
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.expressLoad.supported
    {{- if (eq (.Values.global.di.supportExpressLoad | toString) "true") }}
    {{- if .Values.diadmin.config.admin.expressLoadEnabled }}
        - name: EXPRESS_LOAD_ENABLED
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.express.load.enable
    {{- if (eq (.Values.diadmin.config.admin.expressLoadEnabled | toString) "true") }}
        - name: MINIO_HOST
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.minio.host
        - name: MINIO_PORT
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.minio.port
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.diadmin.config.admin.clientAuthEnabled }}
        - name: ADMIN_CLIENT_AUTH_ENABLED
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.client.auth.enabled
    {{- if (eq (.Values.diadmin.config.admin.clientAuthEnabled | toString) "true") }}
    {{- if .Values.global.idm.idmServiceUrl }}
        - name: IDM_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: itom-di-administration-cm
              key: admin.security.idm.service.url

    {{- end }}
    {{- end }}
    {{- end }}

      containers:
        - name: itom-di-administration
          securityContext:      
            allowPrivilegeEscalation: false    
            capabilities:
              drop:
              - ALL   
          image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.admin.image }}:{{ .Values.admin.imageTag }}
          {{- if .Values.diadmin.probe.liveness.enabled }}
          livenessProbe:
            exec:
              command:
                - "/administration/bin/liveness.sh"
            initialDelaySeconds: {{ .Values.diadmin.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.diadmin.probe.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.diadmin.probe.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.diadmin.probe.liveness.failureThreshold }}
            successThreshold: {{ .Values.diadmin.probe.liveness.successThreshold }}
          {{- end }}
          {{- if .Values.diadmin.probe.readiness.enabled }}
          readinessProbe:
            exec:
              command:
                - "/administration/bin/readiness.sh"
            initialDelaySeconds: {{ .Values.diadmin.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.diadmin.probe.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.diadmin.probe.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.diadmin.probe.readiness.failureThreshold }}
            successThreshold: {{ .Values.diadmin.probe.readiness.successThreshold }}
          {{- end }}
          {{- if .Values.diadmin.probe.startup.enabled }}
          startupProbe:
            exec:
              command:
                - "/administration/bin/startup.sh"
            initialDelaySeconds: {{ .Values.diadmin.probe.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.diadmin.probe.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.diadmin.probe.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.diadmin.probe.startup.failureThreshold }}
            successThreshold: {{ .Values.diadmin.probe.startup.successThreshold }}
          {{- end }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          ports:
            - containerPort: 8443
          {{- if .Values.global.di.multiTenantEnabled }}
          {{- $adminParamValidation := ( include "validateClientAuthForMT" .  | required "When Multi-Tenant is enabled Client Auth cannot be disabled" ) }}
          {{- end }}
          env:
            - name: gid
              value: {{ .Values.global.securityContext.fsGroup | quote }}
            - name: uid
              value: {{ .Values.global.securityContext.user | quote }}
            {{/* # SSl configurations */}}
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.jvm.args
            - name: ADMIN_CLIENT_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.client.auth.enabled
            - name: PULSAR_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.service.name
            - name: PULSAR_TLS_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.tls.enable
            - name: PULSAR_TENANT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.tenant
            - name: PULSAR_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.namespace
            - name: PULSAR_WEB_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.web.service.port
            - name: PULSAR_WEB_SERVICE_PORT_TLS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.web.service.port.tls
            - name: PULSAR_AUTH_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.auth.enable
            - name: PULSAR_AUTH_CLASS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.auth.class
            - name: PULSAR_TLS_HOSTNAME_VERIFICATION
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: pulsar.tls.hostname.verification
            - name: MESSAGE_BUS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.message.bus
            - name: ADMIN_SERVICE_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.service.base.url
            - name: ADMIN_SYSTEM_LEVEL_THROTTLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.system.level.throttle
            - name: ADMIN_PERMISSIBLE_REQUEST_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.permissible.request.limit
            - name: ADMIN_REQUEST_THROTTLE_TIME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.request.throttle.time
            - name: DEFAULT_RESOURCE_POOL_NAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: vertica.resource.pool.name
            - name: DI_TENANT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: di.tenant
            - name: DI_DEPLOYMENT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: di.deployment
            - name: ADMIN_TOPIC_PARTITION_COUNT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.topic.partition.count
            - name: ADMIN_CONFIG_STORE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.type
            - name: DB_SSL_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.db.ssl.enable
            - name: ADMIN_CONFIGSTORE_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.hostnames
            - name: ADMIN_CONFIGSTORE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.username
            - name: ADMIN_CONFIGSTORE_TOKEN_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.token.key
            - name: ADMIN_CONFIGSTORE_DB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.db
            - name: ADMIN_CONFIGSTORE_PORT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.store.port
            - name: HIKARICP_CONNECTION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: hikaricp.connection.timeout
            - name: HIKARICP_CONNECTION_MAXIMUM_LIFETIME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: hikaricp.connection.maximum.lifetime
            - name: HIKARICP_MINIMUM_IDLE_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: hikaricp.minimum.idle.connections
            - name: HIKARICP_MAXIMUM_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: hikaricp.maximum.pool.size
            - name: HIKARICP_CONNECTION_POOL_NAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: hikaricp.connection.pool.name
            - name: DATASET_STATUS_POLLING_TIMEOUT_IN_SECONDS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: dataset.status.polling.timeout.in.seconds
            - name: CONFIG_DELETE_STATUS_RETRY_IN_MILLISECONDS
              value: "60000"
            - name: EXTERNAL_CA_SIGNED_CERTS_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.use.external.ca.signed.certs
            - name: SECURITY_AUTHORIZED_ROLES
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.security.authorizedRoles
            - name: TOKEN_CACHE_EXPIRY_TIME_IN_SECS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.security.tokenCache.expiryTimeSeconds
            - name: JAVA_TLS_CIPHER_RECOMMENDED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.java.tls.ciphers.recommended
            - name: JAVA_TLS_CIPHER_OPTIONAL
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.java.tls.ciphers.optional
            {{- if .Values.global.di.java.tls.ciphers.useJDKDefault }}
            - name: ADMIN_USE_JDK_DEFAULT_CIPHERS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.java.tls.ciphers.useJDKDefault
            {{- end}}
            {{- if .Values.global.di.avroSchemaEvolutionEnabled }}
            - name: ADMIN_AVRO_SCHEMA_EVOLUTION
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.avroSchemaEvolutionEnabled
            {{- end}}
            {{- if .Values.global.idm.idmServiceUrl }}
            - name: IDM_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.security.idm.service.url
            {{- end }}
            {{- if .Values.global.di.supportExpressLoad }}
            - name: EXPRESSLOAD_SUPPORTED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.supported
            {{- if (eq (.Values.global.di.supportExpressLoad | toString) "true") }}
            - name: EXPRESS_LOAD_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.express.load.enable
            {{- if (eq (.Values.diadmin.config.admin.expressLoadEnabled | toString) "true") }}
            - name: MINIO_HOST
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.host
            - name: MINIO_EXTERNAL_HOST
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.externalAccessHost
            - name: MINIO_PORT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.port
            - name: MINIO_SSL_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.ssl.enable
            - name: MINIO_WORKER_COUNT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.workerCount
            - name: MINIO_POLLING_INTERVAL_IN_SEC
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.pollingIntervalInSec
            - name: MINIO_CSV_OBJECT_LIMIT_FOR_DIRECT_IN_MB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.csvObjectLimitForDirectInMB
            - name: MINIO_GZIP_OBJECT_LIMIT_FOR_DIRECT_IN_MB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.gzipObjectLimitForDirectInMB
            - name: MINIO_VERTICA_CONNECTION_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.vertica.connectionPoolSize
            - name: MINIO_VERTICA_CONNECTION_LOAD_BALANCING
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.vertica.connectionLoadbalancing
            - name: MINIO_NODE_PORT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.nodePort
            - name: EXPRESS_LOAD_OBJECT_SIZE_LIMIT_IN_MB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.objectSizeLimitInMB
            - name: EXPRESS_LOAD_PARAMETER_ENFORCE_LENGTH
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.enforceLength
            - name: EXPRESS_LOAD_PARAMETER_ABORT_ON_ERROR
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.abortOnError
            - name: EXPRESS_LOAD_PARAMETER_REJECT_ON_EMPTY_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.rejectOnEmptyKey
            - name: EXPRESS_LOAD_PARAMETER_REJECT_ON_DATA_MISMATCH
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.rejectOnDataMismatch
            - name: EXPRESS_LOAD_PARAMETER_MAX_REJECTIONS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.maxRejections
            - name: EXPRESS_LOAD_PARAMETER_HEADER
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.parameters.header
            - name: EXPRESS_LOAD_VERTICA_RESOURCE_POOL
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.verticaResourcePool
            - name: EXPRESS_LOAD_MAX_DATASET_COUNT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.expressLoad.maxDatasetCount
            {{- end }}
            {{- if and (eq (.Values.global.cluster.k8sProvider | toString) "aws") (eq (.Values.diadmin.config.admin.expressLoadEnabled | toString) "true") }}
            - name: S3_REGION
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.s3.region
            - name: S3_BUCKET_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.s3.bucketPrefix
                  optional: true

            {{- if (not .Values.diminio.adminAccessKey) }}
            - name: MINIO_CLIENT_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.clientAccessKey
            {{- end }}

            {{- if (not .Values.diminio.adminSecretKey) }}
            - name: MINIO_CLIENT_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.clientSecretKey
            {{- end }}

            - name: MINIO_SECRET_STORAGE_NAME
              {{- if .Values.global.secretStorageName }}
              value: {{ .Values.global.secretStorageName | quote }}
              {{- else if .Values.global.initSecrets }}
              value: {{ .Values.global.initSecrets | quote }}
              {{- end }}

            {{- if .Values.diminio.adminAccessKey }}
            - name: ITOMDI_S3_ADMIN_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.adminAccessKey
            {{- end }}

            {{- if .Values.diminio.adminSecretKey }}
            - name: ITOMDI_S3_ADMIN_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.minio.adminSecretKey
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: NODE_NAME
              valueFrom:
               fieldRef:
                fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
               fieldRef:
                fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
               fieldRef:
                fieldPath: metadata.namespace
            - name: CONTAINER_NAME
              value: administration

            {{- if .Values.global.cluster.k8sProvider }}
            - name: ADMIN_CLUSTER_K8SPROVIDER
              value: {{ .Values.global.cluster.k8sProvider | quote }}
            {{- end }}

            {{- if .Values.diadmin.config.admin.enableSecurityAudit }}
            - name: ADMIN_AUDIT_LOGS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.auditLogs.enabled
            {{- if .Values.diadmin.config.admin.securityAuditVolumeClaim}}
            - name: ADMIN_AUDIT_LOGS_DEFAULT_PATH
              value: "false"
            {{- else}}
            - name: ADMIN_AUDIT_LOGS_DEFAULT_PATH
              value: "true"
            {{- end }}
            {{- end }}
            - name: LOGGING_FROM_CONFIGMAP
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.logconfig.from.configmap
          {{- if .Values.diadmin.config.admin.logConfigFromConfigmap }}
            - name: LOG_TO_FILE
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.logconfig.log.to.file
          {{- end }}
            - name: EXTERNAL_ACCESS_HOST
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.externalAccessHost
            - name: EXTERNAL_ACCESS_PORT
              value: {{ .Values.diadmin.config.adminNodePort | quote }}
            {{- if .Values.diadmin.config.admin.adminUserOrg }}
            - name: ADMIN_USER_ORG
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.org.aware.auth.adminUserorg
            {{- end }}
            - name: ADMIN_CONFIG_CATEGRORY
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.org.aware.auth.adminConfigCategory
            - name: ADMIN_SERVER_TLS_ENABLED_PROTOCOLS
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.server.tls.enabled.protocols
            - name: ADMIN_FLOWCONTROL_BACKLOG_QUOTA_MAXSIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.flowControl.backlogQuota.maxSize.mb
            - name: ADMIN_FLOWCONTROL_INGESTION_RATE_MAX_MB
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.config.flowControl.ingestionRate.maxValue.mb
            - name: TASKGENERATOR_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: taskgenerator.service.name
            - name: TASKGENERATOR_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: taskgenerator.service.port
            - name: MULTI_TENANT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: itom-di-administration-cm
                  key: admin.multiTenantEnabled
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            {{- if (eq (.Values.diadmin.config.admin.enableSecurityAudit | toString) "true") }}
            {{- if .Values.diadmin.config.admin.securityAuditVolumeClaim }}
            - name: administration-security-audit-vol
              mountPath: /administration/audit-log
            {{- end }}
            {{- end }}
            - name: administration-log-vol
              mountPath: /administration/log
            - name: administration-vol
              mountPath: /mnt/itom/administration/conf
              subPath: di/administration/conf
            - name: administration-vol
              mountPath: /mnt/itom/administration/dlconf
              subPath: di/vertica-ingestion/conf
            - name: administration-vol
              mountPath: /mnt/itom/administration/dp-conf
              subPath: di/data-processor/conf
            - name: dp-data-vol
              mountPath: /mnt/itom/administration/dp-data
              subPath: di/data-processor/data
            - name: administration-vol
              mountPath: /mnt/itom/administration/dp-task-artifacts
              subPath: di/data-processor/bin/task-artifacts
            - name: admin-client-certs-volume
              mountPath: /administration/ssl/ca
            - name: config-store-client-certs-volume
              mountPath: /administration/ssl/config-store-ca
            {{- if or .Values.global.apiClient.authorizedClientCAs .Values.diadmin.config.admin.apiClient.authorizedClientCAs }}
            - name: cm-client-certs-volume
              mountPath: /administration/ssl/api-client-cas/
            {{- end }}
            {{- if .Values.global.tlsTruststore }}
            - name: cm-server-certs-volume
              mountPath: /administration/ssl/server-cas/
            {{- end }}        
            {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
            - name: pulsar-client-cert-secret-volume
              mountPath: /administration/ssl/external-ca-signed-cert/pulsar-client
            {{- end }}     
            - name: servercert-secret-volume
              mountPath: /administration/ssl/external-ca-signed-cert/server
            - name: cm-logback
              mountPath: /administration/conf-local/
        {{- include "helm-lib.containers.vaultRenew" (dict "Values" .Values) | nindent 8 }}        
      {{- with ( coalesce .Values.nodeSelector .Values.global.nodeSelector ) }}
      nodeSelector:
        {{ toYaml . }}
      {{- end }}
      volumes:
      - name: administration-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: dp-data-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "dataVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: administration-log-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
    {{- if (eq (.Values.diadmin.config.admin.enableSecurityAudit | toString) "true") }}
      {{- if .Values.diadmin.config.admin.securityAuditVolumeClaim}}
      - name: administration-security-audit-vol
        persistentVolumeClaim:
          claimName: {{ .Values.diadmin.config.admin.securityAuditVolumeClaim}}
      {{- end}}
      {{- end }}
      - name: vault-token
        emptyDir: {}
      - name: admin-client-certs-volume
        secret:
          secretName: administration-secret
      - name: config-store-client-certs-volume
        secret:
          secretName: configuration-secret
      - name: cm-client-certs-volume
        projected:
         sources:
      {{- if .Values.diadmin.config.admin.apiClient.authorizedClientCAs }}
          - configMap:
              name: {{ .Values.diadmin.config.admin.apiClient.authorizedClientCAs | quote }}
      {{- else if .Values.global.apiClient.authorizedClientCAs }}
          - configMap:
              name: {{ .Values.global.apiClient.authorizedClientCAs | quote }}
      {{- end }}
      - name: servercert-secret-volume
        projected:
          sources:
      {{- if .Values.diadmin.config.admin.useExternalCASignedCerts }}
          - secret:
              {{- if .Values.diadmin.config.admin.caSignedServerCertSecretName }}
              name: {{ .Values.diadmin.config.admin.caSignedServerCertSecretName | quote }}
              {{- else }}
              name: {{ .Values.global.nginx.secretName | default "nginx-default-secret" | quote }}
              {{- end }}
      {{- end }}
      {{- if .Values.global.tlsTruststore }}
      - name: cm-server-certs-volume
        configMap:
          name: {{ .Values.global.tlsTruststore | quote }}
      {{- end }}
     {{- if (((((.Values.global).di).pulsar).client).tenantAdminSecret) }}
      - name: pulsar-client-cert-secret-volume
        projected:
          sources:
          - secret:
              name: {{ .Values.global.di.pulsar.client.tenantAdminSecret | quote}}
     {{- end }} 
      - name: cm-logback
        configMap:
          name: administration-logback-cm
