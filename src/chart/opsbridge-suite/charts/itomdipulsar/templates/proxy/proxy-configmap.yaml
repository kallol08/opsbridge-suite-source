{{/* # */}}
{{/* # Licensed to the Apache Software Foundation (ASF) under one */}}
{{/* # or more contributor license agreements.  See the NOTICE file */}}
{{/* # distributed with this work for additional information */}}
{{/* # regarding copyright ownership.  The ASF licenses this file */}}
{{/* # to you under the Apache License, Version 2.0 (the */}}
{{/* # "License"); you may not use this file except in compliance */}}
{{/* # with the License.  You may obtain a copy of the License at */}}
{{/* # */}}
{{/* #   http://www.apache.org/licenses/LICENSE-2.0 */}}
{{/* # */}}
{{/* # Unless required by applicable law or agreed to in writing, */}}
{{/* # software distributed under the License is distributed on an */}}
{{/* # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY */}}
{{/* # KIND, either express or implied.  See the License for the */}}
{{/* # specific language governing permissions and limitations */}}
{{/* # under the License. */}}
{{/* # */}}

{{ if .Values.components.proxy -}}
{{- include "pulsar.setCurrentComponentFull" (set . "currentComponent" .Values.proxy.component) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .currentComponentFull }}"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
data:
  clusterName: {{ template "pulsar.cluster" . }}
  httpNumThreads: "8"
  statusFilePath: "/pulsar/tmp/status"
  {{/* # prometheus needs to access /metrics endpoint */}}
  webServicePort: "{{ .Values.proxy.ports.http }}"
  {{- if or (not .Values.tls.enabled) (not .Values.tls.proxy.enabled) }}
  servicePort: "{{ .Values.proxy.ports.pulsar }}"
  brokerServiceURL: {{ template "pulsar.proxy.broker.service.url" . }}
  brokerWebServiceURL: {{ template "pulsar.proxy.web.service.url" . }}
  {{- end }}
  {{- if .Values.tls.enabled }}
  clusterCaCert: "/var/run/secrets/boostport.com/issue_ca.crt"
  {{- end }}
  {{- if and .Values.tls.enabled .Values.tls.proxy.enabled }}
  tlsEnabledInProxy: "true"
  servicePortTls: "{{ .Values.proxy.ports.pulsarssl }}"
  webServicePortTls: "{{ .Values.proxy.ports.https }}"
  tlsCertificateFilePath: "/var/run/secrets/boostport.com/server.crt"
  tlsKeyFilePath: "/var/run/secrets/boostport.com/server.key"
  tlsTrustCertsFilePath: "/pulsar/ssl/combined_ca.crt"
  {{- end }}
  {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
  {{/* # if broker enables TLS, configure proxy to talk to broker using TLS */}}
  brokerServiceURLTLS: {{ template "pulsar.proxy.broker.service.url.tls" . }}
  brokerWebServiceURLTLS: {{ template "pulsar.proxy.web.service.url.tls" . }}
  tlsEnabledWithBroker: "true"
  tlsCertRefreshCheckDurationSec: "300"
  brokerClientTrustCertsFilePath: "/var/run/secrets/boostport.com/issue_ca.crt"
  {{- end }}
  {{- if not (and .Values.tls.enabled .Values.tls.broker.enabled) }}
  brokerServiceURL: {{ template "pulsar.proxy.broker.service.url" . }}
  brokerWebServiceURL: {{ template "pulsar.proxy.web.service.url" . }}
  {{- end }}
  {{/* # Client configuration is purposefully configured to localhost of the proxy. */}}
  {{/* # When using the client here we want to talk to this specific proxy not any proxy. */}}
  {{- if and .Values.tls.enabled .Values.tls.proxy.enabled }}
  webServiceUrl: https://localhost:{{- .Values.proxy.ports.https -}}/
  brokerServiceUrl: pulsar+ssl://localhost:{{- .Values.proxy.ports.pulsarssl -}}/
  authPlugin: org.apache.pulsar.client.impl.auth.AuthenticationTls
  authParams: "tlsCertFile:/var/run/secrets/boostport.com/server.crt,tlsKeyFile:/var/run/secrets/boostport.com/server.key"
  {{- else -}}
  webServiceUrl: http://localhost:{{- .Values.proxy.ports.http -}}/
  brokerServiceUrl: pulsar://localhost:{{- .Values.proxy.ports.pulsar -}}/
  {{- end -}}

  {{/* # Metadata settings */}}
  zookeeperServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
  {{- if .Values.pulsar_metadata.configurationStore }}
  configurationStoreServers: "{{ .Values.pulsar_metadata.configurationStore }}{{ .Values.pulsar_metadata.configurationStoreMetadataPrefix }}"
  {{- end }}
  {{- if not .Values.pulsar_metadata.configurationStore }}
  configurationStoreServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
  {{- end }}

  {{/* # Authentication Settings */}}
  {{- if .Values.auth.authentication.enabled }}
  authenticationEnabled: "true"
  forwardAuthorizationCredentials: "true"
  authenticationProviders: "org.apache.pulsar.broker.authentication.AuthenticationProviderTls"
  brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
  brokerClientAuthenticationParameters: "tlsCertFile:/var/run/secrets/boostport.com/server.crt,tlsKeyFile:/var/run/secrets/boostport.com/server.key"

  {{- if and (eq .Values.auth.authentication.provider "jwt") (not .Values.auth.vault.enabled) }}
  {{/* # token authentication configuration */}}
  authenticationProviders: "org.apache.pulsar.broker.authentication.AuthenticationProviderToken"
  brokerClientAuthenticationParameters: "file:///pulsar/tokens/proxy/token"
  brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
  {{- if .Values.auth.authentication.jwt.usingSecretKey }}
  tokenSecretKey: "file:///pulsar/keys/token/secret.key"
  {{- else }}
  tokenPublicKey: "file:///pulsar/keys/token/public.key"
  {{- end }}
  {{- end }}
  {{- end }}
  {{ range $k, $v := .Values.proxy.configData }}
  {{ $k}}: {{ $v|quote }}
  {{ end }}
  {{- if .Values.auth.authorization.enabled }}
  {{/* # disable authorization on proxy and forward authorization credentials to broker */}}
  authorizationEnabled: "false"
  forwardAuthorizationCredentials: "true"
  superUserRoles: {{ .Values.auth.superUsers.broker }},{{ .Values.auth.superUsers.proxy }},{{ .Values.auth.superUsers.client }},{{ .Values.auth.superUsers.pulsar_manager }}
  {{- end }}
  {{/* # Include log configuration file, If you want to configure the log level and other configuration */}}
  {{/* # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf */}}
{{ tpl (.Files.Glob "conf/proxy/log4j2.yaml").AsConfig . | indent 2 }}
{{- end }}
