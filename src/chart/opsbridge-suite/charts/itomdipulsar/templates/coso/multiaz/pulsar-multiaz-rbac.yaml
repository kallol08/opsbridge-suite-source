{{/* # */}}
{{/* # Licensed to the Apache Software Foundation (ASF) under one */}}
{{/* # or more contributor license agreements.  See the NOTICE file */}}
{{/* # distributed with this work for additional information */}}
{{/* # regarding copyright ownership.  The ASF licenses this file */}}
{{/* # to you under the Apache License, Version 2.0 (the */}}
{{/* # "License"); you may not use this file except in compliance */}}
{{/* # with the License.  You may obtain a copy of the License at */}}
{{/* # */}}
{{/* #   http://www.apache.org/licenses/LICENSE-2.0 */}}
{{/* # */}}
{{/* # Unless required by applicable law or agreed to in writing, */}}
{{/* # software distributed under the License is distributed on an */}}
{{/* # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY */}}
{{/* # KIND, either express or implied.  See the License for the */}}
{{/* # specific language governing permissions and limitations */}}
{{/* # under the License. */}}
{{/* # */}}

{{/* # Multi-AZ job only when configure-data-placement-policy is set. */}}
{{ if eq ( .Values.itomdipulsar.configureDataPlacementPolicy) true -}}
{{/* # This service account is used in job itomdipulsar-multiaz-job. */}}
{{- if  eq (((.Values.global).rbac).serviceAccountCreate)  true  }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ template "pulsar.multiazServiceAccount" . }}"
  namespace: {{ .Release.Namespace }}
{{- end }}
---
{{/* # The generate-certificate init container in job itomdipulsar-multiaz-job */}}
{{/* # accesses configmap and secret to get CAs and roleId secret. */}}
{{/* # Since it accesses these resoures in the namespace, permissions for */}}
{{/* # these resources are set via Role. */}}
{{- if  eq (((.Values.global).rbac).roleCreate)  true  }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: "{{ template "pulsar.multiazServiceAccountRoleName" . }}"
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets","pods"]
  verbs: ["get", "list", "update" , "patch"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list"]
{{- end }}
---
{{/* # The job itomdipulsar-multiaz-job acceses pods and nodes k8s APIs. */}}
{{/* # ClusterRole is used to set permissions for these cluster-scoped resources. */}}
{{- if  eq (((.Values.global).rbac).clusterRoleCreate) true }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: "{{ template  "pulsar.multiazClusterRoleName" . }}"
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
{{- end }}

---
{{- if  eq (((.Values.global).rbac).roleCreate)  true  }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ template "pulsar.multiazServiceAccountRoleName" . }}-rb-"
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ template "pulsar.multiazServiceAccountRoleName" . }}"
subjects:
- kind: ServiceAccount
  name: "{{ template "pulsar.multiazServiceAccount" . }}"
  namespace: {{ .Release.Namespace }}
{{- end }}
---
{{- if  eq (((.Values.global).rbac).clusterRoleCreate)  true }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ template  "pulsar.multiazClusterRoleName" . }}-crb"
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ template  "pulsar.multiazClusterRoleName" . }}"
subjects:
- kind: ServiceAccount
  name: "{{ template "pulsar.multiazServiceAccount" . }}"
  namespace: {{ .Release.Namespace }}
{{- end }}
{{- end }}
