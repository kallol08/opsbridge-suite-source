{{- /* Copyright 2020-2023 Open Text */ -}}

{{- if .Values.rcp.enabled }}
{{- $name := print .Values.deployment.name "-rcp" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: STANDBY
  name: "{{ $name }}"
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "obm.rcp.labels" (dict "name" $name "Release" .Release "Chart" .Chart "Values" .Values) | indent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: "{{ $name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
{{ include "obm.rcp.labels" (dict "name" $name "Release" .Release "Chart" .Chart "Values" .Values) | indent 8 }}
    spec:
      serviceAccount: {{ .Values.rcp.rbac.serviceAccount | default $name }}
      serviceAccountName: {{ .Values.rcp.rbac.serviceAccount | default $name }}
{{- if .Values.global.docker.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.docker.imagePullSecret }}
{{- end }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user | int64 }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup | int64 }}
        fsGroup: {{ .Values.global.securityContext.fsGroup | int64 }}
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      nodeSelector:
        {{- toYaml (.Values.rcp.nodeSelector | default .Values.global.nodeSelector) | nindent 8 }}
      containers:
      - name: "{{ $name }}"
        image: {{ .Values.omi.image | default (printf "%s/%s/%s:%s" .Values.global.docker.registry .Values.global.docker.orgName .Values.omi.imageName .Values.omi.imageTag) }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        args: ["rcp"]
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - "[ $(/opt/OV/bin/ovc -status ovbbcrcp 2>/dev/null | grep -c ' Running *$') -eq 1 ]"
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 1
        resources:
          requests:
            memory: "100Mi"
            cpu: 0.5
          limits:
            memory: "400Mi"
            cpu: 1
        ports:
        - containerPort: 1383
          name: bbc
        - containerPort: 1384
          name: rcp
        securityContext:
          capabilities:
            drop:
            - ALL
          allowPrivilegeEscalation: false
        env:
        - name: "EXTERNALNAME"
          value: {{ .Values.global.externalAccessHost | quote }}
        - name: "EXTERNALPORT"
          value: {{ .Values.global.externalAccessPort | quote }}
        - name: "NAMESPACE"
          value: {{ .Release.Namespace }}
        - name: "OMI_USER_NAME"
          value: "omiuser"
        - name: "OMI_USER_GROUP"
          value: "omiusers"
        - name: "CONTAINER_NAME"
          value: "{{ $name }}"
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "POD_NAME"
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "FIPS_ENABLED"
          value: {{ .Values.global.fipsMode | quote }}
        - name: "BBC_INTERNAL_PORT"
          value: "1383"
        - name: "RCP_INTERNAL_PORT"
          value: "1384"
        volumeMounts:
        - name: tmp-volume
          mountPath: /mnt/tmpfs/opt/OV
          subPath: {{ .Values.deployment.name }}/opt/OV
        - name: tmp-volume
          mountPath: /mnt/tmpfs/var/opt/OV
          subPath: {{ .Values.deployment.name }}/var/opt/OV
        - name: tmp-volume
          mountPath: /mnt/tmpfs/opt/HP/BSM
          subPath: {{ .Values.deployment.name }}/opt/HP/BSM
        - name: data-storage
          subPath: "{{ $name }}/var/opt/OV/datafiles"
          mountPath: /mnt/var/opt/OV/datafiles
        - name: conf-storage
          subPath: "{{ $name }}/var/opt/OV/conf"
          mountPath: /mnt/var/opt/OV/conf
        - name: log-storage
          subPath: "{{ $name }}/var/opt/OV/log"
          mountPath: /mnt/var/opt/OV/log
        - name: bbc-trusted-certs
          mountPath: /bbc-trusted-certs
        - name: rcp-targets
          mountPath: /rcp-targets
        - name: rcp-cert
          mountPath: /rcp-cert
        - mountPath: /mnt/var/opt/OV/shared/server/log
          name: tmp-volume
          subPath: var/opt/OV/shared/server/log
        - mountPath: /mnt/var/opt/OV/databases
          name: tmp-volume
          subPath: var/opt/OV/databases
        - mountPath: /mnt/var/opt/OV/bin/instrumentation
          name: tmp-volume
          subPath: var/opt/OV/bin/instrumentation
        - mountPath: /mnt/var/opt/OV/shared/server/conf
          name: tmp-volume
          subPath: var/opt/OV/shared/server/conf
        - mountPath: /mnt/var/opt/OV/shared/server/datafiles
          name: tmp-volume
          subPath: var/opt/OV/shared/server/datafiles
        - mountPath: /mnt/var/opt/OV/tmp
          name: tmp-volume
          subPath: var/opt/OV/tmp
        - mountPath: /mnt/var/opt/OV/shared/server/data
          name: tmp-volume
          subPath: var/opt/OV/shared/server/data
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: conf-storage
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values) | nindent 8 }}
      - name: log-storage
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: data-storage
        {{- include "helm-lib.pvcStorage" (dict "claim" "dataVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: bbc-trusted-certs
        configMap:
          defaultMode: 0444
          name: {{ .Values.deployment.name }}-bbc-trusted-certs
      - name: rcp-targets
        configMap:
          defaultMode: 0444
          name: {{ .Values.deployment.name }}-rcp-targets
      - name: rcp-cert
        secret:
          defaultMode: 0400
          secretName: {{ .Values.deployment.name }}-rcp-certificate
{{- end }}
