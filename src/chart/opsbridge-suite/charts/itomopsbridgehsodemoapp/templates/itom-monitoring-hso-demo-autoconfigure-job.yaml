{{/*# Â© 2023 Open Text*/}}
{{/*#*/}}
{{/*#*/}}
{{/*#*/}}
{{ if .Values.global.monitoringService.demoMode -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
  name: itom-monitoring-hso-demo-autoconfigure-job
  namespace: {{ .Release.Namespace }}
  labels:
    app: itom-monitoring-hso-demo-autoconfigure-job
spec:
  replicas: 1
  selector:
    matchLabels:
      app: itom-monitoring-hso-demo-autoconfigure-job
  backoffLimit: 0
  template:
    metadata:
      name: itom-monitoring-hso-demo-autoconfigure-job
      labels:
        app.kubernetes.io/name: itom-monitoring-hso-demo-autoconfigure-job
        app.kubernetes.io/managed-by: {{ .Release.Namespace }}
        app.kubernetes.io/version: {{ .Values.hsodemoautoconfigurejob.imageTag }}
        itom.microfocus.com/capability: monitoring_service
        tier.itom.microfocus.com/backend: backend
        app: itom-monitoring-hso-demo-autoconfigure-job
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      initContainers:
      - name: waitfor-itom-vault-8200
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: IfNotPresent
        command: [ "sh", "-c", "until nc -z itom-vault 8200 -w 5 ; do echo waiting for itom-vault:8200...; sleep 5; done; exit 0"]
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      {{- include "helm-lib.containers.vaultInit" (dict "containerName" "install" "certNames" (printf "itom-monitoring-hso-demo-autoconfigure-job") "Values" .Values) | nindent 6 }}
      - name: waitforservices
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        command: ["sh","-c","services=\"$IDM_ADDR itom-monitoring-admin-svc:8443 itom-monitoring-hso-demo-app-svc:40006\"; for svc in $services; do until nc -z ${svc%:*} ${svc#*:} -w 30; do echo waiting for $svc...; sleep 60; done; done; sleep 60;" ]
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: {{ .Values.global.securityContext.user }}
          runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        env:
        - name: IDM_ADDR
          value: {{ .Values.global.idm.serviceName | default "itom-idm-svc" }}:{{ .Values.global.idm.internalPort | default "18443" }}
      containers:
      - name: itom-monitoring-hso-demo-autoconfigure-job
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.hsodemoautoconfigurejob.image }}:{{ .Values.hsodemoautoconfigurejob.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.hsodemoautoconfigurejob.resources.requests.cpu }}
            memory: {{ .Values.hsodemoautoconfigurejob.resources.requests.memory }}
          limits:
            cpu: {{ .Values.hsodemoautoconfigurejob.resources.limits.cpu }}
            memory: {{ .Values.hsodemoautoconfigurejob.resources.limits.memory }}
        volumeMounts:
          - name: vault-token
            mountPath: /var/run/secrets/boostport.com
          - name: hso-demo-autoconfigure-job-log-volume
            mountPath: /logs
            subPath: hso-demo-autoconfigure/job 
          - name: hso-demo-autoconfigure-job-conf-volume
            mountPath: /configurations
            subPath: hso-demo-autoconfigure/configurations
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: LOG_LEVEL
          value: INFO
        - name: HSO_SAMPLE_DATA_INJECTOR_URL
          value: https://{{ required "Required value is not defined: hsodemoautoconfigurejob.hsoSampleDataInjectorHost" .Values.hsodemoautoconfigurejob.hsoSampleDataInjectorHost }}:{{ required "Required value is not defined: hsodemoautoconfigurejob.hsoSampleDataInjectorPort" .Values.hsodemoautoconfigurejob.hsoSampleDataInjectorPort }}/
        - name: "STATICFILES_SVC"
          value:  {{ .Values.hsodemoautoconfigurejob.staticFilesHost }}:{{ .Values.hsodemoautoconfigurejob.staticFilesPort }}
        - name: "VAULT_SECRET_DIR"
          value: /var/run/secrets/boostport.com
        - name: "MONITORING_ADMIN_ENDPOINT"
          value: {{ .Values.hsodemoautoconfigurejob.monitoringAdminHost }}:{{ .Values.hsodemoautoconfigurejob.monitoringAdminPort }}
        - name: "EXTERNAL_ACCESS_HOST"
          value:  {{ .Values.global.externalAccessHost | quote }}
        - name: "EXTERNAL_ACCESS_PORT"
          value:  {{ .Values.global.externalAccessPort | quote }}
        - name: "CS_PASSWORD_KEY"
          value: {{ default "idm_integration_admin_password" | quote }}
        - name: "CS_USER"
          value: {{ default "integration_admin" | quote }}
        - name: "CS_TENANT"
          value: {{ .Values.global.idm.additionalSeededOrg.name | default "Provider" | quote }}
        - name: "UD_USER"
          value: {{ .Values.global.cms.udUsername | default "integration_admin" | quote }}
        - name: "UD_PASSWORD_KEY"
          value: {{ .Values.global.cms.secrets.admin | default "idm_integration_admin_password" | quote }}
        - name: "ENDPOINT_RETRY_COUNT"
          value:  {{ .Values.hsodemoautoconfigurejob.endpointRetryCount | default 10 | quote }}
        - name: CONTAINER_NAME
          value: itom-monitoring-hso-demo-autoconfigure-job
        - name: POD_NAME
          valueFrom:
           fieldRef:
            fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
           fieldRef:
            fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
           fieldRef:
            fieldPath: spec.nodeName
      {{- with (coalesce .Values.nodeSelector .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: vault-token
        emptyDir: {}
      - name: hso-demo-autoconfigure-job-conf-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: hso-demo-autoconfigure-job-log-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
{{- end }}        