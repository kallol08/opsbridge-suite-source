apiVersion: batch/v1
kind: CronJob
metadata:
  name: itom-analytics-data-retention-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- template "aec.defaultLabels" (dict "NameSuffix" "data-retention-job" "Version" .Values.aecImages.dataRetentionJob.imageTag "Component" "analytics-data-retention" "HelmRelease" .Release.Name "Chart" .Chart) }}
spec:
  schedule: "0 */12 * * *"
  concurrencyPolicy: Replace
  startingDeadlineSeconds: 300
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 2
      ttlSecondsAfterFinished: 172800 # Delete job after 2 days. Else failed jobs could be kept forever
      template:
        metadata:
          annotations:
            {{- if .Values.global.vaultAppRole }}
            pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
            {{- else }}
            pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
            {{- end }}
            pod.boostport.com/vault-init-container: install
          labels:
            itom.microfocus.com/capability: aiops
        spec:
          serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}
          securityContext:
            runAsUser: {{ .Values.global.securityContext.user }}
            runAsGroup: {{ .Values.global.securityContext.fsGroup }}
            fsGroup: {{ .Values.global.securityContext.fsGroup }}
            runAsNonRoot: true
          initContainers:
          {{- include "helm-lib.containers.vaultInit" (dict "certNames" "itom-analytics-data-retention" "Values" .Values) | nindent 10 }}
          {{ include "aec.cacertBundler" . | nindent 10 }}
          {{ include "aec.waitForResourcePools" . | nindent 10 }}

          containers:
          - name: data-retention-job
            image: {{ coalesce .Values.aecImages.dataRetentionJob.dockerRegistry .Values.docker.registry .Values.global.docker.registry -}}
            / {{- coalesce .Values.aecImages.dataRetentionJob.orgName .Values.docker.orgName .Values.global.docker.orgName -}}
            / {{- .Values.aecImages.dataRetentionJob.image -}}
            : {{- .Values.aecImages.dataRetentionJob.imageTag }}
            imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            env:
            - name: "ITOM_ANALYTICS_SCHEMA"
              value: "itom_analytics_
                     {{- if hasKey .Values.global.di "tenant" }} {{- .Values.global.di.tenant -}} {{ else -}} provider {{- end }}_
                     {{- if hasKey .Values.global.ea "deployment" }} {{- .Values.global.ea.deployment -}} {{ else -}} {{ .Values.global.di.deployment }} {{- end }}"
            - name: "DI_DATA_SET_SCHEMA"
              value: "mf_shared_{{ if hasKey .Values.global.di "tenant" }} {{- .Values.global.di.tenant -}} {{ else -}} provider {{- end }}_{{ .Values.global.di.deployment }}"
            - name: "RETENTION_CORRELATION_GROUPS_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.correlation-groups-months
                  optional: true
            - name: "RETENTION_CORRELATION_METADATA_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.correlation-metadata-months
                  optional: true
            - name: "RETENTION_TOPOLOGY_METADATA_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.topology-metadata-months
                  optional: true
            - name: "RETENTION_CORRELATION_GRAPH_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.correlation-graph-months
                  optional: true
            - name: "RETENTION_CORRELATION_TRANSACTIONS_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.correlation-transactions-months
                  optional: true
            - name: "RETENTION_TEXT_CLUSTER_CACHE_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.text-clusters-cache-months
                  optional: true
            - name: "RETENTION_OBM_CORRELATION_LABELS_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.obm-correlation-labels-months
                  optional: true
            - name: "RETENTION_OBM_CLUSTER_IDS_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.obm-cluster-ids-months
                  optional: true
            - name: "RETENTION_ROOT_CAUSE_EVENT_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.root-cause-event-months
                  optional: true
            - name: "RETENTION_ROOT_CAUSE_SCORE_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.root-cause-score-months
                  optional: true
            - name: "RETENTION_ROOT_CAUSE_GROUP_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.root-cause-group-months
                  optional: true
            - name: "RETENTION_ROOT_CAUSE_CLUSTER_GROUP_MONTHS"
              valueFrom:
                configMapKeyRef:
                  name: itom-analytics-config
                  key: aiops.retention.root-cause-cluster-group-months
                  optional: true
            - name: "IS_VERTICA_EMBEDDED"
              value: "{{ .Values.global.vertica.embedded }}"
            - name: "EXTERNAL_VERTICA_HOSTNAMES"
              value: {{ .Values.global.vertica.host }}
            - name: "EXTERNAL_VERTICA_PORT"
              value: "{{ .Values.global.vertica.port }}"
            - name: "EXTERNAL_VERTICA_DB"
              value: {{ .Values.global.vertica.db }}
            - name: "EXTERNAL_VERTICA_USERNAME"
              value: {{ .Values.global.vertica.rwuser }}
            - name: "EXTERNAL_VERTICA_PASS_KEY"
              value: {{ .Values.global.vertica.rwuserkey }}
            - name: "AEC_BACKGROUND_POOL"
              value: {{ include "aec.backgroundResourcepool" . | quote }}
            - name: "EXTERNAL_VERTICA_TLS_MODE"
              {{- if .Values.global.vertica.tlsEnabled }}
              value: {{ .Values.deployment.vertica.tlsMode }}
              {{- else }}
              value: disable
              {{- end }}
            volumeMounts:
            {{- if (hasKey .Values.global "tlsTruststore") }}
            - name: {{ .Values.externalCerts.volumeName }}
              mountPath: /service/conf/vertica # base container path
              readOnly: true
            {{- end }}
            - name: vault-token
              mountPath: /var/run/secrets/boostport.com
            - name: tmp-storage
              mountPath: /tmp
            - name: conf-storage
              mountPath: /service/conf
              subPath: itom-analytics/data-retention-job
            - name: log-storage
              mountPath: /service/log
              subPath: itom-analytics/data-retention-job
            resources:
              requests:
                memory: "128Mi"
                cpu: "0.1"
              limits:
                memory: "256Mi"
                cpu: "1"
          restartPolicy: Never
          {{- with ( coalesce .Values.nodeSelector .Values.global.nodeSelector ) }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
          {{ include "aec.externalCertsVolume" . | indent 10 }}
          - name: vault-token
            emptyDir: {}
          - name: {{ .Values.cacerts.volumeName }}
            emptyDir: {}
          - name: tmp-storage
            emptyDir:
              medium: Memory
          - name: conf-storage
          {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 12 }}
          - name: log-storage
          {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 12 }}
