{{ $namePrefix := include "namePrefix" . }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{ else }}
apiVersion: networking.k8s.io/v1beta1
{{ end -}}
kind: Ingress
metadata:
  name: {{ $namePrefix }}-autopass-lms
  annotations:
  {{- if .Values.deployment.ingress.annotations }}
{{ toYaml  .Values.deployment.ingress.annotations | indent 4 }}
  {{- else }}
    kubernetes.io/ingress.class: "nginx"
    {{ default "ingress.kubernetes.io" .Values.global.nginx.annotationPrefix }}/backend-protocol: "HTTPS"
    {{ default "ingress.kubernetes.io" .Values.global.nginx.annotationPrefix }}/secure-backends: "true"
    {{ default "ingress.kubernetes.io" .Values.global.nginx.annotationPrefix }}/session-cookie-name: "route"
    {{ default "ingress.kubernetes.io" .Values.global.nginx.annotationPrefix }}/affinity: "cookie"
  {{- end }}
spec:
  rules:
  - http:
      paths:
      - path: /autopass
        {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
        pathType: Prefix
        backend:
          service:
            name: {{ $namePrefix }}-autopass-lms
            port:
              number: 5814
        {{- else }}
        backend:
          serviceName: {{ $namePrefix }}-autopass-lms
          servicePort: 5814
        {{- end -}}
    {{- if .Values.global.setFqdnInIngress }}
    host: {{ required "Required value is not defined: externalAccessHost" .Values.global.externalAccessHost }}
    {{- end }}
  tls:
  - hosts:
    - {{ required "Required value is not defined: externalAccessHost" .Values.global.externalAccessHost }}
    secretName: {{ .Values.global.secretName | default "nginx-default-secret" | quote }}
