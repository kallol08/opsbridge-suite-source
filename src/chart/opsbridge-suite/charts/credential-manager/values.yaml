# Copyright 2018-2023 Open Text.
#
# The only warranties for products and services of Open Text and its affiliates and licensors (???Open Text???) are as may be
# set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed
# as constituting an additional warranty. Open Text shall not be liable for technical or editorial errors or omissions
# contained herein. The information contained herein is subject to change without notice.
#
# Except as specifically indicated otherwise, this document contains confidential information and a valid license is
# required for possession, use or copying. If this work is provided to the U.S. Government, consistent with
# FAR 12.211 and 12.212, Commercial Computer Software, Computer Software Documentation, and Technical Data for
# Commercial Items are licensed to the U.S. Government under vendor???s standard commercial license.
global:
  vaultRoleId:
  vaultAppRole:

  # Name of the K8S secret
  # kubeSecret:
  # initSecrets:

  # The user/group IDs (UID/GID) for runtime deployment
  securityContext:
    user: "1999"
    fsGroup: "1999"

  featureGates:
    enableItomAutomationManagerIntegration: false

  # parameters for RBAC
  rbac:
    # true to create a service account
    serviceAccountCreate: true
    # true to create a role
    roleCreate: true

  prometheus:
    #Set to true to deploy scraping rules (ServiceMonitor) and alerts (PrometheusRule)
    deployPrometheusConfig: false
    #Set to true to deploy configmaps defining the Grafana dashboards
    deployGrafanaConfig: false
    #Define the label(s) that Prometheus looks for when discovering scraping rules
    prometheusSelector:
      prometheus_config: "1"
    #Define the label(s) that Grafana looks for when discovering dashboards
    grafanaSelector:
      grafana_dashboard: "1"
    #Define the TLS configuration
    tlsConfig:
      ca:
        configMap:
          key: RID_ca.crt # [DO NOT CHANGE]          
          name: public-ca-certificates # [DO NOT CHANGE]
      cert:
        secret:
          key: credential-manager.crt # [DO NOT CHANGE]
          name: cm-cluster-cert-secret # [DO NOT CHANGE]
      keySecret:
        key: credential-manager.key # [DO NOT CHANGE]
        name: cm-cluster-cert-secret # [DO NOT CHANGE]  
        
  # Database details. Default is Internal Postgres
  database:
    # internal: true/false, default value true indicates use embedded postgres and default values for host, port, name will be used
    # false indicates external db will be used and the values for the below params should be provided
    # for oracle, only internal=false supported
    internal: true
    # Possible values for db engine type: postgresql, oracle
    type:
    # DB host
    host:
    # DB port
    port:
    # Database user
    user:
    # Database user password key
    userPasswordKey: CM_DB_PASSWD_KEY
    # true when TLS is enabled
    tlsEnabled: true
    # tls Trust Store config map
    tlsTruststore:
    # TLS cert
    tlsCert:
    # Oracle wallet name
    oracleWalletName:
    # SSL Client Authentication
    sslClientAuthentication: true
    # SSL Server DN Match
    sslServerDnMatch: "off"
    # For Oracle, provide exactly one of the following:
    oracleConnectionString:
    oracleServiceName:
    oracleSid:

    # Database name
    dbName:
    # (PostgreSQL only) Database schema name
    schema:

  # Docker registry and org name
  docker:
    orgName: hpeswitom
    registry: localhost:5000
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  # credential-manager image name & version
  credentialManager:
    image: itom-credential-manager
    imageTag: 1.21.0.60

  vault:
    realmList: "RE:365"

  # Image definitions for init containers
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.19.0-0026
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.19.0-0026
  toolsBase:
    image: itom-tools-base
    imageTag: 1.4.0-0018

  cluster:
    k8sProvider: cdf

# Uncomment only if you want a different node selector for the subchart
# nodeSelector: {}
  # label_name_one: value
  # label_name_two: value

deployment:
  # deployment.x.* takes precedence over global.x.* parameters above
  featureGates:
    enableItomAutomationManagerIntegration: false

  rbac:
    # name of RBAC service account
    serviceAccount: credential-manager-sa

  prometheus:
    #Define the TLS configuration
    tlsConfig:
      ca:
        configMap:
          name:
          key:
      cert:
        secret:
          key:
          name:
      keySecret:
        key:
        name:

  # Database details. Default is Internal Postgres
  database:
    # Possible values for db engine type: postgresql, oracle
    type:
    # DB host
    host:
    # DB port
    port:
    # Database user
    user:
    # Database user password key
    userPasswordKey: CM_DB_PASSWD_KEY

    # For Oracle, provide exactly one of the following:
    oracleConnectionString:
    oracleServiceName:
    oracleSid:

    # true when TLS is enabled
    tlsEnabled:
    # tls Trust Store config map
    tlsTruststore:
    # TLS cert
    tlsCert:
    # Oracle wallet name
    oracleWalletName:
    # SSL Client Authentication
    sslClientAuthentication:
    # SSL Server DN Match
    sslServerDnMatch:
    # Database name
    dbName:
    # (PostgreSQL only) Database schema name
    schema:
