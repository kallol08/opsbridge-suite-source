{{- if .Values.enableClusterLog }}
{{ $namePrefix := include "namePrefix" . }}
{{ $tlsVerifyEnabled := include "itom-fluentbit.tlsVerify.enabled" . }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $namePrefix }}-fluentbit-infra
  namespace: {{.Release.Namespace}}
  labels:
    k8s-app: fluentbit-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    deployments.microfocus.com/component: itom-fluentbit
    {{- if .Values.logging.labels }}
    {{- toYaml .Values.logging.labels  | nindent 4 }}
    {{- end }}
  annotations:
    deployment.microfocus.com/runlevel: DB
    deployment.microfocus.com/simple-update: ignore
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      k8s-app: fluentbit-logging
  template:
    metadata:
      labels:
        k8s-app: fluentbit-logging
        kubernetes.io/name: "itom-fluentbit-logging"
        kubernetes.io/cluster-service: "true"
        deployments.microfocus.com/component: itom-fluentbit
        {{- if .Values.logging.labels }}
        {{- toYaml .Values.logging.labels  | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "itom-fluentbit.serviceAccountName" . }}
      initContainers:
        - name: init
          image: "{{ .Values.global.docker.registry  }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.k8sSidecar.image  }}:{{ .Values.global.k8sSidecar.imageTag }}"
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          securityContext:
            runAsUser: {{ default 1999 .Values.global.securityContext.user }}
            runAsGroup: {{ default 1999 .Values.global.securityContext.fsGroup }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 50Mi
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: {{ .Values.daemonSet.configSelector.labelName }}
            - name: LABEL_VALUE
              value: {{ .Values.daemonSet.configSelector.labelValue | quote }}
            - name: FOLDER
              value: /fluentbit/config
            - name: RESOURCE
              value: both
            - name: UNIQUE_FILENAMES
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /fluentbit/config
      containers:
        - name: main
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            {{- if eq .Values.global.cluster.k8sProvider "openshift" }}
            privileged: true
            {{- else }}
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
              add:
              - SYS_ADMIN
            {{- end }}
          image: "{{ .Values.global.docker.registry  }}/{{ .Values.global.docker.orgName }}/{{ .Values.fluentbit.image  }}:{{ .Values.fluentbit.imageTag }}"
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - /fluentbit/scripts/liveness.sh
            initialDelaySeconds: 60
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: USAGE_TYPE
              value: daemonset
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLUSTER_NAME
              value: {{ .Values.global.cluster.name }}
            - name: FLUENT_BIT_LOG_RECEIVER_TYPE
              value: {{ .Values.logging.output.receiver.type }}
            - name: FLUENT_BIT_LOG_RECEIVER_URL
              value: {{ .Values.logging.output.receiver.url }}
            - name: FLUENT_BIT_LOG_RECEIVER_USER
              value: {{ .Values.logging.output.receiver.user }}
            - name: FLUENT_BIT_LOG_RECEIVER_OUTPUT_FORMAT
              value: {{ .Values.logging.output.receiver.format }}
            - name: FLUENT_BIT_LOG_RECEIVER_OUTPUT_DELIMITER
              value: {{ .Values.logging.output.receiver.delimiter | quote }}
            - name: OUTPUT_TO_ELASTICSEARCH_TIME_LOG_FORMAT
              value: {{ .Values.logging.output.receiver.elasticSearch.logTimeFormat | quote }}
            - name: OUTPUT_TO_OBA_LOG_TIME_FORMAT
              value: {{ .Values.logging.output.receiver.oba.logTimeFormat | quote }}
            {{- if or (hasPrefix "cdf-" .Values.global.cluster.k8sProvider) (eq .Values.global.cluster.k8sProvider "cdf") }}
            - name: K8S_HOME
              valueFrom:
                configMapKeyRef:
                  name: cdf-cluster-host
                  key: K8S_HOME
            {{- end }}
            {{- if .Values.logging.output.receiver.elasticSearch.esCloud.cloudId }}
            - name: ELASTICSEARCH_CLOUD_ID
              value: {{ .Values.logging.output.receiver.elasticSearch.esCloud.cloudId | quote }}
            {{- end }}
            {{- if .Values.logging.output.receiver.elasticSearch.aws.awsAuth }}
            - name: ELASTICSEARCH_AWS_AUTH
              value: {{ .Values.logging.output.receiver.elasticSearch.aws.awsAuth | quote }}
            - name: ELASTICSEARCH_AWS_REGION
              value: {{ .Values.logging.output.receiver.elasticSearch.aws.awsRegion | quote }}
            {{- end }}
            - name: HTTP_PROXY
              value: {{ .Values.global.proxy.httpProxy | quote }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.proxy.httpsProxy | quote }}
            - name: NO_PROXY
              value: {{ .Values.global.proxy.noProxy | quote }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - mountPath: /fluentbit/data
              name: fluentbit-data-dir
            - name: system-var-log-containers
              mountPath: /fluentbit/containers
            - name: log-location
              mountPath: /fluentbit/itom-logging
            - name: config
              mountPath: /fluentbit/config
            - name: system-var-log-pods
              mountPath: /var/log/pods
            {{- if and .Values.logging.input.hostLogDir.runtimeLog (ne .Values.global.cluster.k8sProvider "cdf") }}
            - name: container-runtime-log-dir
              mountPath: {{ .Values.logging.input.hostLogDir.runtimeLog }}
            {{- end}}
            {{- if or (hasPrefix "cdf-" .Values.global.cluster.k8sProvider) (eq .Values.global.cluster.k8sProvider "cdf") }}
            - name: system-run-log-dir
              mountPath: /fluentbit/system-run
            {{- end }}
            - name: system-var-log-dir
              mountPath: /fluentbit/system-var
            {{- if .Values.logging.output.receiver.password }}
            - name: receiver
              mountPath: "/fluentbit/receiver"
            {{- end }}
            {{- if and (and (not .Values.logging.output.receiver.caCert) (eq $tlsVerifyEnabled "On")) (.Values.global.tlsTruststore) }}
            - name: certificates-pool
              mountPath: "/fluentbit/certificates"
            {{- end }}
        - name: sc
          image: "{{ .Values.global.docker.registry  }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.k8sSidecar.image  }}:{{ .Values.global.k8sSidecar.imageTag }}"
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          securityContext:
            runAsUser: {{ default 1999 .Values.global.securityContext.user }}
            runAsGroup: {{ default 1999 .Values.global.securityContext.fsGroup }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 50Mi
          env:
            - name: METHOD
              value: SLEEP
            - name: LABEL
              value: {{ .Values.daemonSet.configSelector.labelName }}
            - name: LABEL_VALUE
              value: {{ .Values.daemonSet.configSelector.labelValue | quote }}
            - name: FOLDER
              value: /fluentbit/config
            - name: RESOURCE
              value: both
            - name: UNIQUE_FILENAMES
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /fluentbit/config
      terminationGracePeriodSeconds: 30
      securityContext:
        supplementalGroups: [{{ .Values.global.securityContext.fsGroup | default "1999" }}]
        seccompProfile:
          type: RuntimeDefault
      {{- if or .Values.daemonSet.tolerations .Values.global.cluster.tolerations }}
      tolerations:
      {{- if .Values.daemonSet.tolerations }}
      {{- toYaml .Values.daemonSet.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.global.cluster.tolerations }}
      {{- toYaml .Values.global.cluster.tolerations | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
        {{- if and .Values.logging.input.hostLogDir.runtimeLog (ne .Values.global.cluster.k8sProvider "cdf") }}
        - name:  container-runtime-log-dir
          hostPath:
            path: {{ .Values.logging.input.hostLogDir.runtimeLog }}
        {{- end }}
        - name: log-location
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 10 }}
        {{- if or (hasPrefix "cdf-" .Values.global.cluster.k8sProvider) (eq .Values.global.cluster.k8sProvider "cdf") }}
        - name: system-run-log-dir
          hostPath:
            path: /run/log
        {{- end }}
        - name: system-var-log-dir
          hostPath:
            path: /var/log
        - name: system-var-log-containers
          hostPath:
            path: /var/log/containers
        - name: system-var-log-pods
          hostPath:
            path: /var/log/pods
        - name: fluentbit-data-dir
          hostPath:
            path: {{ .Values.logging.input.dataDir }}
        {{- if and (and (not .Values.logging.output.receiver.caCert) (eq $tlsVerifyEnabled "On")) (.Values.global.tlsTruststore) }}
        - name: certificates-pool
          configMap:
            name: {{ .Values.global.tlsTruststore }}
        {{- end }}
        {{- if .Values.logging.output.receiver.password }}
        - name: receiver
          secret:
            secretName: {{ $namePrefix }}-fluentbit-receiver
        {{- end }}
        - name: config
          emptyDir: {}
        - name: tmp
          emptyDir: {}
{{- end }}

