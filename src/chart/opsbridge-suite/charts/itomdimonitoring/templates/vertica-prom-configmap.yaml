{{/* # */}}
{{/* # Copyright 2023 Open Text. */}}
{{/* # */}}
{{/* # The only warranties for products and services of Open Text and its affiliates and  */}}
{{/* # licensors (“Open Text”) are as may be set forth in the express warranty statements  */}}
{{/* # accompanying such products and services. Nothing herein should be construed as */}}
{{/* # constituting an additional warranty. Open Text shall not be liable for technical or */}}
{{/* # editorial errors or omissions contained herein. The information contained herein is  */}}
{{/* # subject to change without notice. */}}
{{/* # */}}
{{/* # Except as specifically indicated otherwise, this document contains confidential  */}}
{{/* # information and a valid license is required for possession, use or copying. If this work  */}}
{{/* # is provided to the U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer  */}}
{{/* # Software, Computer Software Documentation, and Technical Data for Commercial Items are licensed to */}}
{{/* # the U.S. Government under vendor’s standard commercial license. */}}
{{/* # */}}

{{ if eq (.Values.monitoring.verticapromexporter.enabled | toString) "true" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "monitoring.fullname" . }}-{{ .Values.monitoring.verticapromexporter.component }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "monitoring.name" . }}
    chart: {{ template "monitoring.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.monitoring.verticapromexporter.component }}
    cluster: {{ template "monitoring.fullname" . }}
data:
  VERTICA_HOST: {{ template "vertica.host" .}}
  VERTICA_PORT: {{ template "vertica.port" .}}
  VERTICA_DATABASE: {{ template "vertica.db" .}}
  VERTICA_USER: {{ template "vertica.rouser" .}}
  VERTICA_USER_KEY: {{ .Values.global.vertica.rouserkey | quote }}
  ITOM_METADATA_SCHEMA: itom_di_metadata_{{ .Values.global.di.tenant }}_{{ .Values.global.di.deployment }}
  VERTICA_SCHEDULER_SCHEMA: itom_di_scheduler_{{ .Values.global.di.tenant }}_{{ .Values.global.di.deployment }}
{{- if .Values.global.vertica.embedded }}
  {{- if .Values.monitoring.verticapromexporter.config.promtlsMode }}
  VERTICA_TLS_MODE: {{ .Values.monitoring.verticapromexporter.config.promtlsMode }}
  {{- else if (eq (.Values.global.vertica.tlsEnabled | toString) "true") }}
  VERTICA_TLS_MODE: "server-strict"
  {{- else if (eq (.Values.global.vertica.tlsEnabled | toString) "false") }}
  VERTICA_TLS_MODE: "none"
  {{- else }}
  VERTICA_TLS_MODE: "none"
  {{- end }}
{{- else }}
  {{- if .Values.monitoring.verticapromexporter.config.promtlsMode }}
  VERTICA_TLS_MODE: {{ .Values.monitoring.verticapromexporter.config.promtlsMode }}
  {{- else if (eq (.Values.global.vertica.tlsEnabled | toString) "true") }}
  VERTICA_TLS_MODE: "server-strict"
  {{- else if (eq (.Values.global.vertica.tlsEnabled | toString) "false") }}
  VERTICA_TLS_MODE: "none"
  {{- else }}
  VERTICA_TLS_MODE: "none"
  {{- end }}
{{- end }}
  EXPORTER_UID: "{{ .Values.global.securityContext.user }}"
  EXPORTER_GID: "{{ .Values.global.securityContext.fsGroup }}"
  QUERY_TIMEOUT_SEC: "{{ .Values.monitoring.verticapromexporter.config.queryTimeoutSec }}"
  SCRAPE_INTERVAL_SEC: "{{ .Values.monitoring.verticapromexporter.config.scrapeIntervalSec }}"
  TABLE_PARALLELISM: "{{ .Values.monitoring.verticapromexporter.config.tableParallelism }}"
{{- if hasKey .Values.monitoring "simplifiedScheduler" }}
  SCHEDULER_SSENABLE: {{ .Values.monitoring.simplifiedScheduler | quote }}
{{- end }}
  tlsTrustCertFilePath: /var/run/secrets/boostport.com/issue_ca.crt
{{- if .Values.monitoring.verticapromexporter.config.monitoringResourcePool }}
  MONITOR_VERTICA_RESOURCE_POOL: {{ .Values.monitoring.verticapromexporter.config.monitoringResourcePool }}
{{- end }}
{{- if .Values.monitoring.verticapromexporter.configData.schedulerMetricsTable }}
  SCHEDULER_METRICS_TABLE: {{ .Values.monitoring.verticapromexporter.configData.schedulerMetricsTable }}
{{- else }}
{{- if hasKey .Values.monitoring "simplifiedScheduler" }}
{{- if (eq (.Values.monitoring.simplifiedScheduler | toString) "false") }}
  SCHEDULER_METRICS_TABLE: "microbatch_history"
{{- else if (eq (.Values.monitoring.simplifiedScheduler | toString) "true") }}
  SCHEDULER_METRICS_TABLE: "stream_microbatch_history"
{{- end }}
{{- else }}
  SCHEDULER_METRICS_TABLE: "stream_microbatch_history"
{{- end }}
{{- end }}
{{- end }}
