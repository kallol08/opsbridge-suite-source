apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.microfocus.com/default-replica-count: "{{ .Values.replicaCount}}"
    deployment.microfocus.com/runlevel: UP
    reloader.stakater.com/auto: "true"
  name: itom-oba-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Name }}
    app.kubernetes.io/name: itom-oba-config
    itom.microfocus.com/capability: anomalyDetection
    itom.microfocus.com/capability-version: {{ mustRegexReplaceAll "^([-A-Za-z0-9_.]+).*$" .Chart.Version "${1}" }}-{{ .Chart.AppVersion }}
    tier.itom.microfocus.com/backend: backend
spec:
  selector:
    matchLabels:
      app: itom-oba-config
  template:
    metadata:
      labels:
        app: itom-oba-config
        itom.microfocus.com/capability: aiops
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      serviceAccountName: {{ required "Required value is not defined: serviceAccount" .Values.deployment.rbac.serviceAccount }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      initContainers:
        {{- include "helm-lib.containers.vaultInit" (dict "certNames" (printf "Common_Name:%s,Additional_SAN:itom-oba-config-svc/itom-oba-config-svc.%s.svc/itom-oba-config-svc.%s.svc.cluster.local" .Values.global.externalAccessHost .Release.Namespace .Release.Namespace) "Values" .Values) | nindent 8 }}

        {{- include "helm-lib.waitFor" (dict "service" "itom-idm-svc" "port" "18443" "Values" .Values) | nindent 8 }}

        {{- include "helm-lib.waitFor" (dict "service" "bvd-explore" "port" "4000" "Values" .Values) | nindent 8 }}

        - name: itom-oba-config-ui-uploader
          image: {{ coalesce .Values.itomObaConfigImages.itomObaConfigUiUploader.dockerRegistry .Values.docker.registry .Values.global.docker.registry -}}
          / {{- coalesce .Values.itomObaConfigImages.itomObaConfigUiUploader.orgName .Values.docker.orgName .Values.global.docker.orgName -}}
          / {{- .Values.itomObaConfigImages.itomObaConfigUiUploader.image -}}
          : {{- .Values.itomObaConfigImages.itomObaConfigUiUploader.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "5m"
              memory: "5Mi"
          env:
          - name: "BVD_URL"
            value: {{ .Values.global.ea.obaConfig.bvdExploreUrl }}
          - name: "BVD_CONTEXT_ROOT"
            valueFrom:
              configMapKeyRef:
                name: bvd-config
                key: bvd.exploreContextRoot
          - name: "IDM_URL"
            valueFrom:
              configMapKeyRef:
                key: suite.idm_addr
                name: bvd-services-config
          - name: "INTEGRATION_USER"
            valueFrom:
              configMapKeyRef:
                key: suite.integration_user
                name: bvd-services-config
          - name: "INTEGRATION_PW_KEY"
            valueFrom:
              configMapKeyRef:
                key: suite.integration_user_password_key
                name: bvd-services-config
          - name: "IDM_ORGANIZATION"
            valueFrom:
              configMapKeyRef:
                name: bvd-services-config
                key: suite.idm_organization
          - name: PLUGINS_DIR
            value: /var/bvd/plugins
          volumeMounts:
          - name: podinfo
            mountPath: /etc/podinfo
          - name: ui-removal-script
            mountPath: /var/scripts
          - name: bvd-explore-var
            mountPath: /var/bvd
            subPath: bvd/var/bvd
          {{- include "itom-oba-config.vault.volumeMount" . | nindent 10 }}
      {{- with ( coalesce .Values.nodeSelector .Values.global.nodeSelector ) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
{{/*        ## obmsetup container offers a rest service to configure new obm instances*/}}
        - name: itom-oba-config
          image: {{ coalesce .Values.itomObaConfigImages.itomObaConfig.dockerRegistry .Values.docker.registry .Values.global.docker.registry -}}
          / {{- coalesce .Values.itomObaConfigImages.itomObaConfig.orgName .Values.docker.orgName .Values.global.docker.orgName -}}
          / {{- .Values.itomObaConfigImages.itomObaConfig.image -}}
          : {{- .Values.itomObaConfigImages.itomObaConfig.imageTag }}
          imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.5"
            limits:
              memory: "1Gi"
              cpu: "1"
          env:
          - name: SERVICE_HEAP
            value: "500000000" {{- /* 500 MB */}}
          - name: "LOG_LEVEL"
            value: "INFO"
          - name: "EXTERNAL_VERTICA_HOSTNAMES"
            value: {{ .Values.global.vertica.host }}
          - name: "EXTERNAL_VERTICA_PORT"
            value: "{{ .Values.global.vertica.port }}"
          - name: "EXTERNAL_VERTICA_TLS_MODE"
            {{- if .Values.global.vertica.tlsEnabled }}
            value: {{ .Values.deployment.vertica.tlsMode }}
            {{- else }}
            value: disable
            {{- end }}
          - name: EXTERNAL_VERTICA_DB
            value: "{{ .Values.global.vertica.db }}"
          - name: "EXTERNAL_VERTICA_USERNAME"
            value: {{ .Values.global.vertica.rwuser }}
          - name: "EXTERNAL_VERTICA_PASS_KEY"
            value: {{ .Values.global.vertica.rwuserkey }}
          - name: "DIADMIN_HOST"
            value: {{ include "helm-lib.getDiAdminHost" . | default "itom-di-administration-svc" }}
          - name: "DIADMIN_PORT"
            value: "{{ include "helm-lib.getDiAdminPort" . | default 18443 }}"
          - name: "DIADMIN_SERVICE_URL"
            value: https://${DIADMIN_HOST}:${DIADMIN_PORT}
          - name: "BVD_CONTEXT_ROOT"
            valueFrom:
              configMapKeyRef:
                name: bvd-config
                key: bvd.exploreContextRoot
          - name: "UIF_SERVICE_URL"
            value: {{ .Values.global.ea.obaConfig.bvdExploreUrl }}/$(BVD_CONTEXT_ROOT)
          - name: "OPSA_PACO_SERVICE_URL"
            value: "{{ .Values.deployment.oba.protocol }}://{{ .Values.deployment.oba.host }}:{{ .Values.deployment.oba.configParameterServicePort }}"
          - name: IDM_ADDR
            value: "https://{{ .Values.global.idm.serviceName | default "itom-idm-svc" }}:{{ .Values.global.idm.internalPort | default 18443 }}"
          - name: IDM_INTEGRATION_USER
            value: {{ .Values.global.idm.integrationUser }}
          - name: IDM_INTEGRATION_PWDKEY
            value: {{ .Values.global.idm.integrationUserKey }}
          - name: IDM_TRANSPORT_USER
            value: {{ .Values.global.idm.transportUser }}
          - name: IDM_TRANSPORT_PWDKEY
            value: {{ .Values.global.idm.transportUserKey }}
          - name: IDM_ORGANIZATION
            value: {{ .Values.global.idm.tenant }}
          - name: DI_DATA_SET_SCHEMA
            value: "mf_shared_{{ if hasKey .Values.global.di "tenant" }} {{- .Values.global.di.tenant -}} {{ else -}} provider {{- end }}_{{ .Values.global.di.deployment }}"
          - name: MY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: ui-removal-script
              mountPath: /var/scripts
            - name: bvd-explore-var
              mountPath: /var/bvd
              subPath: bvd/var/bvd
            {{- include "itom-oba-config.vault.volumeMount" . | nindent 12 }}
            {{- include "itom-oba-config.externalcert.volumesMounts" . | nindent 12 }}

        {{- include "helm-lib.containers.vaultRenew" (dict "Values" .Values) | nindent 8 }}

      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "namespace"
                fieldRef:
                  fieldPath: metadata.namespace
        - name: ui-removal-script
          emptyDir: { }
        - name: bvd-explore-var
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 10 }}
        {{- include "itom-oba-config.vault.volume" . | nindent 8 }}
        {{- include "itom-oba-config.externalcert.volumes" . | nindent 8 }}
