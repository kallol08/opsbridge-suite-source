{{/*# Copyright 2023 Open Text.*/}}

{{/*# The only warranties for products and services of Open Text and its affiliates*/}}
{{/*# and licensors ("Open Text") are as may be set forth in the express warranty*/}}
{{/*# statements accompanying such products and services. Nothing herein should be*/}}
{{/*# construed as constituting an additional warranty. Open Text shall not be*/}}
{{/*# liable for technical or editorial errors or omissions contained herein. The*/}}
{{/*# information contained herein is subject to change without notice.*/}}

apiVersion: v1
kind: Service
metadata:
  name: itom-monitoring-service-data-broker-svc
  namespace: {{ .Release.Namespace }}
  labels:
    app: itom-monitoring-service-data-broker-app
    service: itom-monitoring-service-data-broker-svc
    app.kubernetes.io/name: itom-monitoring-service-data-broker
    app.kubernetes.io/managed-by: {{.Release.Name}}
    app.kubernetes.io/version: {{ .Values.collectiondatabroker.imageTag }}
    itom.microfocus.com/capability: HyperscaleObservability
    tier.itom.microfocus.com/backend: backend
    itom.microfocus.com/description: Containerized_OA_for_Cert_Broker
  annotations:
    {{- include "helm-lib.service.internalLBAnnotations" . | nindent 4 }}
spec:
  ipFamilyPolicy: PreferDualStack
  ports:
    - name: agent-http
      {{- if or (eq .Values.global.amc.containerizedOBM false) (eq .Values.global.amc.externalOBM true) }}
      port: {{ .Values.global.amc.dataBrokerNodePort }}
      {{- if or (eq .Values.global.cluster.k8sProvider "cdf") (eq .Values.global.cluster.k8sProvider "openshift") (eq .Values.global.cluster.k8sProvider "generic") }}
      nodePort: {{ .Values.global.amc.dataBrokerNodePort }}
      {{- end }}
      {{- else }}
      port: 383
      {{- end }}
      targetPort: 383
  selector:
    app: itom-monitoring-service-data-broker-app
  sessionAffinity: None
  {{- if or (eq .Values.global.amc.containerizedOBM false) (eq .Values.global.amc.externalOBM true) }}
  type: {{ include "helm-lib.service.getServiceType" . }}
  loadBalancerIP: {{ include "helm-lib.service.getLoadBalancerIP" . }}
  {{- else }}
  type: ClusterIP
  {{- end }}

