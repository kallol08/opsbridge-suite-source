{{ $namePrefix := include "namePrefix" . }}
{{- if and ( kindIs "bool" .Values.global.rbac.serviceAccountCreate ) .Values.global.rbac.serviceAccountCreate }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "itom-vault.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
imagePullSecrets:
- name: {{ .Values.global.docker.imagePullSecret | default "registrypullsecret" }}
{{- end }}

{{- if and ( kindIs "bool" .Values.global.rbac.roleCreate ) .Values.global.rbac.roleCreate }}
---
{{/*# create cdf {{ .Values.namePrefix }}-vault role. Type: clusterrole, Name: microfocus:cdf:{{ .Values.namePrefix }}-vault*/}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: microfocus:cdf:{{ .Values.namePrefix }}-vault
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
  - deletecollection

---
{{/*#create rolebinding for {{ .Values.namePrefix }}-vault service account in {{ .Release.Namespace }} namespace*/}}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: microfocus:cdf:{{ .Values.namePrefix }}-vault
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: microfocus:cdf:{{ .Values.namePrefix }}-vault
subjects:
- kind: ServiceAccount
  name: {{ template "itom-vault.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}