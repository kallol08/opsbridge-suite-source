{{/*# Copyright 2018-2023 Open Text.*/}}
{{/*#*/}}
{{/*# The only warranties for products and services of Open Text and its affiliates and licensors (???Open Text???) are as may be*/}}
{{/*# set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed*/}}
{{/*# as constituting an additional warranty. Open Text shall not be liable for technical or editorial errors or omissions*/}}
{{/*# contained herein. The information contained herein is subject to change without notice.*/}}
{{/*#*/}}
{{/*# Except as specifically indicated otherwise, this document contains confidential information and a valid license is*/}}
{{/*# required for possession, use or copying. If this work is provided to the U.S. Government, consistent with*/}}
{{/*# FAR 12.211 and 12.212, Commercial Computer Software, Computer Software Documentation, and Technical Data for*/}}
{{/*# Commercial Items are licensed to the U.S. Government under vendor???s standard commercial license.*/}}
{{- if and ( .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) .Values.global.prometheus.deployPrometheusConfig }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: credential-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- with .Values.global.prometheus.prometheusSelector }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  endpoints:
    - path: /metrics
      scheme: https
      targetPort: 5333
      tlsConfig:
        ca:
          configMap:
            name: {{ coalesce .Values.deployment.prometheus.tlsConfig.ca.configMap.name .Values.global.prometheus.tlsConfig.ca.configMap.name }}
            key: {{ include "helm-lib.getTlsCertNameFromRealmList" (dict "Values" .Values) }}
        cert:
          secret:
            key: {{ coalesce .Values.deployment.prometheus.tlsConfig.cert.secret.key .Values.global.prometheus.tlsConfig.cert.secret.key }}
            name: {{ coalesce .Values.deployment.prometheus.tlsConfig.cert.secret.name .Values.global.prometheus.tlsConfig.cert.secret.name }}
        keySecret:
          key: {{ coalesce .Values.deployment.prometheus.tlsConfig.keySecret.key .Values.global.prometheus.tlsConfig.keySecret.key }}
          name: {{ coalesce .Values.deployment.prometheus.tlsConfig.keySecret.name .Values.global.prometheus.tlsConfig.keySecret.name }}
        serverName: credential-manager
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
  selector:
    matchLabels:
      app.kubernetes.io/name: credential-manager
{{- else }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: credential-manager-service-monitor-cm
data:
  isServiceNameMonitoredDeployed: "false"
{{- end }}
