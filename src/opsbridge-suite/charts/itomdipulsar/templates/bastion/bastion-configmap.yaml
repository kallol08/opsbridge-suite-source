{{/* # */}}
{{/* # Licensed to the Apache Software Foundation (ASF) under one */}}
{{/* # or more contributor license agreements.  See the NOTICE file */}}
{{/* # distributed with this work for additional information */}}
{{/* # regarding copyright ownership.  The ASF licenses this file */}}
{{/* # to you under the Apache License, Version 2.0 (the */}}
{{/* # "License"); you may not use this file except in compliance */}}
{{/* # with the License.  You may obtain a copy of the License at */}}
{{/* # */}}
{{/* #   http://www.apache.org/licenses/LICENSE-2.0 */}}
{{/* # */}}
{{/* # Unless required by applicable law or agreed to in writing, */}}
{{/* # software distributed under the License is distributed on an */}}
{{/* # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY */}}
{{/* # KIND, either express or implied.  See the License for the */}}
{{/* # specific language governing permissions and limitations */}}
{{/* # under the License. */}}
{{/* # */}}

{{ if .Values.components.bastion -}}
{{- include "pulsar.setCurrentComponentFull" (set . "currentComponent" .Values.bastion.component) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .currentComponentFull }}"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
data:
  BOOKIE_LOG_APPENDER: "RollingFile"
  {{- include "pulsar.bookkeeper.config.common" . | nindent 2 }}
  {{- if not .Values.bastion.useProxy }}
  {{/* # talk to broker */}}
  {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
  webServiceUrl: "https://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.https }}/"
  brokerServiceUrl: "pulsar+ssl://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsarssl }}/"
  useTls: "true"
  tlsAllowInsecureConnection: "false"
  {{- if .Values.cert }}
  tlsTrustCertsFilePath: "/pulsar/ssl/combined_ca.crt"
  {{- else }}
  tlsTrustCertsFilePath: "/var/run/secrets/boostport.com/issue_ca.crt"
  {{- end }}
  tlsEnableHostnameVerification: "false"
  {{- else }}
  webServiceUrl: "http://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.http }}/"
  brokerServiceUrl: "pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsar }}/"
  {{- end }}
  {{- end }}
  {{- if .Values.bastion.useProxy }}
  {{/* # talk to proxy */}}
  {{- if and .Values.tls.enabled .Values.tls.proxy.enabled }}
  webServiceUrl: "https://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:{{ .Values.proxy.ports.https }}/"
  brokerServiceUrl: "pulsar+ssl://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:{{ .Values.proxy.ports.pulsarssl }}/"
  useTls: "true"
  tlsAllowInsecureConnection: "false"
  {{- if .Values.cert }}
  tlsTrustCertsFilePath: "/pulsar/ssl/combined_ca.crt"
  {{- else }}
  tlsTrustCertsFilePath: "/var/run/secrets/boostport.com/issue_ca.crt"
  {{- end }}
  tlsEnableHostnameVerification: "false"
  {{- end }}
  {{- if not (and .Values.tls.enabled .Values.tls.proxy.enabled) }}
  webServiceUrl: "http://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:{{ .Values.proxy.ports.http }}/"
  brokerServiceUrl: "pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:{{ .Values.proxy.ports.pulsar }}/"
  {{- end }}
  {{- end }}
  {{/* # Authentication Settings */}}
  {{- if .Values.auth.authentication.enabled }}
  {{- if eq .Values.auth.authentication.provider "jwt" }}
  authParams: "file:///pulsar/tokens/client/token"
  authPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
  {{- end }} 
  {{- end }} 
  {{ range $k, $v := .Values.bastion.configData }}
  {{ $k}}: {{ $v|quote }}
  {{ end }}
  {{/* # Include log configuration file, If you want to configure the log level and other configuration */}}
  {{/* # items, you can modify the configmap, and eventually it will overwrite the log4j2.yaml file under conf */}}
{{ tpl (.Files.Glob "conf/bastion/log4j2.yaml").AsConfig . | indent 2 }}
  kafka.properties: |
{{- if and .Values.tls.broker.enabled .Values.components.kop }}
{{- if and .Values.auth.authentication.enabled (eq .Values.auth.authentication.provider "jwt") }}
    security.protocol=SASL_SSL
    sasl.mechanism=PLAIN
{{- else }}
    security.protocol=SSL
{{- end }}
    ssl.truststore.location=/pulsar/bastion.truststore.jks
    ssl.endpoint.identification.algorithm=
{{- end }}

{{- if .Values.cert }}
{{- if (index .Values.cert "client.crt") }}
  tlsTrustCertsFilePath: "/pulsar/ssl/custom/client_ca.crt"
  authParams: "tlsCertFile:/pulsar/ssl/custom/client.crt,tlsKeyFile:/pulsar/ssl/custom/client.key"
# {{- end }}
{{- else }}
  tlsTrustCertsFilePath: {{or .Values.srcTlsTrustCertsFilePath "/var/run/secrets/boostport.com/issue_ca.crt"}}
  authParams: "tlsCertFile:/var/run/secrets/boostport.com/server.crt,tlsKeyFile:/var/run/secrets/boostport.com/server.key"
{{- end }}
{{- end }}
