{{/* # */}}
{{/* # Licensed to the Apache Software Foundation (ASF) under one */}}
{{/* # or more contributor license agreements.  See the NOTICE file */}}
{{/* # distributed with this work for additional information */}}
{{/* # regarding copyright ownership.  The ASF licenses this file */}}
{{/* # to you under the Apache License, Version 2.0 (the */}}
{{/* # "License"); you may not use this file except in compliance */}}
{{/* # with the License.  You may obtain a copy of the License at */}}
{{/* # */}}
{{/* #   http://www.apache.org/licenses/LICENSE-2.0 */}}
{{/* # */}}
{{/* # Unless required by applicable law or agreed to in writing, */}}
{{/* # software distributed under the License is distributed on an */}}
{{/* # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY */}}
{{/* # KIND, either express or implied.  See the License for the */}}
{{/* # specific language governing permissions and limitations */}}
{{/* # under the License. */}}
{{/* # */}}

{{ if .Values.components.functions -}}
{{- include "pulsar.setCurrentComponentFull" (set . "currentComponent" .Values.functions.component) -}}
{{/* ## function config map */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .currentComponentFull }}-configfile"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
data:
  functions_worker.yml: |
    {{- if eq (.Values.bookkeeper.replicaCount | int) 1 }}
    numFunctionPackageReplicas: 1
    {{- else }}
    numFunctionPackageReplicas: {{  .Values.broker.configData.managedLedgerDefaultEnsembleSize | int }}
    {{- end }}
    pulsarFunctionsCluster: {{ template "pulsar.fullname" . }}
    pulsarServiceUrl: pulsar://localhost:{{ .Values.broker.ports.pulsar }}
    pulsarWebServiceUrl: http://localhost:{{ .Values.broker.ports.http }}
    useTls: {{ and .Values.tls.enabled .Values.tls.broker.enabled }}
    functionRuntimeFactoryConfigs:
      changeConfigMap: "{{ .currentComponentFull }}-config"
      changeConfigMapNamespace: {{ .Release.Namespace }}
      installUserCodeDependencies: true
      jobNamespace: {{ template "pulsar.functions.namespace" . }}
      pulsarDockerImageName: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.pulsar.image }}:{{ .Values.pulsar.imageTag }}
      pulsarRootDir: null
    {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
      pulsarAdminUrl: "https://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.https }}/"
      pulsarServiceUrl: "pulsar+ssl://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsarssl }}/"
    {{- else }}
      pulsarAdminUrl: "http://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.http }}/"
      pulsarServiceUrl: "pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsar }}/"
    {{- end }}
      submittingInsidePod: true
{{ toYaml .Values.functions.functionRuntimeFactoryConfigs | indent 6 }}
    kubernetesContainerFactory:
      changeConfigMap: "{{ .currentComponentFull }}-config"
      changeConfigMapNamespace: {{ .Release.Namespace }}
      installUserCodeDependencies: true
      jobNamespace: {{ template "pulsar.functions.namespace" . }}
      pulsarDockerImageName: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.pulsar.image }}:{{ .Values.pulsar.imageTag }}
      pulsarRootDir: {{ template "pulsar.functions.pulsarRootDir" . }}
    {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
      pulsarAdminUrl: "https://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.https }}/"
      pulsarServiceUrl: "pulsar+ssl://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsarssl }}/"
    {{- else }}
      pulsarAdminUrl: "http://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.http }}/"
      pulsarServiceUrl: "pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:{{ .Values.broker.ports.pulsar }}/"
    {{- end }}
      submittingInsidePod: true
{{ toYaml .Values.functions.kubernetesContainerFactory | indent 6 }}
    superUserRoles: null
    {{- if .Values.functions.enableCustomizerRuntime }}
    runtimeCustomizerClassName: {{ .Values.functions.runtimeCustomizerClassName }}
    runtimeCustomizerConfig:
      globalTlsTrustStore: "{{ .Values.global.tlsTruststore }}"
      metaIoVersion: {{.Values.pulsar.imageTag}}
      runAsGroup: "{{ .Values.global.securityContext.fsGroup | int64 }}"
      runAsUser: "{{ .Values.global.securityContext.user | int64 }}"
      fsGroup: "{{ .Values.global.securityContext.fsGroup | int64 }}"
      serviceAccount: {{ .Values.deployment.rbac.serviceAccount | default "itomdipulsar-broker-sa" }}
    {{- if .Values.global.vaultAppRole }}
      vaultAppRole: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
    {{- else }}
      vaultAppRole: {{ .Release.Namespace }}-default
    {{- end }}    
    {{- end }}
{{ toYaml .Values.functions.configData | indent 4 }}
{{- if .Values.auth.authorization.enabled }}
    authorizationEnabled: "true"
{{- end }}
{{- end }}
