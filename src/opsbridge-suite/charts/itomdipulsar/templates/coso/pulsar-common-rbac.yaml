{{/* # */}}
{{/* # Licensed to the Apache Software Foundation (ASF) under one */}}
{{/* # or more contributor license agreements.  See the NOTICE file */}}
{{/* # distributed with this work for additional information */}}
{{/* # regarding copyright ownership.  The ASF licenses this file */}}
{{/* # to you under the Apache License, Version 2.0 (the */}}
{{/* # "License"); you may not use this file except in compliance */}}
{{/* # with the License.  You may obtain a copy of the License at */}}
{{/* # */}}
{{/* #   http://www.apache.org/licenses/LICENSE-2.0 */}}
{{/* # */}}
{{/* # Unless required by applicable law or agreed to in writing, */}}
{{/* # software distributed under the License is distributed on an */}}
{{/* # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY */}}
{{/* # KIND, either express or implied.  See the License for the */}}
{{/* # specific language governing permissions and limitations */}}
{{/* # under the License. */}}
{{/* # */}}
{{- if eq (((.Values.global).rbac).serviceAccountCreate) true  }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.deployment.rbac.serviceAccount | default "itomdipulsar-sa" }}
  namespace: {{ .Release.Namespace }}
imagePullSecrets:
- name: {{ .Values.global.docker.imagePullSecret | default "registrypullsecret" }}
{{- end }}
---
{{- if eq (((.Values.global).rbac).roleCreate) true   }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ template "pulsar.fullname" . }}"
{{/* # These rules are designed primarily to allow vault to provide information */}}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - patch
      - update
  - apiGroups: 
      - "apps"
    resources: 
      - statefulsets
      - deployments
    verbs: 
      - get
      - list
      - patch
      - update
---
{{/* # ClusterRole is used to set permissions for these cluster-scoped resources. */}}
{{- if  eq (((.Values.global).rbac).clusterRoleCreate)  true }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: "{{ template "pulsar.commonClusterRoleName" . }}"
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
{{- end }}
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ template "pulsar.fullname" . }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ template "pulsar.fullname" . }}"
subjects:
- kind: ServiceAccount
  name: {{ .Values.deployment.rbac.serviceAccount | default "itomdipulsar-sa" }}
  namespace: {{ .Release.Namespace }}

---
{{- if eq (((.Values.global).rbac).clusterRoleCreate) true }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{template "pulsar.commonClusterRoleName" .}}-crb"
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ template "pulsar.commonClusterRoleName" . }}"
subjects:
- kind: ServiceAccount
  name: {{ .Values.deployment.rbac.serviceAccount | default "itomdipulsar-sa" }}
  namespace: {{ .Release.Namespace }}
{{- end }}
{{- end }}