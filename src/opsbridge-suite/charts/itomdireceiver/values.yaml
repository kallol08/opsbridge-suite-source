#
# Copyright 2023 Open Text.
#
# The only warranties for products and services of Open Text and its affiliates and licensors (“Open Text”)
# are as may be set forth in the express warranty statements accompanying such products and services.
# Nothing herein should be construed as constituting an additional warranty. Open Text shall not be liable
# for technical or editorial errors or omissions contained herein. The information contained herein is subject
# to change without notice.
#
# Except as specifically indicated otherwise, this document contains confidential information and a valid
# license is required for possession, use or copying. If this work is provided to the U.S. Government,
# consistent with FAR 12.211 and 12.212, Commercial Computer Software, Computer Software
# Documentation, and Technical Data for Commercial Items are licensed to the U.S. Government under
# vendor’s standard commercial license.
#
direceiver:
  pdb:
    usePolicy: true
    maxUnavailable: 25%
  deployment:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  probe:
    startup:
      enabled: true
      initialDelaySeconds: 40
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 25
      successThreshold: 1

    liveness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1

    readiness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 5
      successThreshold: 1
  config:
    receiver:
      certRevocation:
        enable: "false"
        crlfileEnable: "false"
        ocspEnable: "false"
        preferCRLEnable: "false"
        softfailEnable: "true"
      fipsEnable: "false"
      requestBodyMaxsizeMb: "1"
      computeThreads: "16"
      jvmArgs: "-Xms512m -Xmx2048m -XX:MaxDirectMemorySize=1g -XX:+HeapDumpOnOutOfMemoryError -Djdk.tls.maxCertificateChainLength=20 "
      #authmethod can be, NONE, CLIENT_CERT, IDM, IDM_OR_CLIENT_CERT.
      #CLIENT_CERT is deprecated.
      authMethod: "IDM_OR_CLIENT_CERT"
      apikeyRefreshIntervalMins: "1"
      protocol: "https"
      keystoreType: "JKS"
      truststoreType: "JKS"
      jarValidate: "false"
      externalJarEnable: "true"
      serverTlsEnabledProtocols: "TLSv1.2,TLSv1.3"
      headerFieldnameForTopic: "messagetopic"
      headerFieldnameForTopicKey: "messagekey"
      topicFromHeader: "true"
      messageBusSendMessage: "true"
      logConfigFromConfigmap: true
      receiverUserOrg:
      apiClient:
        authorizedClientCAs:
      useExternalCASignedCerts: false
      caSignedServerCertSecretName:
      keyedMessage:
        keyJsonPropertyName: "k"
        messageJsonPropertyName: "m"
        messageKeyFieldName: "v"
      avroAutoProduce: "true"
      processCompleteMsg: "false"
      headerFieldnameForSchemaVersion: "schemaVersion"
      retryMessageTimeSecs: "1"
      pulsarProducerCacheTimeIntervalInSec: "-1"
      pulsarProducerCacheTimeToLiveInSec: "-1"
      pulsarSchemaCacheTimeIntervalInSec: "-1"
      pulsarSchemaCacheTimeToLiveInSec: "-1"
    oscp:
      responderURL: ""
      responderCertSubjectName: ""
      responderCertIssuerName: ""
      responderCertSerialNumber: ""

    pulsar:      
      brokerServicePort: "6650"
      webServicePort: "8080"
      tlsEnable: "true"
      authEnable: "true"
      authClass: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
      tlsHostnameVerification: "false"
      numIoThreads: ""
      numBrokerConnections: ""
      keepaliveIntervalSeconds: ""
      connectionTimeoutMillis: ""
      enableBatching: ""
      batchingMaxPublishDelayMillis: "1"
      batchingMaxMessages: ""
      compressionType: ""
      sendTimeoutSeconds: ""
      blockIfQueueFull: "true"
      maxPendingMessages: "1000"
      maxPendingMessagesAcrossPartitions: "10000"
      batchingMaxBytesInKb: "64"
      clientMemoryLimitInMB: "0"
      noRetryIfBacklogquotaFull: "true"

    mapContextToTopic: "false"
    defaultTopic: "source_data_topic"
    replicaCount: 2
    isNodePortEnabled: "true"
    externalAccess: "ingress,nodeport"
  idm:
    tokenCacheExpiryTimeSeconds: "60"
    authorizedRoles: "di_ingestion"

global:
  topologySpreadConstraintsDefaults:
    enabled: true
    template:
      maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: ScheduleAnyway
  expose:
    ipConfig:
      ipFamilyPolicy: PreferDualStack
      ipFamilies:
  receiverNodePort: 30001
  di:
    pulsar:
      tenant:
      namespace:      
    cloud:
      externalDNS:
        enabled: false
      externalAccessHost:
        receiver:
    logging:
      useFile: true
    java:
      tls:
        ciphers:
          recommended: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256"
          optional: ""
          useJDKDefault: false
    prometheus:
      alerts:
        enabled: true
    avroSchemaEvolutionEnabled: false
    multiTenantEnabled: false
  idm:
    idmServiceUrl: "https://itom-idm-svc:18443/idm-service"

  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)

  persistence:
    enabled: false
    configVolumeClaim:
    logVolumeClaim:

  # For custom client CAs. authorizedClientCAs should be the name of a configMap which contains the certs.
  apiClient:
    authorizedClientCAs:

  # For custom server CAs (incl. for IDM). tlsTruststore should be the name of a configMap which contains the certs.
  tlsTruststore:

  # If deployPrometheusConfig is true, CDF Monitoring Framework is assumed to be installed and will use it for metric storage
  prometheus:
    deployPrometheusConfig: true
    prometheusSelector:
      prometheus_config: "1"
    scrapeCertSecretName: "itom-di-prometheus-scrape-cert"
    scrapeCaConfigmapName: "monitoring-ca-certificates"
  # RBAC 
  rbac:
    serviceAccountCreate: true
    roleCreate: true
 
  cluster:
    k8sProvider: cdf

  nodeSelector: {}
  setFqdnInIngress: true

  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false

  instance:
    pulsar: pulsar

  pulsar:
#    serviceName:
    namespace:
    tenant:
#    webServicePort:
#    webServicePortTls:
#    brokerServicePort:
#    brokerServicePortTls:
#    tlsEnable: "false"
#    authEnable: "false"
#    authClass: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
#    tlsHostnameVerification: "false"


  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: hpeswitom
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  securityContext:
    user: "1999"    
    fsGroup: "1999"

  # Global image references for vault
  vaultRenew:
    #registry: localhost:5000
    #orgName: hpeswitom
    image: kubernetes-vault-renew
    imageTag: 0.10.0-0019
  vaultInit:
    #registry: localhost:5000
    #orgName: hpeswitom
    image: kubernetes-vault-init
    imageTag: 0.10.0-0019
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0018
  # REQUIRED: The externalAccessHost is the end-point for the service
  externalAccessHost:
  # The externalAccessPort defaults to 443
  externalAccessPort: 443

  #For nginx custom CA signed certificates. secretName should be the name of the secret containing the cert and key
  nginx:
    secretName:
  fluentbit:
    fluentbitSelector:
      labelName: "deployment.microfocus.com/fluentbit-config"
      labelValue: "true"

resources:
    limits:
      cpu: "4"
      memory: "4096Mi"
    requests:
      cpu: "0.5"
      memory: "1024Mi"

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
            - key: "app"
              operator: In
              values:
                - itom-di-receiver
        topologyKey: "kubernetes.io/hostname"
  # Global image reference

nodeSelector: {}
deployment:
  rbac:
    serviceAccount: ""
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: ScheduleAnyway
#####################
# Image definitions
#####################

receiver:
  image: itom-data-ingestion-receiver
  imageTag: 2.12.1-5
