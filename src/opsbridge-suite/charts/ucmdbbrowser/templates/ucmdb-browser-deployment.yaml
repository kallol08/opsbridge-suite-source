{{- $namePrefix := include "namePrefix" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-ucmdb-browser" ($namePrefix) }}
  labels:
    name: {{ .Chart.Name }}
    {{- include "ucmdb.labels" . | nindent 4 }}
  annotations:
    {{- include "ucmdb.deployment.annotations" (dict "replicaCount" 1 "Values" .Values) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ucmdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
        {{- include "ucmdb.labels" . | nindent 8 }}
      annotations:
        {{- include "ucmdb.pod.annotations" . | nindent 8 }}
    spec:
      {{- with (coalesce .Values.nodeSelector .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.docker.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.docker.imagePullSecret }}
      {{- end }}
      serviceAccount: {{ template "ucmdb.serviceAccountName" . }}
      serviceAccountName: {{ template "ucmdb.serviceAccountName" . }}
      {{- include "ucmdb.affinity.inject" . | nindent 6 }}
      securityContext:
        {{- include "ucmdb.pod.securityContext" . | nindent 8 }}
      initContainers:
      {{- include "helm-lib.waitForVault" . | nindent 6  }}
      {{- include "helm-lib.containers.vaultInit" (dict "commonName" (printf "%s-ucmdb-browser-svc" ($namePrefix)) "Values" .Values) | nindent 6 }}
      containers:
      {{- include "helm-lib.containers.vaultRenew" (dict "containerName" "kubernetes-vault-renew" "Values" .Values) | nindent 6 }}
      - name: {{ printf "%s-ucmdb-browser" ($namePrefix) }}
        image: {{ .Values.global.docker.registry}}/{{ include "ucmdb.docker.orgName" . }}/{{ .Values.browser.image }}:{{ .Values.browser.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        {{- $defaultResourceConfig := include "ucmdb.defaultResourceConfig" . | fromYaml }}
        resources:
          {{- coalesce .Values.resources $defaultResourceConfig.resources | toYaml | nindent 10 }}
        securityContext:
          {{- include "ucmdb.container.securityContext" . | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - /usr/local/tomcat/conf/health-check.sh
            - liveness-check
          initialDelaySeconds: 300
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 2
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /usr/local/tomcat/conf/health-check.sh
            - readiness-check
          initialDelaySeconds: 120
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 2
          periodSeconds: 30
        env:
          {{- include "ucmdb.env" . | nindent 10 }}
          - name: MASTER_KEY_VAULT_KEY
            value: {{ .Values.deployment.secrets.masterKey | quote }}
          - name: PORTLET_SECURITY_KEY_VAULT_KEY
            value: {{ .Values.deployment.secrets.portletSecKey | quote }}
          - name: BROWSER_KEYSTORE_PASSWORD_SECRET_KEY
            value: {{ .Values.deployment.secrets.keystorePass | quote }}
          - name: BROWSER_TRUSTSTORE_PASSWORD_SECRET_KEY
            value: {{ .Values.deployment.secrets.truststorePass | quote }}
          - name: SSL_IS_FULL_VALIDATION
            value: {{ or .Values.global.enableFIPS .Values.deployment.sslFullValidation | quote }}
          {{- if or .Values.global.enableFIPS .Values.deployment.sslFullValidation }}
          - name: SSL_CERT_CRL
            value: {{ .Values.deployment.sslCRL | quote }}
          {{- end }}
          {{- $xmsMemory := coalesce .Values.deployment.jvmXmsMemory $defaultResourceConfig.jvmXmsMemory }}
          {{- $xmxMemory := coalesce .Values.deployment.jvmXmxMemory $defaultResourceConfig.jvmXmxMemory }}
          - name: CATALINA_OPTS
            value: "-Xms{{ $xmsMemory }}m -Xmx{{ $xmxMemory }}m -Dcom.sun.net.ssl.enableECC={{ .Values.global.cms.enableEcc }}{{ if .Values.global.cms.debug }} -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005{{ end }}"
          - name: BROWSER_DOCKER_CONTAINER
            value: "true"
          - name: UCMDB_CONFIGURATION_PROTOCOL
            value: {{ .Values.deployment.ucmdbServer.protocol | quote }}
          - name: UCMDB_CONFIGURATION_HOST_NAME
            value: {{ tpl .Values.deployment.ucmdbServer.hostName . | quote }}
          - name: UCMDB_CONFIGURATION_HOST_PORT
            value: {{ .Values.deployment.ucmdbServer.port | quote }}
          - name: UCMDB_CONFIGURATION_CONTEXT_NAME
            value: {{ .Values.deployment.ucmdbServer.context | quote }}
          - name: UCMDB_CONFIGURATION_GATEWAY_PROTOCOL
            value: {{ .Values.deployment.cmsGateway.protocol | quote }}
          - name: UCMDB_CONFIGURATION_GATEWAY_HOST_NAME
            value: {{ tpl .Values.deployment.cmsGateway.hostName . | quote }}
          - name: UCMDB_CONFIGURATION_GATEWAY_HOST_PORT
            value: {{ .Values.deployment.cmsGateway.port | quote }}
          - name: UCMDB_EXTERNAL_URL
            value: {{ tpl .Values.deployment.ucmdbServer.ucmdbExternalRootUrl . | quote }}
          - name: ucmdb_browser_silent_upgrade_enabled
            value: "false"
          - name: UCMDB_USERNAME
            value: UISysadmin
          - name: UCMDB_UISYSADMIN_PASSWORD_VAULT_KEY
            value: {{ .Values.global.cms.secrets.UISysadmin | quote }}
          - name: UISYSADMIN_PASSWORD_SECRET_KEY
            value: {{ .Values.global.cms.secrets.UISysadmin | quote }}
          - name: TZ
            value: {{ .Values.global.cms.timeZone | quote }}
          - name: IS_SUITE_BROWSER
            value: "true"
          - name: ENABLE_FIPS
            value: {{ .Values.global.enableFIPS | quote }}
          {{- if .Values.deployment.idmEnabled }}
          - name: UCMDB_BROWSER_WITH_IDM_ENABLED
            value: "true"
          - name: DEPLOY_DOWNLOADER
            value: {{ .Values.global.cms.deployDownloader | quote }}
          - name: IDM_SERVICE_URI
            value: {{ tpl .Values.global.idm.idmAuthUrl . | quote }}
          - name: IDM_SERVICE_URI_INTERNAL
            value: {{ tpl .Values.global.idm.idmServiceUrl . | quote }}
          - name: IDM_INTEGRATION_ACCOUNT_USER_NAME
            value: {{ .Values.global.idm.idmTransportUser | quote }}
          - name: IDM_INTEGRATION_ACCOUNT_PASSWORD_SECRET_KEY
            value: {{ .Values.global.idm.idmTransportPasswordKey | quote }}
          - name: IDM_REST_LOGIN_TENANT_NAME
            value: {{ .Values.global.idm.tenant | quote }}
          - name: IDM_ORG_AWARENESS_AUTHORIZATION_ENABLED
            value: {{ .Values.global.idm.orgAware | quote }}
          {{- end }}
          {{- if .Values.deployment.secretStorage }}
          - name: SECRET_STORAGE
            value: {{ .Values.deployment.secretStorage | quote }}
          {{- end }}
          {{- if and (eq .Values.deployment.secretStorage "k8s") (.Values.deployment.secretStorageName) }}
          - name: SECRET_STORAGE_NAME
            value: {{ .Values.deployment.secretStorageName | quote}}
          {{- end}}
          {{- if .Values.deployment.log.size }}
          - name: LOG_MAX_SIZE
            value: {{ .Values.deployment.log.size | quote }}
          {{- end }}
          {{- if .Values.deployment.log.rotate }}
          - name: LOG_BACKUP_COUNT
            value: {{ .Values.deployment.log.rotate | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel }}
          {{- if .Values.deployment.log.loglevel.ucmdbBrowser }}
          - name: UCMDB_GENERAL_log4j_logger_ucmdb_browser
            value: {{ .Values.deployment.log.loglevel.ucmdbBrowser | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel.ucmdbBrowserSearch }}
          - name: UCMDB_GENERAL_log4j_logger_ucmdb_browser_search
            value: {{ .Values.deployment.log.loglevel.ucmdbBrowserSearch | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel.ucmdbBrowserAop }}
          - name: UCMDB_GENERAL_log4j_logger_ucmdb_browser_aop
            value: {{ .Values.deployment.log.loglevel.ucmdbBrowserAop | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel.rpcCalls }}
          - name: UCMDB_GENERAL_log4j_logger_rpcCalls
            value: {{ .Values.deployment.log.loglevel.rpcCalls | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel.statistics }}
          - name: UCMDB_GENERAL_log4j_logger_statistics
            value: {{ .Values.deployment.log.loglevel.statistics | quote }}
          {{- end }}
          {{- if .Values.deployment.log.loglevel.jvmStats }}
          - name: UCMDB_GENERAL_log4j_logger_jvm_stats
            value: {{ .Values.deployment.log.loglevel.jvmStats | quote }}
          {{- end }}
          {{- end }}
        ports:
        - containerPort: 8443
        {{- if .Values.global.cms.debug }}
        - containerPort: 5005
        {{- end }}
        volumeMounts:
        - name: log-vol
          mountPath: /usr/local/tomcat/logs
          subPath: ucmdb/browser/
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
        - mountPath: /usr/lib/jvm/zulu-8-amd64/jre/lib/ext
          name: jvm-ext
        - mountPath: /usr/lib/jvm/zulu-8-amd64/jre/lib/security
          name: jvm-security
        {{- if not .Values.global.idm.internal }}
        - name: cert-dir
          mountPath: /opt/certs
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["/usr/local/tomcat/bin/shutdown.sh"]
      volumes:
      - name: log-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: vault-token
        emptyDir: {}
      - emptyDir: {}
        name: jvm-ext
      - emptyDir: {}
        name: jvm-security
      {{- if not .Values.global.idm.internal }}
      - name: cert-dir
        configMap:
          name: {{ .Values.global.database.tlsTruststore }}
      {{- end }}

