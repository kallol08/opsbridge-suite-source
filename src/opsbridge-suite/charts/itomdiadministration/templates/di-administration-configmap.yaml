{{/* # */}}
{{/* # Copyright 2023 Open Text. */}}
{{/* # */}}
{{/* # The only warranties for products and services of Open Text and its affiliates and  */}}
{{/* # licensors (“Open Text”) are as may be set forth in the express warranty statements  */}}
{{/* # accompanying such products and services. Nothing herein should be construed as */}}
{{/* # constituting an additional warranty. Open Text shall not be liable for technical or */}}
{{/* # editorial errors or omissions contained herein. The information contained herein is  */}}
{{/* # subject to change without notice. */}}
{{/* # */}}
{{/* # Except as specifically indicated otherwise, this document contains confidential  */}}
{{/* # information and a valid license is required for possession, use or copying. If this work  */}}
{{/* # is provided to the U.S. Government, consistent with FAR 12.211 and 12.212, Commercial Computer  */}}
{{/* # Software, Computer Software Documentation, and Technical Data for Commercial Items are licensed to */}}
{{/* # the U.S. Government under vendor’s standard commercial license. */}}
{{/* # */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: itom-di-administration-cm
data:
  admin.jvm.args: {{ .Values.diadmin.config.admin.jvmArgs | quote }}
  admin.client.auth.enabled: {{ .Values.diadmin.config.admin.clientAuthEnabled | quote }}
  admin.use.external.ca.signed.certs: {{ .Values.diadmin.config.admin.useExternalCASignedCerts | quote }}
  admin.service.base.url:  {{ .Values.diadmin.config.admin.serviceBaseUrl | quote }}
  admin.system.level.throttle: {{ .Values.diadmin.config.admin.systemLevelThrottle | quote }}
  admin.permissible.request.limit: {{ .Values.diadmin.config.admin.permissibleRequestLimit | quote }}
  admin.request.throttle.time: {{ .Values.diadmin.config.admin.requestThrottleTime | quote }}
  admin.config.store.type: {{ .Values.diadmin.config.admin.configStoreType | quote }}
  {{/* # Following db details required if config store type is db */}}
  admin.db.ssl.enable: {{ .Values.global.vertica.tlsEnabled | quote }}
  admin.config.store.hostnames: {{ template "vertica.host" .}}
  admin.config.store.username: {{ template "vertica.rwuser" .}}
  admin.config.store.token.key: {{ .Values.global.vertica.rwuserkey | quote }}
  {{/* # Config store type can be filesystem | db */}}
  admin.config.store.db: {{ template "vertica.db" .}}
  admin.config.store.port: {{ template "vertica.port" .}}
  admin.externalAccessHost: {{ .Values.global.externalAccessHost | quote }}

  admin.logconfig.from.configmap:  {{ .Values.diadmin.config.admin.logConfigFromConfigmap | quote}}
  {{- if .Values.diadmin.config.admin.logConfigFromConfigmap }}
  admin.logconfig.log.to.file: {{ .Values.global.di.logging.useFile | quote}}
  {{- end }}

  vertica.resource.pool.name: {{ .Values.diadmin.config.vertica.resourcePoolName | quote }}

  {{/* #tenant and deployment for schema name */}}
  {{ include "validateTenantAndDeploymentForAdmin" . | required "The total length of tenant and deployment should not be more than 70 characters" }}

  {{/* # If partition count for topic is less than 1 then, */}}
  {{/* # partition count for topic will be set based on the number of brokers configured at that instant */}}
  admin.topic.partition.count: {{ .Values.diadmin.config.pulsar.topicPartitionCount | quote }}

  {{/* # Message bus */}}
  {{- if .Values.global.messageBus }}
  admin.message.bus: {{ .Values.global.messageBus | quote }}
  {{- else }}
  admin.message.bus: {{ .Values.diadmin.config.admin.messageBus | quote }}
  {{- end }}

  {{/* #Postload parameters */}}
  taskgenerator.service.name: {{ .Values.diadmin.config.taskGenerator.serviceName | quote}}

  taskgenerator.service.port: {{ .Values.diadmin.config.taskGenerator.webServicePort | quote}}

  {{/* # pulsar parameters */}}
  {{- if  .Values.global.pulsar.isKopEnabled  }}
  {{- if .Values.global.pulsar.kopServiceName }}
  pulsar.service.name: {{ .Values.global.pulsar.kopServiceName | quote }}
  {{- else }}
  pulsar.service.name: {{ .Values.diadmin.config.pulsar.kopServiceName | quote }}
  {{- end }}
  {{- else }}
  pulsar.service.name: {{ include "helm-lib.getDiPulsarBrokerHost" . | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.tlsEnable }}
  pulsar.tls.enable: {{ .Values.global.pulsar.tlsEnable | quote }}
  {{- else }}
  pulsar.tls.enable: {{ .Values.diadmin.config.pulsar.tlsEnable | quote }}
  {{- end }}

  {{- if .Values.global.di.pulsar }}
  pulsar.tenant: {{ coalesce .Values.global.di.pulsar.tenant .Values.global.pulsar.tenant "public" | quote }}
  pulsar.namespace: {{ coalesce .Values.global.di.pulsar.namespace .Values.global.pulsar.namespace "default" | quote }}
  {{- else }}
  pulsar.tenant: {{ coalesce .Values.global.pulsar.tenant "public" | quote }}
  pulsar.namespace: {{ coalesce .Values.global.pulsar.namespace "default" | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.webServicePort }}
  pulsar.web.service.port: {{ .Values.global.pulsar.webServicePort | quote }}
  {{- else }}
  pulsar.web.service.port: {{ .Values.diadmin.config.pulsar.webServicePort | quote }}
  {{- end }}

  pulsar.web.service.port.tls: {{ include "helm-lib.getDiPulsarBrokerWebPort" . | quote }}

  {{- if .Values.global.pulsar.brokerServicePort }}
  pulsar.broker.service.port: {{ .Values.global.pulsar.brokerServicePort | quote }}
  {{- else }}
  pulsar.broker.service.port: {{ .Values.diadmin.config.pulsar.brokerServicePort | quote }}
  {{- end }}

  pulsar.broker.service.port.tls: {{ include "helm-lib.getDiPulsarBrokerClientPort" . | quote }}



  {{- if .Values.global.pulsar.authEnable }}
  pulsar.auth.enable: {{ .Values.global.pulsar.authEnable | quote }}
  {{- else }}
  pulsar.auth.enable: {{ .Values.diadmin.config.pulsar.authEnable | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.authClass }}
  pulsar.auth.class: {{ .Values.global.pulsar.authClass | quote }}
  {{- else }}
  pulsar.auth.class: {{ .Values.diadmin.config.pulsar.authClass | quote }}
  {{- end }}

  {{- if .Values.global.pulsar.tlsHostnameVerification }}
  pulsar.tls.hostname.verification: {{ .Values.global.pulsar.tlsHostnameVerification | quote }}
  {{- else }}
  pulsar.tls.hostname.verification: {{ .Values.diadmin.config.pulsar.tlsHostnameVerification | quote }}
  {{- end }}

  hikaricp.connection.timeout: {{ .Values.diadmin.config.hikaricp.connectionTimeout | quote }}
  hikaricp.connection.maximum.lifetime: {{ .Values.diadmin.config.hikaricp.connectionMaximumLifetime | quote }}
  hikaricp.minimum.idle.connections: {{ .Values.diadmin.config.hikaricp.minimumIdleConnections | quote }}
  hikaricp.maximum.pool.size: {{ .Values.diadmin.config.hikaricp.maximumPoolSize | quote }}
  hikaricp.connection.pool.name: {{ .Values.diadmin.config.hikaricp.connectionPoolName | quote }}
  dataset.status.polling.timeout.in.seconds: {{ .Values.diadmin.config.admin.datasetStatusPollingTimeoutInSeconds | quote }}
  {{- if (eq (.Values.global.di.supportExpressLoad | toString) "true") }}

  admin.express.load.enable: {{ .Values.diadmin.config.admin.expressLoadEnabled | quote }}
  {{- if .Values.global.cluster.k8sProvider }}
  {{- if and (eq (.Values.global.cluster.k8sProvider | toString) "aws") (eq (.Values.diadmin.config.admin.expressLoadEnabled | toString) "true") }}

  {{- if .Values.diminio.clientAccessKey }}
  admin.minio.clientAccessKey: {{ .Values.diminio.clientAccessKey | quote }}
  {{- end }}
  {{- if .Values.diminio.clientSecretKey }}
  admin.minio.clientSecretKey: {{ .Values.diminio.clientSecretKey | quote }}
  {{- end }}
  {{- if .Values.diminio.adminAccessKey }}
  admin.minio.adminAccessKey: {{ .Values.diminio.adminAccessKey | quote }}
  {{- end }}
  {{- if .Values.diminio.adminSecretKey }}
  admin.minio.adminSecretKey: {{ .Values.diminio.adminSecretKey | quote }}
  {{- end }}
  admin.s3.region: {{ .Values.diadmin.config.s3.region | quote }}
  {{- if .Values.diadmin.config.s3.bucketPrefix }}
  {{ include "validateS3BucketPrefix" . | required "The Bucket Prefix must contain lowercase chars , digit or hyphen" }}
  {{- end }}

  {{- end }}
  {{- end }}

  {{- if (eq (.Values.diadmin.config.admin.expressLoadEnabled | toString) "true")  }}
  admin.minio.host: {{ template "minio.host" .}}
  admin.minio.port: {{ template "minio.port" .}}
  admin.minio.nodePort: {{ template "minio.nodePort" .}}
  admin.minio.ssl.enable: {{ template "minio.ssl" .}}
  admin.minio.externalAccessHost: {{ .Values.global.externalAccessHost | quote }}

  admin.expressLoad.workerCount: {{ .Values.diadmin.config.expressLoad.workerCount | quote }}
  admin.expressLoad.pollingIntervalInSec: {{ .Values.diadmin.config.expressLoad.pollingIntervalInSec | quote }}
  admin.expressLoad.csvObjectLimitForDirectInMB: {{ .Values.diadmin.config.expressLoad.csvObjectLimitForDirectInMB | quote }}
  admin.expressLoad.gzipObjectLimitForDirectInMB: {{ .Values.diadmin.config.expressLoad.gzipObjectLimitForDirectInMB | quote }}
  admin.expressLoad.maxDatasetCount: {{ .Values.diadmin.config.expressLoad.maxDatasetCount | quote }}
  admin.expressLoad.vertica.connectionPoolSize: {{ .Values.diadmin.config.expressLoad.verticaConnectionPoolSize | quote }}
  admin.expressLoad.vertica.connectionLoadbalancing: {{ .Values.diadmin.config.expressLoad.verticaConnectionLoadbalancing | quote }}
  admin.expressLoad.objectSizeLimitInMB: {{ .Values.diadmin.config.expressLoad.objectSizeLimitInMB | quote }}
  admin.expressLoad.parameters.enforceLength: {{ .Values.diadmin.config.expressLoad.parameters.enforceLength | quote }}
  admin.expressLoad.parameters.abortOnError: {{ .Values.diadmin.config.expressLoad.parameters.abortOnError | quote }}
  admin.expressLoad.parameters.rejectOnEmptyKey: {{ .Values.diadmin.config.expressLoad.parameters.rejectOnEmptyKey | quote }}
  admin.expressLoad.parameters.rejectOnDataMismatch: {{ .Values.diadmin.config.expressLoad.parameters.rejectOnDataMismatch | quote }}
  admin.expressLoad.parameters.maxRejections: {{ .Values.diadmin.config.expressLoad.parameters.maxRejections | quote }}
  admin.expressLoad.parameters.header: {{ .Values.diadmin.config.expressLoad.parameters.header | quote }}
  {{- if .Values.diadmin.config.expressLoad.verticaResourcePool }}
  admin.expressLoad.verticaResourcePool: {{ .Values.diadmin.config.expressLoad.verticaResourcePool | quote }}
  {{- else }}
  {{- if (eq (.Values.global.vertica.embedded | toString) "true") }}
  admin.expressLoad.verticaResourcePool: ""
  {{- else }}
  admin.expressLoad.verticaResourcePool: itom_di_express_load_respool_{{ .Values.global.di.tenant }}_{{ .Values.global.di.deployment }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.global.di.supportExpressLoad }}
  admin.expressLoad.supported: {{ .Values.global.di.supportExpressLoad | quote }}
  {{- end}}
  {{- if .Values.diadmin.config.admin.enableSecurityAudit }}
  admin.auditLogs.enabled: {{ .Values.diadmin.config.admin.enableSecurityAudit | quote }}
  {{- end}}
  admin.security.authorizedRoles: {{ .Values.diadmin.idm.authorizedRoles | quote }}
  admin.security.tokenCache.expiryTimeSeconds: {{ .Values.diadmin.idm.tokenCacheExpiryTimeSeconds | quote }}

  {{- if .Values.global.idm.idmServiceUrl }}
  admin.security.idm.service.url: {{ .Values.global.idm.idmServiceUrl | quote }}
  {{- end }}
  {{- if .Values.diadmin.config.admin.enableFlexibleDataset }}
  admin.enable.flexible.dataset: {{ .Values.diadmin.config.admin.enableFlexibleDataset | quote }}
  {{- end }}
  {{- if .Values.diadmin.config.admin.adminUserOrg }}
  admin.config.org.aware.auth.adminUserorg: {{ .Values.diadmin.config.admin.adminUserOrg | quote }}
  {{- end }}
  admin.config.org.aware.auth.adminConfigCategory: {{ .Values.diadmin.config.admin.adminConfigCategory | quote }}
  admin.java.tls.ciphers.recommended: {{ .Values.global.di.java.tls.ciphers.recommended | quote }}
  admin.java.tls.ciphers.optional: {{ .Values.global.di.java.tls.ciphers.optional | quote }}

  {{- if .Values.global.di.java.tls.ciphers.useJDKDefault }}
  admin.java.tls.ciphers.useJDKDefault: {{ .Values.global.di.java.tls.ciphers.useJDKDefault | quote }}
  {{- end }}
  admin.server.tls.enabled.protocols: {{ .Values.diadmin.config.admin.serverTlsEnabledProtocols | quote }}
  admin.config.flowControl.backlogQuota.maxSize.mb: {{ .Values.diadmin.config.admin.flowControlMaxBacklogQuotaSizeInMB | quote }}
  admin.config.flowControl.ingestionRate.maxValue.mb: {{ .Values.diadmin.config.admin.flowControlMaxIngestionRateInMB | quote }}
  {{- if .Values.global.di.avroSchemaEvolutionEnabled }}
  admin.avroSchemaEvolutionEnabled: {{ .Values.global.di.avroSchemaEvolutionEnabled | quote }}
  {{- end }}
  {{- if .Values.global.di.multiTenantEnabled }}
  admin.multiTenantEnabled: {{ .Values.global.di.multiTenantEnabled | quote }}
  {{- else }}
  admin.multiTenantEnabled: "false"
  {{- end }}

