{{- $namePrefixes := default (include "namePrefix" .) $.Values.deployment.ucmdbProbes }}
{{- range $namePrefix := (split "," $namePrefixes) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-ucmdb-probe" ($namePrefix) }}
  labels:
    name: {{ $namePrefix }}-{{ $.Chart.Name }}
    {{- include "ucmdb.labels" $  | nindent 4 }}
  annotations:
    {{- include "ucmdb.deployment.annotations" (dict "replicaCount" 1 "Values" $.Values) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ucmdb.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ $.Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ $.Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ $namePrefix }}-{{ $.Chart.Name }}
        {{- include "ucmdb.labels" $ | nindent 8 }}
      annotations:
        {{- include "ucmdb.pod.annotations" $ | nindent 8 }}
    spec:
      {{- with (coalesce $.Values.nodeSelector $.Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.global.docker.imagePullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.global.docker.imagePullSecret }}
      {{- end }}
      serviceAccount: {{ template "ucmdb.serviceAccountName" $ }}
      serviceAccountName: {{ template "ucmdb.serviceAccountName" $ }}
      {{- include "ucmdb.affinity.inject" $ | nindent 6 }}
      {{- $externalDb := not ( or $.Values.global.database.internal $.Values.deployment.database.probeEmbeddedDb)}}
      securityContext:
        {{- include "ucmdb.pod.securityContext" $ | nindent 8 }}
      {{- if ne "standalone" ($.Values.deployment.type | default "embedded" ) }}
      initContainers:
      {{- include "helm-lib.waitForVault" $ | nindent 6  }}
      {{- include "helm-lib.containers.vaultInit" (dict "commonName" (printf "%s-ucmdb-probe-svc" ($namePrefix)) "Values" $.Values) | nindent 6 }}
      {{- end }}
      containers:
      {{- if ne "standalone" ($.Values.deployment.type | default "embedded" ) }}
      {{- include "helm-lib.containers.vaultRenew" (dict "containerName" "kubernetes-vault-renew" "Values" $.Values) | nindent 6 }}
      {{- end }}
      - name: {{ printf "%s-ucmdb-probe" ($namePrefix) }}
        image: {{ $.Values.global.docker.registry}}/{{ include "ucmdb.docker.orgName" $ }}/{{ $.Values.probe.image }}:{{ $.Values.probe.imageTag }}
        imagePullPolicy: {{ $.Values.global.docker.imagePullPolicy }}
        {{- $defaultResourceConfig := include "ucmdb.defaultResourceConfig" $ | fromYaml }}
        resources:
          {{- coalesce $.Values.resources $defaultResourceConfig.resources | toYaml | nindent 10 }}
        securityContext:
          {{- include "ucmdb.container.securityContext" $ | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - /usr/local/bin/health-check.sh
            - liveness-check
          initialDelaySeconds: 900
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 6
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /usr/local/bin/health-check.sh
            - readiness-check
          initialDelaySeconds: 120
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 2
          periodSeconds: 30
        env:
          {{- include "ucmdb.env" $ | nindent 10 }}
          - name: suite
            value: "true"
          - name: UCMDB_HOST
            value: {{ tpl $.Values.deployment.ucmdbServer.hostName $ | quote }}
          - name: UCMDB_PORT
            value: {{ ternary 8444 $.Values.deployment.ucmdbServer.port $.Values.global.mTLS | quote }}
          - name: PROBE_MIN_MEM
            value: {{ coalesce $.Values.deployment.jvmXmsMemory $defaultResourceConfig.jvmXmsMemory | quote }}
          - name: PROBE_MAX_MEM
            value: {{ coalesce $.Values.deployment.jvmXmxMemory $defaultResourceConfig.jvmXmxMemory | quote }}
          - name: PROBE_MAX_METASPACE_SIZE
            value: {{ coalesce $.Values.deployment.jvmMetaspace $defaultResourceConfig.jvmMetaspace | quote }}
          - name: UCMDB_USER
            value: UISysadmin
          - name: UCMDB_SYSUSER
            value: UISysadmin
          - name: ADMIN_PASSWORD_SECRET_KEY
            value: {{ $.Values.global.cms.secrets.UISysadmin | quote }}
          - name: SYSADMIN_PASSWORD_SECRET_KEY
            value: {{ $.Values.global.cms.secrets.UISysadmin | quote }}
          - name: PG_ROOT_PWD_VAULT_KEY
            value: {{ $.Values.deployment.secrets.probePgRoot | quote }}
          - name: PG_PROBE_PWD_VAULT_KEY
            value: {{ $.Values.deployment.secrets.probePg | quote }}
          - name: DEPLOY_DATA
            value: {{ $.Values.deployment.deployDemoData | quote }}
          - name: INTEGRATION_ONLY_PROBE
            value: {{ $.Values.deployment.integrationOnlyProbe | quote }}
          - name: TBA_USERNAME
            value: {{ $.Values.deployment.tbaUserName | quote }}
          - name: PROXY_AUTHENTICATION_CHALLENGE
            value: {{ $.Values.deployment.proxy.challenge | quote }}
          - name: PROXY_PROTOCOL
            value: {{ $.Values.deployment.proxy.protocol | quote }}
          - name: HTTP_PROXY_HOST
            value: {{ $.Values.deployment.proxy.proxyHost | quote }}
          - name: HTTP_PROXY_PORT
            value: {{ $.Values.deployment.proxy.proxyPort | quote }}
          - name: HTTP_PROXY_USER
            value: {{ $.Values.deployment.proxy.proxyUser | quote }}
          - name: HTTP_PROXY_REALM
            value: {{ $.Values.deployment.proxy.proxyRealm | quote }}
          - name: PROBE_DEBUG_PARAM
            value: {{ if $.Values.global.cms.debug }} -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5007 {{ end }}
          - name: XML_ENRICHER_DISABLE
            value: {{ $.Values.deployment.xmlEnricherDisable | quote }}
          - name: DISCOVER_CLOUD
            value: {{ $.Values.deployment.discoverCloud | quote }}
          - name: PROBE_CUSTOMER_ID
            value: {{ $.Values.customerId | quote }}
          - name: POOL_THREAD_NUMBER
            value: {{ $.Values.deployment.poolThreads | quote }}
          - name: MAX_REMOTE_PROCESSES
            value: {{ $.Values.deployment.maxRemoteProcesses | quote }}
          - name: CONFIRM_TASK_INTERVAL
            value: {{ $.Values.deployment.confirmTaskInterval | quote }}
          - name: PROBE_DOMAIN
            value: {{ $.Values.deployment.domain | quote }}
          - name: INSERT_FIPS
            value: {{ $.Values.deployment.insertFips | quote }}
          - name: PROBE_TENANT_ID
            value: {{ $.Values.tenant | quote }}
          - name: PROBE_SECRET_STORAGE
            value: {{ $.Values.secret | quote }}
          - name: PROBENAME
            value: {{ default (printf "%s-probe" ($namePrefix)) $.Values.deployment.probeName | quote }}
          - name: PROBE_SSL_IS_FULL_VALIDATION
            value: {{ $.Values.deployment.probeSSLFullValidation | quote }}
          - name: PROBE_TYPE
            value: {{ $.Values.deployment.type | default "embedded"  }}
          - name: TZ
            value: {{ $.Values.global.cms.timeZone | quote }}
          - name: RESTART_LIMIT
            value: "5"
          {{- $sslEnabled := eq "true" (include "helm-lib.dbTlsEnabled" $ | lower ) }}
          {{- $dbType := include "helm-lib.dbType" $ }}
          {{- $isPg := eq "postgresql" (lower $dbType) }}
          {{- if $externalDb}}
          - name: IS_EXTERNAL_DB
            value: {{ $externalDb | quote }}
          - name: CREATE_DB
            value: {{ include "helm-lib.dbCreateDb" $ | quote }}
          - name: DB_HOST
            value: {{ include "helm-lib.dbHost" $ | quote }}
          - name: DB_PORT
            value: {{ include "helm-lib.dbPort" $ | quote }}
          - name: DB_USER
            value: {{ include "helm-lib.dbUser" $ | quote }}
          - name: DB_ADMIN
            value: {{ include "helm-lib.dbAdmin" $ | quote }}
          - name: DB_TYPE
            value: {{ $dbType | quote }}
          - name: DB_NAME
            value: {{ include "helm-lib.dbName" $ | quote }}
          - name: DB_SCHEMA
            value: {{ include "helm-lib.dbSchema" $ | quote }}
          - name: DB_SCHEMA_PASSWORD_VAULT_KEY
            value: {{ include "helm-lib.dbUserKey" $ | quote }}
          {{- if $sslEnabled }}
          {{- if $isPg }}
          - name: DB_PSQL_SSL
            value: {{ $sslEnabled | quote }}
          - name: DB_PSQL_SSL_MODE
            value: {{ include "ucmdbserver.injectGlobalVar" (dict "var" "database.pgTlsMode" "Release" $.Release "Template" $.Template "Values" $.Values ) | quote }}
          - name: DB_PSQL_SSL_ROOT_CERT
            value: /opt/certs/
          - name: PG_SSL_IS_FULL_VALIDATION
            value: {{ $.Values.deployment.database.pgSSLFullValidation | quote }}
          {{- if $.Values.deployment.database.pgSSLFullValidation }}
          - name: PG_SSL_CERT_CRL
            value: {{ required "Required value is not defined: sslCRL" $.Values.deployment.database.sslCRL | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $.Values.deployment.secretStorage }}
          - name: SECRET_STORAGE
            value: {{ $.Values.deployment.secretStorage | quote }}
          {{- end }}
          {{- if and (eq $.Values.deployment.secretStorage "k8s") (or $.Values.deployment.secretStorageName $.Values.secret) }}
          - name: SECRET_STORAGE_NAME
            value: {{ (or $.Values.deployment.secretStorageName $.Values.secret) | quote}}
          {{- end}}
          - name: UCMDB_SSL_CERTIFICATE_AUTHORITIES
            value: "/run/secrets/boostport.com:/run/secrets/boostport.com/trustedCAs:/opt/certs"
          {{- if $.Values.deployment.log.size }}
          - name: LOG_MAX_SIZE
            value: {{ $.Values.deployment.log.size | quote }}
          {{- end }}
          {{- if $.Values.deployment.log.rotate }}
          - name: LOG_BACKUP_COUNT
            value: {{ $.Values.deployment.log.rotate | quote }}
          {{- end }}
        ports:
        - containerPort: 1977
        {{- if $.Values.global.cms.debug }}
        - containerPort: 5007
        {{- end }}
        volumeMounts:
        - name: log-vol
          mountPath: /hp/UCMDB/DataFlowProbe/runtime/log/
          subPath: ucmdb/probe/{{ $.Values.customerId }}/{{ default (printf "%s-probe" ($namePrefix)) $.Values.deployment.probeName }}/log/
        - name: log-vol
          mountPath: /hp/UCMDB/DataFlowProbe/runtime/communicationLog/
          subPath: ucmdb/probe/{{ $.Values.customerId }}/{{ default (printf "%s-probe" ($namePrefix)) $.Values.deployment.probeName }}/communicationLog/
        - name: data-vol
          mountPath: /hp/UCMDB/DataFlowProbe/runtime/probeGateway/
          subPath: ucmdb/probe/{{ $.Values.customerId }}/{{ default (printf "%s-probe" ($namePrefix)) $.Values.deployment.probeName }}/probeGateway/
        - name: data-vol
          mountPath: /hp/UCMDB/DataFlowProbe/content/lib/contentJars/
          subPath: ucmdb/probe/{{ $.Values.customerId }}/{{ default (printf "%s-probe" ($namePrefix)) $.Values.deployment.probeName }}/contentJars/
        {{- if ne "standalone" ($.Values.deployment.type | default "embedded" ) }}
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
        {{- end }}
        - name: cert-dir
          mountPath: /opt/certs
        lifecycle:
          preStop:
            exec:
              command: ["/hp/UCMDB/DataFlowProbe/bin/ProbeGateway.sh", "stop"]
      volumes:
      - name: data-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "dataVolumeClaim" "Release" $.Release "Template" $.Template "Values" $.Values ) | nindent 8 }}
      - name: log-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" $.Release "Template" $.Template "Values" $.Values ) | nindent 8 }}
      - name: vault-token
        emptyDir: {}
      - name: cert-dir
        configMap:
          name: {{ $.Values.global.database.tlsTruststore }}
---
{{- end }}
