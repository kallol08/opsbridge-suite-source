# Default values for ucmdb-probe.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  # Deployment size should be demo, small, medium or large. Default demo
  size: demo

  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: hpeswitom
    imagePullPolicy: IfNotPresent
    imagePullSecret: ""

  # Image definitions for common services
  toolsBase:
    image: itom-tools-base
    imageTag: 1.2.0-0022
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.17.0-0030
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.17.0-0030

  # Mutual authentication https port
  mTLS: false
  ##-----------------------------------------------------------------------------------------------------------------------------------------------------------------##
  ## Configure a customized User ID and group ID to run as. If not specified, default value of 1999 is taken.
  ## Make sure you use the same values for the <SYSTEM_USER_ID> and <SYSTEM_GROUP_ID> settings when creating CMS NFS volumes.
  ##-----------------------------------------------------------------------------------------------------------------------------------------------------------------##
  securityContext:
    user: "1999"
    fsGroup: "1999"

  # Define persistent storage:
  #    logVolumeClaim is a PVC for storing log files.
  #
  #  If "persistence.enabled" is false, and "isDemo" is set to true, then temporary ephemeral
  #    storage will be created.  Otherwise, the chart will fail to deploy because you must
  #    "opt in" to temporary storage.
  isDemo: false
  persistence:
    enabled: false
    dataVolumeClaim:
    logVolumeClaim:
  # rbac creation control
  rbac:
    serviceAccountCreate: true
    roleCreate: true
  nodeSelector: {}

  database:
    # true means embedded database, false means external database. If internal is set to true, only postgresql is supported
    internal: true
    # true means containers should create database themselves, and user provided must have permissions to create DB. Only postgresql supports createDb=true
    createDb: true
    admin: postgres
    #adminPasswordKey: ucmdb_probe_pg_root_password
    # DB host
    # default is the hostname of the localhost
    host:
    # DB port, default 5432
    port: 5432
    # db engine type: postgresql, oracle. Default postgresql
    type: postgresql
    # DB SSL enabled or not(FIPS mode will force SSL enabled)
    tlsEnabled: false
    # name of config map with CA certificates.
    tlsTruststore: default-ca-certificate
    # Vault secret key that holds the database user password
    userPasswordKey: ucmdb_probe_pg_probe_password


  cms:
    # The timezone of the cluster, default Universal Time Coordinated
    timeZone: UTC

    # Open probe debug port, default false
    debug: false

    # Vault secret keys used in services
    secrets:
      UISysadmin: ucmdb_uisysadmin_password

probe:
  image: itom-cmdb-probe
  imageTag: 11.8.2.255

nameOverride: ""
fullnameOverride: ""

deployment:
  # Vault secret keys used in services
  secrets:
    probePgRoot: ITOM_DB_PASSWD_KEY
    probePg: ucmdb_probe_pg_probe_password

  # the place of ucmdb server
  ucmdbServer:
    hostName: "itom-ucmdb-writersvc"
    port: 8443

  # Proxy Connection properties - If need to connect to ucmdb server via proxy server
  # Proxy protocol is HTTPS or HTTP, default is HTTP
  # Proxy authentication challenge , here we support NTLM, Basic.  By default we use Basic.
  # set user, password and realm if credentials needed for connecting to the proxy server
  proxy:
    challenge:
    protocol:
    proxyHost:
    proxyPort:
    proxyUser:
    proxyRealm:

  #the username which probe used to connect to server
  tbaUserName:

  # Deploy demo data to the ucmdb server, default false
  deployDemoData: false
  
  # Can only run integration job, default false
  integrationOnlyProbe: false
  
  # Disable xml enricher, default true
  xmlEnricherDisable: true

  #Indicate whether the probe is for discovering cloud or not, default false
  discoverCloud: false
  
  # name of the probe
  probeName:

  #UCMDB Probe certificate validation level (0,1,2).
  #0:Full validation
  #1:Full validation without revocation check (default)
  #2:Basic validation
  probeSSLFullValidation: 1


  # #Define where to store sensitive data: vault|k8s. k8s means using secret, vault means using vault
  secretStorage: ""
  #If using secret, define the secret name to get sensitive data
  secretStorageName: ""

  database:
    # true means containers should create database themselves, and user provided must have permissions to create DB. Only postgresql supports createDb=true
    # createDb: true
    # true means probe use embedded postgres db
    probeEmbeddedDb: true
    # database user, default postgres
    user: probe
    # Vault secret key that holds the database user password
    #userPasswordKey: ucmdb_probe_pg_probe_password
    # DB name, default dataflowprobe
    dbName: dataflowprobe
    # postgres schema name, default probe
    schema: probe
    # PG SSL mode(PG verify-ca|verify-full[default];ignored when dbSSL is false)
    pgTlsMode: verify-full
    # Name of database ca certificate
    tlsCert: postgresql.crt
    # PG client certificate full validation, ignored when FIPS is disabled
    pgSSLFullValidation: false
    # DB Certificate revocation list, ignored when FIPS is disabled
    sslCRL:

  # role based service account name
  rbac:
    serviceAccount:
  log: {}
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

tolerations: []


rollingUpdate:
  # In order to avoid two probe pods running with the same name,
  # new probe pod has to be started after the original one terminated
  maxSurge: 0
  maxUnavailable: 100%
