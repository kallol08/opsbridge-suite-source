apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.microfocus.com/default-replica-count: "1"
    deployment.microfocus.com/runlevel: UP
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "chart.labels" . | indent 8 }}
      annotations:
      {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
      {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
      {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      {{- with ( coalesce .Values.global.nodeSelector .Values.nodeSelector ) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "helm-lib.waitForVault" . | nindent 8 }}
        {{- include "helm-lib.containers.vaultInit" (dict "certNames" (printf "Realm:RE,Common_Name:%s,Additional_SAN:%s/%s/%s.%s,UpdateSecret:true,File_Name:server" .Values.service.name .Values.global.externalAccessHost .Values.service.name .Values.service.name .Release.Namespace) "Values" .Values) | nindent 8 }}

      containers:
      - name: itom-static-files-provider
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.staticFilesProvider.image }}:{{ .Values.staticFilesProvider.imageTag }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 100Mi
            cpu: 0.5
          limits:
            memory: 100Mi
            cpu: 0.5
        ports:
        - containerPort: {{ .Values.tlsListeningPort }}
          name: https

        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        env:
        - name: "LISTENING_PORT"
          value: {{ .Values.listeningPort | quote }}

        - name: "TLS_LISTENING_PORT"
          value: {{ .Values.tlsListeningPort | quote }}

        - name: "TLS_MIN_VERSION"
          value: {{ .Values.global.tls.tlsMinVersion | quote }}

        - name: "TLS_CIPHER_LIST"
          value: {{ include "helm-lib.getTlsCiphers" (dict "Values" .Values "separator" ":" "format" "openssl") }}

        volumeMounts:
          - name: vault-token
            mountPath: /var/run/secrets/boostport.com
          - name: volume-tmp
            mountPath: /tmp
          - name: volume-tmp
            mountPath: /var/lib/nginx

      {{- include "helm-lib.containers.vaultRenew" (dict "Values" .Values) | nindent 6 }}

      volumes:
        - name: volume-tmp
          emptyDir: {}
        - name: vault-token
          emptyDir: {}

