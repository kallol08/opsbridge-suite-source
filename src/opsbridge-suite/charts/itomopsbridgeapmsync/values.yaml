# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
apm:
  svcname: localhost:40006
  config:
    apmname: "apm-sync-service"
    discoveryapmname: "apm"
    discoverydatatype: "apm"
    discoveryjobtype: "recurring"
    discoveryapmtype: "pull"
    multidiscoveryapmtype: ""
    multidiscoverydatatype: ""
    multidiscoveryjobtype: ""

global:
  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  busybox:
    image: itom-busybox
    imageTag: 1.32.0-006
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0011  
  persistence:
    enabled: false
    configVolumeClaim:
    logVolumeClaim:

  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false
  externalAccessHost: 
  nodeSelector: {}
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: itom-docker.orgartifactory.swinfra.net:443
    orgName: hpeswitomsandbox
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  securityContext:
    user: "1999"
    fsGroup: "1999"
  setFqdnInIngress: false
  rbac:
    serviceAccountCreate: true
    roleCreate: true
  cluster:
    k8sProvider: ""

  # Global image references for vault
  vault:
    address: 
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.11.0-0011
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.11.0-0011
  idm:
    integrationUser:
    integrationUserKey:
    adminUser:
    adminKey:
    transportUser:
    transportUserKey:

  database:
    #Whether Embedded DB[postgres] should be used
    internal: true
    #Internal database connection details.
    internalDatabaseDetails:
      host: 
      port:
      name: 
      user: 
      schema: 
    # db engine type: postgresql or oracle (not supported by Config Manager Service). default: postgresql
    # Used by IDM and BVD
    type: postgresql
    #Database JDBC-formatted URL, Once set, host/port/type/sid/ServiceName/connectionString will be ignored. with this, we can support more database and connection style
    # DB host #USED by IDM and BVD
    host: 
    # DB port #USED by IDM and BVD
    port: 
    # Database name for Postgres # #USED by IDM and BVD
    name:
    # Database user for Postgres
    user:
    # Database schema name for Postgres
    schema:
    # true when TLS is enabled # USED by IDM and BVD
    tlsEnabled:
    # TLS cert # Used by BVD
    tlsCert:
  monitoringService:
    jobFetcher:
      imageTag:
      image:
jobfetcher:
  imageTag: ${jobcollector.app.version}
  image: "itom-monitoring-job-fetcher"
  config:
    messageTopic: apm
resources:
  limits:
    cpu: "2"
    memory: "2048Mi"
  requests:
    cpu: "0.1"
    memory: "200Mi"
collectionscheduler:
  svcname: itom-monitoring-job-scheduler-svc
  port: 40000

#####################
# Image definitions
#####################
itomopsbridgeapmsyncservice:
  image: itom-apm-sync-service
  imageTag: 24.2.1-5
  managedby: Microfocus
  capname: itom-apm-config-sync-service
  appcontext : apm

config:
  replicaCount: 1
  probe:
    initialDelaySeconds: 60
  debug:
    enabled: "false"


deployment:
  rbac:
    serviceAccount: itom-apm-config-sync-service-sa
    roleBinding: itom-apm-config-sync-service-rb

redis:
  host: "cs-redis"
  svcname: cs-redis
  port: 6380
  passwdkey: "redis_pwd"
  srvbasename: cs-redis

credential:
  enabled: "true"
  managerUrl: "https://credential-manager:5333"

authoritycheck:
  enabled: "true"
  
log:
  level: "INFO"
