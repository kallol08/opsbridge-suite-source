hsodemoapp:
  image: "itom-monitoring-hso-sample-data-injector"
  imageTag: 24.2-52
  svcname: localhost:40006
  port: 40006
  config:
    replicaCount: 1
    monitoredBy: "MonitoringService"
hsodemoautoconfigurejob:
  image: itom-monitoring-hso-demo-autoconfigure-job
  imageTag: 24.2-024
  #FQDN for Monitoring Admin service
  monitoringAdminHost: itom-monitoring-admin-svc
  #Port for Monitoring Admin service
  monitoringAdminPort: 8443
  #FQDN for IDM service
  idmHost: itom-idm-svc
  #Port for IDM service
  idmPort: 18443
  #FQDN for StaticFiles service.
  staticFilesHost: itom-opsb-resource-bundler-svc
  #Port for StaticFiles service.
  staticFilesPort: 9443
  #FQDN for HSO sample data injector service.
  hsoSampleDataInjectorHost: itom-monitoring-hso-demo-app-svc
  #Port for HSO sample data injector service.
  hsoSampleDataInjectorPort: 40006
  resources:
    limits:
      cpu: "100m"
      memory: "250Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
  config:
    admin:
      replicaCount: 1
deployment:
  rbac:
    serviceAccount: itom-opsb-hso-demo-app-sa  
    jobServiceAccount: itom-opsb-hso-demo-app-job-sa  
global:
  saas:
    externalAccessHost:
    externalAccessPort:
  idm: 
    integrationUser:
    integrationUserKey:
    additionalSeededOrg:
      name:
  cms:
    externalOBM: false
    udProtocol:
    udHostname:
    port:
    udUsername:
    udProbeName:
    GatewayHost:
    GatewayPort:
    GatewayContext:
    customerId: "1"
    cmsGwLimit: "10000"
    secrets:
      admin:
  isUDCollectionEnabled: false
  rbac:
    serviceAccountCreate: true
    roleCreate: true
  nodeSelector: {}
  toolsBase:
    image: itom-tools-base
    imageTag: 1.6.0-0014
  securityContext:
    user: "1999"
    fsGroup: "1999"
  persistence:
    enabled: false
    configVolumeClaim: 
    logVolumeClaim: 
  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: itom-docker.suoartifactory.swinfra.net:443
    orgName: hpeswitomsandbox
    imagePullPolicy: IfNotPresent
  suiteLabel: Worker
  suiteLabelValue: label

  # Global image references for vault
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.21.0-0026
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.21.0-0026

  prometheus:
    deployPrometheusConfig: true      #true = deploy scraping rules (ServiceMonitor, PodMonitor) and alerts (PrometheusRule)
    deployGrafanaConfig: true         #true = deploy configmaps defining the Grafana dashboards
    prometheusSelector:               #define the label(s) that Prometheus looks for when discovering rules.
      prometheus_config: "1"
    grafanaSelector:                  #define the label(s) that Grafana looks for when discovering dashboards.
      grafana_dashboard: "1"

  monitoringService:
    demoMode: false
      
resources:
  limits:
    cpu: "1"
    memory: "4096Mi"
  requests:
    cpu: "0.2"
    memory: "256Mi"
