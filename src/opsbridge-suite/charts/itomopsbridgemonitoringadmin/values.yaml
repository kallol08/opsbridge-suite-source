# Copyright 2023 Open Text.

# The only warranties for products and services of Open Text and its affiliates
# and licensors ("Open Text") are as may be set forth in the express warranty
# statements accompanying such products and services. Nothing herein should be
# construed as constituting an additional warranty. Open Text shall not be
# liable for technical or editorial errors or omissions contained herein. The
# information contained herein is subject to change without notice.

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


global:
  services:
    # User must uncomment the capabilities they want to deploy and comment the ones they do no want to deploy
    opticDataLake:
      #      deploy: false                            # Uncomment the parameter when using Shared Optic Data Lake while installing HyperscaleObservability or AutomaticEventCorrelation or OpticReporting capabilities
      externalOpticDataLake:
        externalAccessHost:                     # External Access Host of the providing deployment
        externalAccessPort:                     # Ingress Controller Port
        integrationUser:                        # IDM Integration User of the providing deployment
        # User must use one of the below connection mechanisms if using Shared Optic Data Lake
        connectUsingNamespace: # Connect using cross-namespace communication
          namespace:                            # Namespace of the providing deployment
        connectUsingExternalAccessHost: # Connect using External Access Host
          diReceiverPort:                       # (External Host) Port of OPTIC Data Lake Ingestion Service
          diAdminPort:                          # (External Host) Port of OPTIC Data Lake Administration Service
          diDataAccessPort:                     # (External Host) Port of OPTIC Data Lake Data Access Service
          diPulsarSslPort:                      # (External Host) Port of OPTIC Data Lake Pulsar SSL service
          diPulsarWebPort:                      # (External Host) Port of OPTIC Data Lake Pulsar Web service
   
  agentlessMonitoring:
    enableSitescope:
    sitescopeServiceUrl: "https://itom-monitoring-sitescope-svc:443"
  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  monitoringService:
    isStaticThresholdingEnabled: 
    isDynamicThresholdingEnabled: 
  busybox:
    image: itom-busybox
    imageTag: 1.32.0-006
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0011
  persistence:
    enabled: false
    configVolumeClaim:
    logVolumeClaim:

  # If isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false
  externalAccessHost: 
  nodeSelector: {}
  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: hpeswitom
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  securityContext:
    user: "1999"
    fsGroup: "1999"
  setFqdnInIngress: false
  rbac:
    serviceAccountCreate: true
    roleCreate: true
  cluster:
    k8sProvider: ""
  vault:
    realmList: "RE:365"

  vault:
    realmList: "RE:365"

  # Global image references for vault
  vault:
    address: 
  vaultRenew:
    image: kubernetes-vault-renew
    imageTag: 0.11.0-0011
  vaultInit:
    image: kubernetes-vault-init
    imageTag: 0.11.0-0011

  prometheus:
    deployPrometheusConfig: true      #true = deploy scraping rules (ServiceMonitor, PodMonitor) and alerts (PrometheusRule)
    deployGrafanaConfig: true         #true = deploy configmaps defining the Grafana dashboards
    prometheusSelector:               #define the label(s) that Prometheus looks for when discovering rules.
      prometheus_config: "1"
    grafanaSelector:                  #define the label(s) that Grafana looks for when discovering dashboards.
      grafana_dashboard: "1"
  idm:
    integrationUser:
    integrationUserKey:
    adminUser:
    adminKey:
    transportUser:
    transportUserKey:
    # Idm tenant name
    tenant:
    orgAware:

  database:
    #Whether Embedded DB[postgres] should be used
    internal: true
    #Internal database connection details.
    internalDatabaseDetails:
      host: 
      port:
      name: 
      user: 
      schema: 
    # db engine type: postgresql or oracle (not supported by Config Manager Service). default: postgresql
    # Used by IDM and BVD
    type: postgresql
    #Database JDBC-formatted URL, Once set, host/port/type/sid/ServiceName/connectionString will be ignored. with this, we can support more database and connection style
    # DB host #USED by IDM and BVD
    host: 
    # DB port #USED by IDM and BVD
    port: 
    # Database name for Postgres # #USED by IDM and BVD
    name:
    # Database user for Postgres
    user:
    # Database schema name for Postgres
    schema:
    # true when TLS is enabled # USED by IDM and BVD
    tlsEnabled:
    # TLS cert # Used by BVD
    tlsCert:

resources:
  limits:
    cpu: "2"
    memory: "2048Mi"
  requests:
    cpu: "0.1"
    memory: "200Mi"

#####################
# Image definitions
#####################
itomopsbridgemonitoringadmin:
  image: itom-monitoring-admin
  imageTag: 24.2.1-4
  managedby: Microfocus
  capname: itom-monitoring-admin

config:
  replicaCount: 1
  monitoringAdminNodePort: 36100
  probe:
    initialDelaySeconds: 200
  featuregate:
    configmap: itom-monitoring-admin-cm

deployment:
  rbac:
    serviceAccount: itom-opsbridge-monitoring-admin-sa
    roleBinding: itom-opsbridge-monitoring-admin-rb
  database:
    userPasswordKey: DB_USER_PASSWORD_KEY
    schema: monitoringadminschema


redis:
  host: "cs-redis"
  port: 6380
  passwdkey: "redis_pwd"
  enabled:

async:
  expiryTime: 1800
  
sis:
  enabled:
  adapter:
  
apm:
  enabled:
  adapter:
  
threshold:
  enabled: "true"
  servicesUrl: "https://itom-perf-mgmt-threshold-svc:41000"

diadmin:
  host: "itom-di-administration-svc"
  port: "18443"

credential:
  enabled: "true"
  managerUrl: "https://credential-manager:5333"

authoritycheck:
  enabled: "true"

rbac:
  adminRole: "monitoringServiceAdminRole"
  securityUserRole: "monitoringServiceSecurityUserRole"
  userRole: "monitoringServiceUserRole"
  
log:
  level: "INFO"

obm:
 url:
