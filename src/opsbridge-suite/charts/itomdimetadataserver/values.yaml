#
# Copyright 2023 Open Text.
#
# The only warranties for products and services of Open Text and its affiliates and licensors (“Open Text”)
# are as may be set forth in the express warranty statements accompanying such products and services.
# Nothing herein should be construed as constituting an additional warranty. Open Text shall not be liable
# for technical or editorial errors or omissions contained herein. The information contained herein is subject
# to change without notice.
#
# Except as specifically indicated otherwise, this document contains confidential information and a valid
# license is required for possession, use or copying. If this work is provided to the U.S. Government,
# consistent with FAR 12.211 and 12.212, Commercial Computer Software, Computer Software
# Documentation, and Technical Data for Commercial Items are licensed to the U.S. Government under
# vendor’s standard commercial license.
#
# Default values for dp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
dimetadataserver:
  probe:
    startup:
      enabled: true
      initialDelaySeconds: 40
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 110
      successThreshold: 1

    liveness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 1
      successThreshold: 1

    readiness:
      enabled: true
      initialDelaySeconds: 1
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 1
      successThreshold: 1
  config:
    vertica:
      resourcePoolName: "itom_di_stream_respool"

    hikaricp:
      connectionTimeout: "60000"
      connectionMaximumLifetime: "1800000"
      minimumIdleConnection: "2"
      maximumPoolSize: "10"
      connectionPoolName: "store_once_pool"

    configServer:
      connectRetryDelayMs: "30000"
    scheduledDataCleanupIntervalDays: "1"
    verticaAnalyzeStatisticsIntervalDays: "-1"
    verticaPort: 8443
    verticaTargetPort: 8443
    replicaCount: 1
    processDeleteOnInitialConfiguration: "false"
    jvmArgs: "-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:NativeMemoryTracking=detail -Djdk.tls.maxCertificateChainLength=20"
    logConfigFromConfigmap: true
    allowedPercentageOfColumnsToDelete: "40%"
    serverTlsEnabledProtocols: "TLSv1.2,TLSv1.3"

global:
  expose:
    ipConfig:
      ipFamilyPolicy: PreferDualStack
      ipFamilies:
  cluster:
    k8sProvider: cdf

  messageBus: "pulsar"

  # persistence.enabled=true means that the PVCs are expected to be dynamically created by the composition chart.
  # Otherwise, persistence.dataVolumeClaim is a persistent volume claim for storing data files.
  # persistence.logVolumeClaim is a persistent volume claim for storing log files.
  # If all of the above are undefined, then temporary ephemeral storage will be created (only if isDemo=true)
  persistence:
    enabled: false
    configVolumeClaim:
    logVolumeClaim:
        
  # For custom server CAs (incl. for Vertica). tlsTruststore should be the name of a configMap which contains the certs.
  tlsTruststore:

  # RBAC
  rbac:
    serviceAccountCreate: true
    roleCreate: true

  nodeSelector: {}

  #Will be used as a suffix for schema names
  di:
    tenant: "provider"
    deployment: "default"
    enableAccessPolicy : "false"
    logging:
      useFile:
    multiTenantEnabled: false

  # if isDemo is true, this will allow use of ephemeral storage and other POC aspects.
  isDemo: false

  #All vertica related details are being moved into global so that it can be used across charts
  # rwuser: Read Write vertica User
  # rouser: Read Only user. Used only by Data Access
  # rwuserkey: Password for Read Write vertica user
  # rouserkey: password for Read only vertica user
  vertica:
    embedded: false
    host:
    rwuser:
    rwuserkey: ITOMDI_DBA_PASSWORD_KEY
    rouser:
    rouserkey: ITOMDI_DBA_PASSWORD_KEY
    db:
    port:
    tlsEnabled: "true"
    #purgeAfterDelete: "false"

  externalAccessHost:

  docker:
    # set the global.docker.registry and orgName to your internal Docker registry/org
    registry: localhost:5000
    orgName: 
    imagePullSecret: ""
    imagePullPolicy: IfNotPresent

  # User ID and group ID to run as
  securityContext:
    user: "1999"
    fsGroup: "1999"

  # global image definitions
  vaultRenew:
    #registry: localhost:5000
    #orgName: 
    image: kubernetes-vault-renew
    imageTag: 0.10.0-0019
  vaultInit:
    #registry: localhost:5000
    #orgName: 
    image: kubernetes-vault-init
    imageTag: 0.10.0-0019
  toolsBase:
    image: itom-tools-base
    imageTag: 1.1.0-0018
  fluentbit:
    fluentbitSelector:
      labelName: "deployment.microfocus.com/fluentbit-config"
      labelValue: "true"
di:
  cloud:
    externalAccessHost:
      dataAccess:

resources:
  limits:
    cpu: "1"
    memory: "3072Mi"
  requests:
    cpu: "0.2"
    memory: "512Mi"

# Assigning pods to cluster nodes
nodeSelector: {}
deployment:
  rbac:
    serviceAccount: ""

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app"
                operator: In
                values:
                  - itom-di-metadata-server
          topologyKey: "kubernetes.io/hostname"

#####################
# Image definitions
#####################
metadataserver:
  image: itom-data-ingestion-metadata-server
  imageTag: 2.12.1-5
