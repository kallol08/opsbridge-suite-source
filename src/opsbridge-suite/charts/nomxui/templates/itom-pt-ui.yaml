{{/*# Copyright 2023 Open Text*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: itom-pt-ui
  labels:
    name: itom-pt-ui
  annotations:
    deployment.microfocus.com/default-replica-count: {{ .Values.deployment.replicas | quote }}
    deployment.microfocus.com/runlevel: UP
    {{- if .Values.global.tlsTruststore }}
    configmap.reloader.stakater.com/reload: {{.Values.global.tlsTruststore | quote }}
    {{- end}}
spec:
  selector:
    matchLabels:
      name: itom-pt-ui
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: itom-pt-ui
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ required "Required value not defined: vaultAppRole" .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      serviceAccountName: itom-pt-ui

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.securityContext.user }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      terminationGracePeriodSeconds: 300
      initContainers:
      {{- include "helm-lib.waitForVault" . | nindent 6 }}
      {{ $bvdHost := .Values.deployment.bvdExplore.service }}
      {{ $bvdPort := .Values.deployment.bvdExplore.port }}
      {{- include "helm-lib.waitFor" (dict "service" $bvdHost "port" $bvdPort "Values" .Values) | nindent 6 }}
      {{ $idmHost := include "helm-lib.getInternalIdmHost" . | default (printf "%s%s" .Values.deployment.idm.namePrefix .Values.deployment.idm.service) }}
      {{ $idmPort := include "helm-lib.getInternalIdmPort" . | default .Values.deployment.idm.port }}
      {{ if not (eq $idmHost $bvdHost) }}
      {{- include "helm-lib.waitFor" (dict "service" $idmHost "port" $idmPort "Values" .Values) | nindent 6 }}
      {{ end }}

      {{- include "helm-lib.containers.vaultInit" (dict "certNames" (printf "Realm:RE,Common_Name:itom-pt-ui,Additional_SAN:%s/itom-pt-ui/itom-pt-ui.%s" .Values.global.externalAccessHost  .Release.Namespace) "Values" .Values) | nindent 6 }}

      containers:
      - name: itom-pt-ui
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.nomUi.image }}:{{ .Values.nomUi.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        ports:
        - containerPort: 8443
        livenessProbe:
          httpGet:
            path: /health/
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 660
          periodSeconds: 60
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /health/
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 60
          timeoutSeconds: 15
          periodSeconds: 30
          failureThreshold: 20
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["CHOWN", "DAC_OVERRIDE", "FSETID", "FOWNER", "MKNOD", "SETGID", "SETUID", "SETFCAP", "SETPCAP", "NET_BIND_SERVICE", "SYS_CHROOT", "KILL", "AUDIT_WRITE", "NET_RAW"]
        env:
        - name: INTEGRATION_ADMIN_USER_KEY
          value: {{ .Values.adminUser | quote }}
        - name: INTEGRATION_ADMIN_PASSWORD_VAULT_KEY
          value: {{ .Values.adminUserPasswordKey | quote }}
        - name: BVD_EXPLORE_SERVICE_HOST
          value: {{ $bvdHost | quote }}
        - name: BVD_EXPLORE_SERVICE_PORT
          value: {{ $bvdPort | quote }}
        - name: NOM_ADMIN_USER_KEY
          value: {{ .Values.adminUser | quote }}
        - name: NOM_ADMIN_PASSWORD_KEY
          value: {{ .Values.adminUserPasswordKey | quote }}
        - name: isCoso
          value: {{ (((.Values.global.services).opticReporting).deploy) | default "false" | quote }}
        - name: PERF_DATASOURCE
          {{- include "helm-lib.injectVar" (dict "varName" "perfTroubleshooting.datasource" "Values" .Values "Template" .Template) | nindent 10 }}
        - name: isEpr
          value: {{ .Values.global.isEpr | quote }}
        - name: NOM_CERTIFICATES_DIR
          value: "/var/opt/nom/certificates"
        - name: FQDN
          value: {{ .Values.global.externalAccessHost | quote }}
        - name: NOM_UI_HTTPS_PORT
          value: "8443"
        - name: SKIPNOMCONFIG
          value: {{ .Values.skipNomConfig | quote }}
        - name: IDM_HOST
          value: {{ $idmHost | quote }}
        - name: IDM_PORT
          value: {{ $idmPort | quote }}
        - name: IDM_TENANT
          value: {{ (((.Values.global.idm).additionalSeededOrg).name) | default "Provider" | quote }}
        {{- if ne (include "helm-lib.getBvdExploreHost" .) "" }}
        - name: BVD_REMOTE_EXPLORE_HOST
          value: {{ include "helm-lib.getBvdExploreHost" . }}
        - name: BVD_REMOTE_EXPLORE_PORT
          value: {{ include "helm-lib.getInternalBvdPort" . | quote }}
        {{- end }}
        - name: BASEDIR
          value: "/"
        - name: IS_CNO_DEPLOYED
          value: {{ (((.Values.global.services).cloudObservability).deploy) | default "false" | quote }}
        - name: ITOM_CDF_EXTERNAL_SSL_CERTS_DIR
          value: /var/opt/OV/certs
        {{- include "helm-lib.getTlsEnvVars" . | nindent 8 }}
        volumeMounts:
        - name: ui-data-vol
          mountPath: /var/opt/OV
          subPath: ui-app
        - name: ui-log-vol
          mountPath: /var/opt/OV/log
          subPath: ui-app
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
        - name: temp
          mountPath: /tmp
        - name: bvd-explore-var
          mountPath: /var/bvd
          subPath: bvd/var/bvd
        - name: certs-volume
          mountPath: /var/opt/OV/certs
        - name: bvdclicert-dir
          mountPath: /bvdCliCert
        - name: ui-data-vol
          mountPath: /var/opt/OV/shared/config
          subPath: ui-config

      {{- include "helm-lib.containers.vaultRenew" (dict "Values" .Values) | nindent 6 }}
      restartPolicy: Always
      volumes:
      - name: ui-conf-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: ui-data-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "dataVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: ui-log-vol
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: bvd-explore-var
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: vault-token
        emptyDir: {}
      {{- if .Values.global.tlsTruststore }}
      - name: certs-volume
        configMap:
          name: {{ .Values.global.tlsTruststore }}
      {{- end }}
      - name: temp
        emptyDir: {}
      - name: bvdclicert-dir
        emptyDir: {}
