{{/*# Â© 2023 Open Text*/}}
{{/*#*/}}
{{/*#*/}}
{{/*#*/}}
{{ if .Values.global.isAgentMetricCollectorEnabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: itom-monitoring-collection-autoconfigure-job-{{ randAlphaNum 5 | lower }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: itom-monitoring-collection-autoconfigure-job
spec:
  backoffLimit: 0
  template:
    metadata:
      name: itom-monitoring-collection-autoconfigure-job
      labels:
        app.kubernetes.io/name: itom-monitoring-collection-autoconfigure-job
        app.kubernetes.io/managed-by: {{ .Release.Namespace }}
        app.kubernetes.io/version: {{ .Values.itomcollectionautoconfigurejob.imageTag }}
        itom.microfocus.com/capability: monitoring_service
        tier.itom.microfocus.com/backend: backend
        app: itom-monitoring-collection-autoconfigure-job
      annotations:
        {{- if .Values.global.vaultAppRole }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-{{ .Values.global.vaultAppRole }}
        {{- else }}
        pod.boostport.com/vault-approle: {{ .Release.Namespace }}-default
        {{- end }}
        pod.boostport.com/vault-init-container: install
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Values.deployment.rbac.serviceAccount }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.user }}
        fsGroup: {{ .Values.global.securityContext.fsGroup }}
      initContainers:
      - name: waitfor-itom-vault-8200
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: IfNotPresent
        command: [ "sh", "-c", "until nc -z itom-vault 8200 -w 5 ; do echo waiting for itom-vault:8200...; sleep 5; done; exit 0"]
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      {{- include "helm-lib.containers.vaultInit" (dict "containerName" "install" "certNames" (printf "itom-monitoring-collection-autoconfigure-job") "Values" .Values) | nindent 6 }}
      - name: waitforservices
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.global.toolsBase.image }}:{{ .Values.global.toolsBase.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        resources: 
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 10Mi  
        securityContext:
          runAsUser: {{ .Values.global.securityContext.user }}
          runAsGroup: {{ .Values.global.securityContext.fsGroup }}
        command: [ "sh", "-c", "if [[ \"$IS_OPSB_REPORTING\" == \"true\" ]]; then services=\"$CONTENT_MGR_ENDPOINT\n$IDM_ADDR\n$SO_ENDPOINT\n$MONITORING_ADMIN_ENDPOINT\n$BVD_ENDPOINT\";  echo \"Reporting enabled, checking dependency services:\n${services}\n\" ; elif [[ \"$IS_EDGE_DEPLOYMENT\" == \"true\" ]]; then  services=\"$IDM_ADDR\n$STATICFILES_SVC_ENDPOINT\n$MONITORING_ADMIN_ENDPOINT\"; echo \"On Edge Deployment, checking dependency services:\n${services}\n\"; else services=\"\"; echo \"No services to check\"; fi; for svc in $services; do until nc -z ${svc%:*} ${svc#*:} -w 30; do echo waiting for $svc...; sleep 30; done; done; sleep 30;" ]
        env:
        {{- if .Values.global.opsBridge.externalAccessHost }}
        - name: "IS_EDGE_DEPLOYMENT"
          value: {{ true |  quote }}
        {{- else}} 
        - name: "IS_OPSB_REPORTING"
          valueFrom:
            configMapKeyRef:
              key: reporting
              name: opsb-cm
        {{- end}}
        - name: CONTENT_MGR_ENDPOINT
          value: {{ .Values.itomcollectionautoconfigurejob.contentManagementHost }}:{{ .Values.itomcollectionautoconfigurejob.contentManagementPort }}
        - name: MONITORING_ADMIN_ENDPOINT
          value: {{ .Values.itomcollectionautoconfigurejob.monitoringAdminHost }}:{{ .Values.itomcollectionautoconfigurejob.monitoringAdminPort }}
        - name: STATICFILES_SVC_ENDPOINT
          value: {{ .Values.itomcollectionautoconfigurejob.staticFilesHost }}:{{ .Values.itomcollectionautoconfigurejob.staticFilesPort }}
        - name: SO_ENDPOINT
          value: {{ include "helm-lib.getDiAdminHost" . | default .Values.itomcollectionautoconfigurejob.diadminHost }}:{{ include "helm-lib.getDiAdminPort" . | default .Values.itomcollectionautoconfigurejob.diadminPort }}
        - name: IDM_ADDR
          value: {{ .Values.global.idm.serviceName | default .Values.itomcollectionautoconfigurejob.idmHost }}:{{ .Values.global.idm.internalPort | default .Values.itomcollectionautoconfigurejob.idmPort }}
        - name: BVD_ENDPOINT
          value: {{ .Values.itomcollectionautoconfigurejob.bvdHost | default "bvd-www" }}:{{ .Values.itomcollectionautoconfigurejob.bvdPort | default "4000" }}
      containers:
      - name: itom-monitoring-collection-autoconfigure-job
        image: {{ .Values.global.docker.registry }}/{{ .Values.global.docker.orgName }}/{{ .Values.itomcollectionautoconfigurejob.image }}:{{ .Values.itomcollectionautoconfigurejob.imageTag }}
        imagePullPolicy: {{ .Values.global.docker.imagePullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.itomcollectionautoconfigurejob.resources.requests.cpu }}
            memory: {{ .Values.itomcollectionautoconfigurejob.resources.requests.memory }}
          limits:
            cpu: {{ .Values.itomcollectionautoconfigurejob.resources.limits.cpu }}
            memory: {{ .Values.itomcollectionautoconfigurejob.resources.limits.memory }}
        volumeMounts:
          - name: vault-token
            mountPath: /var/run/secrets/boostport.com
          - name: collection-autoconfigure-job-log-volume
            mountPath: /logs
            subPath: collection-autoconfigure/job
          - name: collection-autoconfigure-job-conf-volume
            mountPath: /var/opt/OV/datafiles
            subPath: co/oa/oa1/conf/OV/datafiles   
          - name: collection-autoconfigure-job-conf-volume
            mountPath: /collections/{{ .Release.Namespace }}
            subPath: itom-opsb-content-manager-server/collections
          - name: collection-autoconfigure-job-conf-volume
            mountPath: /bbc_conf
            subPath: co/oa/oa1/conf/bbc_conf
          - name: collection-autoconfigure-job-conf-volume
            mountPath: /nodelistfilter
            subPath: itom-opsb-content-administration/var/content-administration/content/custom
          - name: collection-autoconfigure-job-conf-volume
            mountPath: /configurations
            subPath: collection-autoconfigure/configurations
        securityContext:
          allowPrivilegeEscalation: false
        env:
        {{- if .Values.global.opsBridge.externalAccessHost }} 
        - name: "IS_EDGE_DEPLOYMENT"
          value: {{ true | quote }}
        - name: "IS_OPSB_REPORTING"
          value: {{ true | quote }}
        - name:  "OpsB_EXTERNAL_ACCESS_HOST"
          value: {{ .Values.global.opsBridge.externalAccessHost | quote }}
        - name:  "OpsB_EXTERNAL_ACCESS_PORT"
          value: {{ .Values.global.opsBridge.externalAccessPort | quote }}
        {{- if .Values.global.opsBridge.proxy.host }}
        - name:  HTTP_PROXY
          value: {{ .Values.global.opsBridge.proxy.host }}:{{ .Values.global.opsBridge.proxy.port }}
        - name:  HTTPS_PROXY
          value: {{ .Values.global.opsBridge.proxy.host }}:{{ .Values.global.opsBridge.proxy.port }}
        - name:  NO_PROXY
          value: "localhost,127.0.0.1,itom-monitoring-admin-svc,itom-opsb-resource-bundler-svc"
        - name:  PROXY_USER
          value: {{ .Values.global.opsBridge.proxy.user }}
        - name:  PROXY_PASSWORD
          value: {{ .Values.global.opsBridge.proxy.password }}
        {{- end }}
        {{- else }}
        - name: "IS_EDGE_DEPLOYMENT"
          value: {{ false | quote }}
        - name: "IS_OPSB_REPORTING"
          valueFrom:
            configMapKeyRef:
              key: reporting
              name: opsb-cm
        {{- end }}
        
        {{- if eq .Values.global.amc.externalOBM true }}		  
        - name: "RTSM_USER"
          value:  {{ required "Required value is not defined: global.amc.rtsmUsername" .Values.global.amc.rtsmUsername | quote }} 
        - name: "OBM_HOSTNAME"
          value:  {{ required "Required value is not defined: global.amc.obmHostname" .Values.global.amc.obmHostname | quote }} 
        - name: "OBM_PORT"
          value:  {{ required "Required value is not defined: global.amc.port" .Values.global.amc.port | quote }} 
        - name: "RTSM_PROTOCOL"
          value:  {{ default "https" .Values.global.amc.rtsmProtocol | quote }}
        - name: "RTSM_PASSWORD"
          value:  "OBM_RTSM_PASSWORD"
        {{- else }}
        - name: "RTSM_USER"
          value:  "UISysadmin"
        - name: "OBM_HOSTNAME"
          value:  "itom-ucmdb-svc"
        - name: "OBM_PORT"
          value:  "8443"
        - name: "RTSM_PROTOCOL"
          value:  "https"
        - name: "RTSM_PASSWORD"
          value:  "ucmdb_uisysadmin_password"
        {{- end }}
        - name: "IS_CONTAINERIZED_OBM"
          value: {{ .Values.global.amc.containerizedOBM | quote }}
        - name: "IS_EXTERNAL_OBM"
          value: {{ .Values.global.amc.externalOBM | quote }}
        {{- if .Values.global.amc.customTqls }}
        - name: "CUSTOM_TQLS"
          value: {{ .Values.global.amc.customTqls | quote }} 
        {{- end }}
        - name: "NAMESPACE"
          value: {{ .Release.Namespace | quote }}
        - name: "APPROLE"
          value: "suite"
        - name: "ROLE_ID"
          value: {{ .Values.global.vaultRoleId | quote }}
        - name: "VAULT_ADDR"
          value:  {{ .Values.global.vaultAddr | quote }}
        - name: "STATICFILES_SVC"
          value:  {{ .Values.itomcollectionautoconfigurejob.staticFilesHost }}:{{ .Values.itomcollectionautoconfigurejob.staticFilesPort }}
        - name: "VAULT_SECRET_DIR"
          value: /var/run/secrets/boostport.com
        - name: "MONITORING_ADMIN_SVC"
          value: {{ .Values.itomcollectionautoconfigurejob.monitoringAdminHost }}:{{ .Values.itomcollectionautoconfigurejob.monitoringAdminPort }}
        - name: "EXTERNAL_ACCESS_HOST"
          value:  {{ .Values.global.externalAccessHost | quote }}
        - name: "EXTERNAL_ACCESS_PORT"
          value:  {{ .Values.global.externalAccessPort | quote }}
        - name: "IS_AUTO_START_COLLECTION"
          value:  {{ .Values.global.autoStartAgentMetricCollector | quote }}
        - name: "IS_AMC_ENABLED"
          value:  {{ .Values.global.isAgentMetricCollectorEnabled | quote }}          
        - name: "CS_PASSWORD_KEY"
          value: {{ default "idm_integration_admin_password" | quote }}
        - name: "CS_USER"
          value: {{ default "integration_admin" | quote }}
        - name: "UPDATE_CONFIGURATIONS"
          value:  {{ .Values.global.amc.autoconfigure.UpdateConfigurations | default true | quote }}
        - name: "CERTIFICATE_CHECK_RETRY_INTERVAL_MINS"
          value:  {{ .Values.global.amc.autoconfigure.CertCheckRetryInterval | default 2 | quote }}
        - name: "CERTIFICATE_CHECK_RETRY_COUNT"
          value:  {{ .Values.global.amc.autoconfigure.CertCheckRetryCount | default 60 | quote }}
        - name: "WAIT_FOR_SCHEMA_INSTALLATON_MINS"
          value:  {{ .Values.global.amc.autoconfigure.WaitForSchemaInstallation | default 3 | quote }}
        - name: "CREATE_OR_UPDATE_RETRY_COUNT"
          value:  {{ .Values.global.amc.autoconfigure.CreateOrUpdateRetryCount | default 3 | quote }}
        - name: "ENDPOINT_RETRY_INTERVAL_MINS"
          value:  {{ .Values.global.amc.autoconfigure.EndpointRetryInterval | default 1 | quote }}
        - name: "ENDPOINT_RETRY_COUNT"
          value:  {{ .Values.global.amc.autoconfigure.EndpointRetryCount | default 10 | quote }}
        - name: CONTAINER_NAME
          value: itom-monitoring-collection-autoconfigure-job
        - name: POD_NAME
          valueFrom:
           fieldRef:
            fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
           fieldRef:
            fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
           fieldRef:
            fieldPath: spec.nodeName
      {{- with (coalesce .Values.nodeSelector .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: vault-token
        emptyDir: {}
      - name: collection-autoconfigure-job-conf-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "configVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
      - name: collection-autoconfigure-job-log-volume
        {{- include "helm-lib.pvcStorage" (dict "claim" "logVolumeClaim" "Release" .Release "Template" .Template "Values" .Values ) | nindent 8 }}
{{- end }}        
