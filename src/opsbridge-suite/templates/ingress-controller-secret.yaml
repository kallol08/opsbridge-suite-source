{{- $ingoreTlsCertSet := false }}
{{- $renewCertOwn := false }}
{{- $secret := lookup "v1" "Secret" .Release.Namespace "nginx-secret-certv" }}
{{- if $secret }}
{{- if $secret.metadata.annotations }}
{{- $ingoreTlsCertSet = index $secret.metadata.annotations  "deployments.microfocus.com/ingore-tls-cert" }}
{{- $renewCertOwn = index $secret.metadata.annotations  "deployment.microfocus.com/owner" }}
{{- end }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: nginx-secret-certv
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-800"             #This secret needs to be created as a pre-hook resource for the certificate validator job
    {{- if (index .Values "itom-ingress-controller" "nginx" "secretAnnotations") }}
    {{- toYaml (index .Values "itom-ingress-controller" "nginx" "secretAnnotations") | nindent 4 }}
    {{- end }}

type: Opaque
{{- if and (not $ingoreTlsCertSet) (not $renewCertOwn) }}
{{- if or (and (index .Values "itom-ingress-controller" "nginx" "tls" "key") (index .Values "itom-ingress-controller" "nginx" "tls" "cert")) (and .Values.global.tls.key .Values.global.tls.cert) }}
data:
  tls.key: {{ include "itom-nginx-ingress-controller.tlsKey" . }}
  tls.crt: {{ include "itom-nginx-ingress-controller.tlsCert" . }}
{{- end }}
{{- else }}
{{- if $secret.data }}
data:
  tls.key: {{ index $secret.data "tls.key" }}
  tls.crt: {{ index $secret.data "tls.crt" }}
{{- end }}
{{- end }}